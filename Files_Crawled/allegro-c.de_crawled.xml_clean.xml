<?xml version="1.0" encoding="utf-8"?>
<root>
<item>
<fragment>
&gt;  .Stil21 {color: #BE1E3C;font-style: italic;}.Stil21 {color: #BE1E3C;font-style: italic;}.Stil31 {color: #666666}.Stil31 {color: #666666}    allegro-C - Bibliothekssoftware                                            Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig          AKTUELL: V35.7 ab 28.07.2015  Was ist allegro-C ?  allegro-C ist ein konfigurierbares Datenbanksystem , das universell für Bibliotheksaufgaben geeignet ist.   Es wird an der Universitätsbibliothek  Braunschweig entwickelt und  durch das Niedersächsische Ministerium für Wissenschaft und Kultur gefördert (s. dazu die Entwicklungsgeschichte 1980-2013 ).  Die Anfänge des Systems entstanden ab 1980 ; seit 1985 existieren Versionen  für PC und UNIX, ab 1998 kamen Versionen für Windows dazu. Viele hundert Bibliotheken  aller Typen und Größen in ganz Deutschland (siehe Karte) und in einigen anderen Ländern zählen heute zu den  Anwendern.  Die allegro-C Software läuft auf unterschiedlichen Plattformen wie Windows ,  Linux, Solaris sowie als Web-Anwendung. In jedem Fall ist es mehrplatzfähig. Zum Kennenlernen gibt es einen Schnellkurs  in 12 Schritten; Sie können auch sofort mit einer eigenen Datenbank starten .   Welche Funktionen kann es erfüllen?  Katalogisierung , OPAC , Ausleihe , Erwerbung , Zeitschriften , Web-Anbindung  Anwender können jede Funktion modifizieren und ausbauen sowie eigene, neue Anwendungen konfigurieren, unter Windows und im Netz.   Wie groß ist die Kapazität? Mit allegro-C lassen sich mehr als 20 Mio. Datensätze verwalten. Beispiel: der alte Verbundkatalog.  Gibt es ein festes Datenschema? Nein, allegro kann für viele verschiedene Datenschemata konfiguriert werden, ist also offen für  eigene Entwicklungen. Mit der Skriptsprache  FLEX können Vorgänge aller Art automatisiert werden, in vielen Fällen unabhängig vom Schema.  Was für eine relationale Datenbank steckt dahinter? Keine, allegro ist eine sog. NoSQL -Datenbank, d.h. ein nichtrelationales System.      [i] zuletzt aktualisiert:         28.07.2015 Email: ub@tu-bs.de       Aktuelles      a35 Datenbanken integriert in ein Corporate Design  a35 Beispiele mit HTML5  a35 mobile Anwendungen  Schema Oberfläche allegro-C  allegro-C Anwender 2013  Aktuelle Version   V35.7 (nur mit Passwort)   V35.5 (ohne Passwort!)  Systemhandbuch V34 (05.14)  Highlights  RDA-Beispieldaten  Neuer Überblick (Fortbildung)   a35 : Web-Oberfläche 2015   VuFind 2.x einsetzen (v34.6)   Suchmaschinentechnik mit SOLR (v30.6)  XML + OAI (v29.0)  Z39.50 Client Funktion (v27.0)  allegro + SQL (v25.0)  allegro + XML (vor v25.0)  integr. Browser: JanaS  allegro + Unicode 
</fragment>
</item>
<item>
<fragment>
&gt;    allegro-C Unicode-Unterstützung ab V23                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig            allegro-C Unicode-Unterstützung      ab V23          offiziell:  http://www.unicode.org/standard/WhatIsUnicode.html  Demo-Datenbank   This text in English   Was istUnicode?  Wenn man auf demBildschirm ein Zeichensieht, was steckt dann wirklich dahinter?  Zwei Dingemuß man dazu wissen:   Computerkönnen nur mit Zahlen umgehen,d.h. alles muß mit Zahlen verschlüsselt werden. Aberes ist nochschlimmer:  Alles, wasgespeichert wird, muß inZahlen von 0 bis 255 verwandelt werden. Eine solche Zahl nennt man ein"Byte". In Wirklichkeit, ganz tief drinnen, besteht so eine Zahl aus 8Nullen oder Einsen - deshalb gibt es nur 256 = 2 8 möglicheByte-Werte.   Seit Anbeginn der ernsthaftenComputerei gibt esdie Gleichung Zeichen = Byte , oder besser gesagt,dieGewohnheit, für jedes Zeichen ein Byte zu benutzen. Nehmen wirdenBuchstaben A . Der wird in heutigen Computern immermit derByte-Zahl 65 verschlüsselt, B ist 66, Cist 67 usw. bis 90 fürZ. Und die Kleinbuchstaben? Dafür kann man nicht dieselbenZahlennehmen, das ist klar. Für das a wird die 97 genommen,fürdas b die 98, c ist 99 usw. bis 122 für das z. Warum geradedieseZahlen? Das ist eine schon recht alte Konvention, sie ist ein Teil dessog. Industriestandards, der meistens ASCII genannt wird ( A merican S tandard C ode for I nformation I nterchange).Diese Konvention schreibt vor, daß die normalen Buchstaben,Ziffernund Satzzeichen alle mit Zahlen zwischen 32 und 126verschlüsseltwerden. Für den "oberen" Bereich, 128-255, gibt es keineinternational einheitliche Festlegung.  (Eine umfassende und sogarunterhaltsameGeschichte der Computer-Codierungen schrieb TomJennings .)  Hier ist dievollständige ASCII-Tabelle:     DieseTabelle, aber sonst sogut wie nichts, haben bis heute alle Computersysteme gemeinsam.  Mansieht: die deutschenSonderbuchstaben (Umlaute und ß) gehören nicht zumStandard.  DerIndustriestandard betrifftnur die Werte bis 126, wie oben zu sehen, wobei die Werte 0 bis 31und 127 Steuerfunktionen haben, also nicht für "richtige" Zeichen zurVerfügungstehen (und wenn, dann ungenormt). Die Codes 13 und 10 z.B. stehen traditionell für"Wagenrücklauf" und"Zeilenvorschub" - das stammt aus der Zeit der mechanischenEndgeräte(z.B. Fernschreiber und Zeilendrucker), aber noch immer dienen dieseZeichen als Zeilentrenner in vielen Dateien. Das soll hier nichtvertieft werden. Nu r soviel: UNIX ve r wende t nu r die 10,Windows die Kombination 13 10, Mac nu r die 13.  Dieobere Hälfte der 256 Codes,also 128-255, wurde von den diversen Herstellern von Hard- und Softwareunterschiedlich und in etlichen nationalen Ausprägungenverwendet, z.B.haben DOS und Windows nicht dieselben Zeichensätze und -codes.Da istz.B. das ä in DOS-Dateien mit 132 verschlüsselt, inWindows-Dateienaber mit 228. Mit einer Konkordanztabelle kann man diese Unterschiedeganz gut überwinden. Aber leider reichen 223 Werte (nach Abzugderunteren 32 und der 127!) beiweitem nicht aus, um alle Zeichen zuverschlüsseln, diein den verschiedenen Sprachen vorkommen, selbst wenn man sich aufdiejenigen beschränkt, die mit lateinischen Buchstabenschreiben. Nimmtman Griechisch und Kyrillisch hinzu, sind es schon viel mehr, und dieostasiatischen Schriften kennen viele tausend Zeichen.  AlsAusweg aus dem Dilemma giltseit einiger Zeit das System "Unicode", das von einer internationalenKörperschaft, dem "Unicode Consortium", erarbeitet wurde undbetreutwird: http://www.unicode.org .  Wiewurde Unicodekonstruiert?   Man gingzunächst einmal daran,noch ohne sich um Codes zu kümmern, einfach nur eine langeListesämtlicher Zeichen aufzustellen, die man zur Darstellung vonTexten wel twei t brauchen würde. Dabei kam man bis heute auf 95.221Zeichen!  Manordnete diese Zeichen dannsinnvoll in Gruppen, wobei an den Anfang die 128 Zeichen desASCII-Codes gesetzt wurden, und zwar in derselben Reihenfolge. Dannnumerierte man die Liste durch. Mit Bytes hat das noch nichts zu tun!Will man aber nun Texte speichern, die aus diesem Zeichenvorratbestehen, dann muß man letztendlich doch alles irgendwie mitHilfe vonBytes (mit je 8 Bit) ausdrücken – anders geht esnicht. Zwangsläu f ig muß manfür jedes Zeichen zwei oder noch mehr Bytes verwenden - diealteGleichung Zeichen=Byte ist untauglich.  ZumVerschlüsseln der vielenNummern mit Hilfe von Bytes wurden verschiedene Möglichkeitenersonnen:    1. ReineUnicode-Methode : Zwei Bytes für jedes Zeichen. DieZeichen mit Nummern oberhalb von 65000 brauchen vier Bytes (bishernutzt das aber niemand). Diese Codes werden oft in der Form U+nnnnangegeben, z.B. U+0041 für das A und U+20AC für dasEuro-Zeichen €. (41ist die hexadezimale Schreibweise von 65 (= 4x16 + 1), 20AC ist dezimal8364.)  Nachteil: Alte, "ganznormale" Dateien ohne Sonderzeichen brauchen dadurch doppelt sovielPlatz wiebisher.  2. GemischteMethoden : Nur 1 Byte für dieASCII-Codes von 0 bis 127,mehrals eins für die anderen Zeichen.  Dazugibt es zwei Varianten:   2a. Codierungen de r Ges t al t  &amp;#N; (sog. Entitäten ,manchmal fälschlichUTF-7 genannt), N ist die Nummer des Zeichens: man nimmt also die Liste derUnicode-Nummern und speichert das Zeichen 128 als &amp;#128; , 129 als &amp;#129; usw.Moderne Browser verstehen das und zeigen dann die korrekten Zeichen.  Dasä bekommt dabei den Wert &amp;#228; , dasEuro-Zeichen € hat &amp;#8364 ; (=U+20AC) d.h. ein einzelnes Sonderzeichenwird mit 6bis 8 Byte gespeichert. Programme, die damit umgehen, müssenimmer aufdie Kombination &amp;# achten: diese leitet imme r dann ein Sonderzeichen ein,wenndahinter Ziffern stehen, beendet durch ein Semikolon. Wer will, kanndie Nummern auch hexadezimal angeben, dann muß noch ein xdavor. DerEuro kommt dann als &amp;#x20AC; daher.  Fürden Export in HTML-Dateienwird die Datei d-html4.apt  bereitgestellt,die aus den OstWest-Codes die korrektenEntitäten macht.  2b. UTF-8 : Man stellteine weitere Liste auf, wobei jeder Zahl jenseits 127 zwei Zahlenzugeordnet werden, die erste muß oberhalb 191, die zweiteoberhalb 127liegen. Das Zeichen 228 bekommt dabei dann die beiden Zahlen (195,164).So kann es in einer Datei, die ja immer aus lauter Byte-Zahlen besteht,keine Verwechslungen geben. Jedes Sonderzeichen wird auf diese Weiseals 2 Byte gespeichert, einige Sonderzeichen (z.B. Euro = E2 82 AC) undalle ostasiatischen Zeichen bekommen 3 Bytes, darauf gehen wir hiernicht ein. Programme, die damit umgehen, müssen beachten,daß Codesoberhalb 191 immer mit dem nachfolgenden Code zusammen ein Zeichenbilden, Codes oberhalb 223 mit den zwei nachfolgenden Bytes.Diezweiten und dritten Bytes liegen immer zwischen 128 und 191.  Fürden Export in HTML4- oderXML-Dateien wird die Datei d-utf8.apt bereitgestellt,die aus den OstWest-Codes die korrektenByte-Zahlenpaare macht. Zum Errechnen dieser Werte für weitereZeichen ist ein JavaScript-Progrämmchen geeignet .     AlsReferenz gibt es eine Amtliche Liste , in der alle verschiedenen Codesstehen, die zu den Zeichen unseres OstWest-Repertoiresgehören. Dieserbei allegro -Anwendern bewährte Zeichensatzumfaßt die amhäufigsten vorkommenden ost- und westeuropäischenBuchstabenzeichen, es gibt eine Codeliste für Windows und einekompatible fürDOS.   Tip: Geben Sie in a99denBefehl  h chara ein,dann sehen Sie die bisherintern verwendeten Codes.  WelcheMethode ist die beste?   Daskommt auf die Daten an, dieman zu verarbeiten hat. Bestehen diese überwiegend ausnormalenBuchstaben, Ziffern und Satzzeichen, dann ist es Methode 2b. Hat manvorwiegend ostasiatische Zeichen, dann Methode 1.  DerPlatzbedarf gilt heutenicht mehr als gravierend, es kommt aber auch auf die Probleme derVerarbeitung an. Methode 1 würde bedeuten, daß alleProgramme auf16bit-Zeichencodes umgestellt werden müßten und alleDateien wären zukonvertieren, jede Daten- oder Indexdatei würde sich dabei inder Größeverdoppeln. Es ist jedoch wegen des hohen Programmieraufwandsillusorisch, allegro auf diese Methode umzustellen.(In denProgrammen wird mit vielen 8-bit-Zeichenkettenvariablen gearbeitet, undviele Funktionen gehen damit um. Dieses alles müßteumgestellt werden.)  DieMethode 2a hat dagegenentscheidende Vorzüge, denn besonders in Web-Anwendungenläßt sichdamit am leichtesten arbeiten: die heutigen Browser könnendieseVerschlüsselungen sofort verstehen und umsetzen. Will man 2banwenden,muß in allen HTML-Dateien die folgende Zeile im-Bereichstehen:    Dannwerden aktuelle Browserdie meisten Zeichen richtig anzeigen (Netscape 4.x nicht!), und zwarsowohl die Codierungen der Methode 2b wie auch 2a! Jedoch: wenn man miteinem HTML-Formular eine Eingabe speichert, d.h. zu einem Serverabschickt, kommen Codes nach Methode 2b dort an. Wenn man auf der Seitedes Servers wenig Arbeit haben will, sind also diese Codierungen vonVorteil.  Sollman aber tatsächlichkünftig jedes ä in der Datenbank als &amp;#228;speichern oder als(195,164)? Das wäre wenig erfreulich, auch weil das ersteredeutlichmehr Bytes braucht als vorher: 6 statt einem für jedenUmlautbuchstaben. Schlimmer noch, weil es in beiden Fällenviel schwieriger ist, daraus für den Index wieder "ae" zu machenoder in der PRESTO- bzw. a99-Anzeige ein ä, zu schweigen vom EingebenundBearbeiten in diesen Programmen. Indexierung und Anzeige konntendennoch sowohlfür 2a wie 2b gelöst werden: siehe dazu"VS-Methode" bzw."P/Q-Tabelle".   EineBesonderheit mußnoch erwähnt werden: Wenn man Buchstaben mit Akzenten braucht,die imnormalen Vorrat nicht vorkommen, dann ist es im OstWest-Code so,daßman das diakritische Zeichen VOR den Buchstaben setzt. Unicode will esumgekehrt, wobei aber fast alle Kombinationen schon als Einzelzeichendefiniert sind, sogar sehr viele Buchstaben mit zwei Diakritika!   Unicodeausbibliothekarischer Sicht  Imanglo-amerikanischen Bibliothekswesen wurde natürlich schon längstüber Unicodenachgedacht und geschrieben.  Eine kleine Abhandlung vonJoan Aliprand (Stanford) erschien 1999 zur IFLA-Konferenz in Bangkokund wurde auch aufDeutsch veröffentlicht.    Diezwei Varianten derUnicode-Anwendung in allegro -Datenbanken(ab V23.2)   Verfahren 1 :Interne Codes unverändert, zusätzliche Zeichen als"HTML4-Entitäten"   Verfahren 2 :Intern alles in UTF-8 codiert, was nicht Standard-ASCII ist  AmtlicheListe der OstWest-Zeichencodes  Verfahren 1     Alle bisherigen Codes des OstWest-Zeichensatzes bleiben innerhalb der Datenbank unverändert bestehen.Das gilt auch für akzentuierte Zeichen, die nicht alsEinzelzeichenexistieren: Diakritiscsehe Zeichen werden VOR die Buchstaben gesetzt.Es ändert sich somit intern nichts. Sogar die DOS-Programmebleibenverwendbar.      Bisherschon möglich:Weitere Zeichen, die man bislang nicht darstellen konnte,können nachMethode 2a codiert werden. (Methode 2b kann nichtverwendetwerden, weil ja der OstWest-Satz viele Codes oberhalb 127umfaßt! BeiVerfahren 2  ist das anders.) Zwar nicht komplett in a99, aberzumindest bei Web-Anwendungen können diese Zeichen dannkorrektangezeigt werden. Zur Unterstützung der Eingabe (Finden undKopierender Codierungen) kann z.B. ein besonderes Register verwendet werdenoderauch eine ViewListe.      NEU: Eine neueMethodik, die der sog. "Verschlüsselungs-Sequenzen" (kurz VS-Methode )ermöglicht es, daß man die 2a-Codierungen brauchbarindexieren oderfür sonstige Zwecke ausgeben kann: aus &amp;#193; (steht fürÁ) kanndamit ein a oder A oder ´A gemacht werden. DieVS-Methode wird in Verlautbarung164 beschrieben (h vb164 eingeben ina99).      Unicodespielt ansonsten nurbei der Kommunikation mit der Außenwelt eine Rolle: beiExport undImport. Dafür gibt es neue Funktionen.    Zumzweiten Punkt: Für dieVS-Methode gibt es eine Datei vs.alg mitüber 300 Sequenzen fürakzentuierte Buchstaben und für die kyrillischen Zeichen.Diese kannman, geeignete Ergänzung der Indexparameter vorausgesetzt, inseineDatenbank einmischen. Siehe auch unten:"Eingabe-Unterstützung". In derDemo-Datenbank von V23: siehe als Beispiel Eintrag unter "zzunicode-testsatz" im Register 1.  DiePHP-Schnittstelle PHPAC ist ab 17.3.2003auf Unicode umgestellt, funktioniert aber auch noch mit den normalenCodes.   Export  Schonmit den bisherigenMitteln (p/q-Befehle) lassen sich sowohl "Entitäten" wie auchUTF-8-Codes erzeugen.   Empfehlung: diebereitgestellte Tabelle d-utf8.apt in Anzeige- oderAusgabeparameter einbinden.   Daseinzige Problem ist das derAkzente. Hierfür wurde ein Unterprogramm erstellt, das ingleicherWeise, nur umgekehrt, beim Import eingesetzt werden kann: es setzt dasdiakritische Zeichen jeweils hinter das nachfolgende Zeichen bzw.umgekehrt. Ausgeführt wird es innerhalb der Exportparameter mit  #da bzw.  #dA vorwärtsbzw. rückwärts., im FLEX: dow a bzw. dow A  ( Beispiel: edrec.php im PHPAC-System)  Daswirkt auf den gesamtenArbeitsspeicher + Hintergrundspeicher (#u-Variablen)!  DieAkzentliste muß in einer derExport-Parameterdateien hinterlegt sein, sie ist dann intern global.Der Standard sieht so aus (Liste aller DOS-Codes der diakritischenOstWest-Zeichen):  pa=181 182183 184 189 190198 199 207 208 209210 211 212 219 222 223 232   Empfehlung: Kopieren Siediese Zeile in Ihre Indexparameter, dann gilt sie überall da,wo esdrauf ankommt. Bei Verwendung in IMPORT.EXE: Einbau in die benutzten Export parameter.   (In derListe der DOS-Akzentcodes findet man die Bedeutungdieser Zahlen.)  Anzeigeparameter  Die heutigen Browser zeigenUTF-8-Codes korrekt an, d.h. hier ist angenehm wenig zu tun, es istkeine Umwandlungstabelle nötig. (PHPAC arbeitet in jedem Fall mitUTF-8, braucht deshalb für den OstWest-Code eine Tabelle: d-utf8.apt ). In a99 muß man in die Anzeigeparameter die Datei du-rtf.apt einbinden, damit man wenigstens imAnzeigefeld z.B. echte kyrillische Zeichen zu sehen bekommt. Darin stehen Zeilen wie  P 208 144 "\u1041?"   [0411] -- &amp;#1041   womit das kyrillische Б in RTFcodiert werden kann. Im Datensatz wird dadurch die Bytekombination 208144 durch \u1041? ersetzt. Die 1041 ist dieselbeZahl, die in der HTML4-Entität &amp;#1041; auftritt.   Import  Damitman damit keine Problemehat, sind folgende Vorkehrungen nötig:    Dasgenannte Unterprogramm,das die getrennt stehenden Akzentzeichen mit dem vorangehenden Zeichenvertauscht (rückwärts)  EinUnterprogramm, dasdiejenigen UTF-8-Codes in einzelne Bytes verwandelt, die imOstWest-Zeichenvorrat vorkommen. (Das Umgekehrte kann die Exportsprachemit den p/q-Befehlen schon immer leisten, s.o.)   UTF-8-Codes, die keineEntsprechung im OstWest-Vorrat haben, werden durch ihreHTML4-Entitätersetzt.    Diese Dinge wurden für V23 programmiert,und zwar auch für die DOS-Programme. Folgendermaßensind dieseFunktionen zu nutzen:   Dieumzuwandelnden UTF-Codesmüssen in u-Befehlen stehen, ebenfalls in einer derverwendetenExport-Parameterdateien. ( Empfehlung füra99:Indexparameterdatei, denn diese wird in jedem Fall geladen.) Dieseu-Zeilen, es können bis zu 800 Stück sein, sehen soaus:        u195 161 160   u 226 130 172 221  u 195 129 065 181  u 195 163 097 232  LATINSMALL LETTER AWITH ACUTE á  EURO SIGN €   LATIN CAPITALLETTER A WITH ACUTE Á  LATIN SMALL LETTERA WITH TILDE ã     DieNamen rechts stehen nur alsKommentar da, sie haben keine Funktion.  Dieallgemeine Struktur ist diese, alleZahlen (3 bis 5 je Zeile) sind 3stellig dezimal anzugeben, genau 1Leerzeichen dazwischen:   uzzz yyy xxxbbb aaa   Kommentar   zzzyyy xxx sinddie dezimalen UTF-8-Codesdes Zeichens. Wenn zzz&lt;224 ist, dann fehlt xxx, was bedeutet,daßes sich um einen 2-Byte-UTF-8-Code handelt.  ZumAusrechnen dieser 3stelligenZahlen steht ein JavaScript-Progrämmchen bereit.Man tippt nur die 2-Byte-Unicode-Hexzahl ein, z.B. 20ac ,und erhält die UTF-8-Codes in Dezimal (nur diese werdengebraucht) undals Zugabe in Hex. Das Progrämmchen kann aber gleich einenganzen Blockvon 256 Zeichen als Codeliste ausgeben, die man sich dann kopieren kann[funktioniert nur mit IE, nicht Netscape].  Achtung: Ab V23.2 kann manstatt der Dezimalzahlen direkt die UTF-8-Zeichen hinschreiben,für bbbund aaa die DOS-Zeichen, jeweils ohne Blank dazwischen.  bbb ist derOstWest-DOS-Code, aaa wirdnur angegeben, und muß dann einer der DOS-Akzentcodes sein (siehe oben im pa-Befehl), wenn auf allegro -Seitederakzentuierte Buchstabe als Einzelzeichen nicht existiert, wie z.B. Á und ã .  Dieu-Befehle werden nur fürdie Umwandlung von Fremddaten benutzt, nicht für den Export.Also i.d.R. beim Einlesen einer ADT-Datei, die in UTF-8 codiert ist,bzw. beim Übergeben von HTML-Formulardaten an denavanti-Server, oderauch im DOS-Konvertierprogramm IMPORT.EXE.  ImFLEX setzt man vor dieBefehle zum Einlesen der Daten den Befehl  set U1 , dahinter set U0 . Achtung: Das Vertauschen vonAkzenten und Buchstaben erfolgt dabei automatisch im Anschlußan dasUmwandeln der Codes (beim FLEX-Befehl insert ).  Beispiel: siehe write.php im PHPAC-System.  Fürdas Programm IMPORT setztman die u-Befehle in die dabei benutzten Exportparameter (!), dannpassiert die Umwandlung ganz automatisch, und zwar jeweils beimEinordnen eines fertigen Datenfeldes in den entstehenden Datensatz.Außerdem gehört in die Exportparameter der Befehl #dA .DieBefehle in den Paragraphen der Importparameter "sehen" deshalb noch dienicht umgewandelten Daten!  Wirhaben dank der Hilfe vonThomas Berger eine u-Liste von ca. 300 akzentuierten Buchstabenerstellt, die als Datei ucodes.txt  mit V23mitgeliefert wird. Berger hatauf seinem Server weitereempfehlenswerte Materialien und relevante Dokumentationen: weitereu-Codes findet man in mit Kommentar in einer Datei  uc-ow.cpt.Oderman benutzt das besagte Progrämmchen.  Nichtberücksichtigt sindKombinationen von Buchstaben mit zwei Diakritika,deren es imUnicode durchaus etliche gibt. Solche werden also in dieEntitäts-Darstellung verwandelt.   Generellwerden Zeichen, die inder u-Liste nicht vorkommen, in die Entitätenform &amp;#N;umgewandelt.Das Programm errechnet den Wert N aus dem UTF-Code. Man mußalso z.B.für die kyrillischen oder griechischen Zeichen keine u-Zeilenbereitstellen, das muß man nur für solche Zeichen,denen man eineEntsprechung in seinem eigenen Codesystem zuordnen will (in der Regelalso OstWest-Code).  Export  Wennman "Entitäten" in deneigenen Daten (innerhalb der Datenbank also) verwenden will, sollte mandie "Stammdatei" vs.alg zuerst einmischen. Damitdiese Datenkorrekt indexiert werden, muß man die entsprechendenAbschnitte auscat.api in die eigenen Indexparameter übernehmen (darinKommentar"V23").  In denbetroffenenExportparametern wäre dann zu setzen:  i6=10    Ersetzungsreg. istNr. 10   dx=1     Codierungen ausführen(wichtig bei Anzeigeparametern)  p &amp; 9    Zeichen &amp; istzuständig für VS-Ersetzungen  ib=59     ;ist das Endezeichen derEntitäten   Inden Exportparametern wirdman normalerweise #dV setzen (zu empfehleninIndexparametern), dann werden alle Ersetzungen zu dem Zeitpunkt aufeinmal ausgeführt, und nachfolgende Exportbefehle sehen nurnoch dieersetzten Zeichen!  Derentsprechende FLEX-Befehlheißt dow V . Dabei werden dieVS-Ersetzungen genutzt, diein den Indexparametern stehen. Dort muß also u.a. der Befehl p&amp; 9 vorkommen.   Exportmit dem  Befehl"write ..."  ( in a99 und avanti)  DerFLEX- bzw. avanti-Befehl write... wirkte bislang so, daß die Zeichenkette, die erproduziert,unverändert in die Ausgabedatei geschrieben wird. Daher konnteman mit"write" keine Umcodierung vornehmen, das ging nur über dieExportfunktion "download", weil dabei eine Parameterdatei zum Einsatzkommt. Deshalb wurde write so erweitert, daß dabei eineautomatischeUmcodierung erfolgen kann. Man muß nur zwei Dinge tun:  1.in die benutztenExportparameter diesen Abschnitt einbauen:  zl=0      kein Zeilenumbruch  dx=1      damit Umcodierungausgefuehrt wird  td-utf8    Tabelle d-utf8.apt laden  #-X       Sprungmarke  #u1       die von writeerzeugte Zeichenkette ausgeben  #+#       Ende  2.Im FLEX vor dem"write"-Befehl diese Befehle einbauen  dow wX     Abschnitt #-X in denExportparameternaktivieren  dow a      Akzenteverschieben  write ...  write ...  dow A      Akzente zurück(nur nötig, wenn der Satzanschließend gespeichert werden soll.   Hinweis: Ab V27.2 kann man parametrierte Umcodierungen in FLEXauch mit dem Befehl xcode ausführen.   Kompromiß  Esgibt Zeichen, wie z.B. Á und ã , die in Unicodeals Einzelzeichen existieren, in OstWest aber nicht. In einer allegro -Datenbankwerden sie traditionell als ´A bzw. ~a eingegeben undgespeichert. BeimUTF-8-Export werden diese nicht zusammengefaßt, sondern eswerden zweiZeichen daraus: Buchstabe+Akzent, also umgekehrt. Dies ist in derUnicode-Welt eine korrekte Alternativ-Darstellung, aber besserwärenatürlich der Export in der Form des korrekten Einzelzeichens.Wennandererseits die Eingabe über ein Web-Formular erfolgt,können dortzwar die Einzelzeichen eingegeben werden, aber was in der Datenbankankommt (Anwendung der u-Befehle!) , ist die KombinationAkzent+Buchstabe, nicht die "Entitäts-Darstellung" deskombiniertenZeichen. Wichtig ist das deswegen, weil damit ganz leicht die korrekteIndexierung in der Datenbank möglich ist: dabei wird einfachder Akzentweggelassen, aus Á und ã wird a . (Im Indexwürden Akzente dieSortierungstören, deshalb müssen sie  wegfallen!) In einerUnicode-Datei kannferner auch ein Buchstabe mit zwei nachfolgenden Diakritika vorkommen.Dies wird korrekt behandelt: in der allegro-Datei kommen beide vor demBuchstaben an, das Akzentvertauschungs-Unterprogramm regelt das inbeiden Richtungen.  Eingabe-UnterstützungfürVerfahren 1  DieVS-Stammsätze dienenzugleich dazu, Indexeinträge bereitzustellen, die man zumSuchen undÜbernehmen der "Entitäten" verwenden kann. ImÜbernahme-Register stehtdann z.B. unter u diese Liste:  ua BREVE+ACUTE _&amp;#7855;   ua BREVE+DOT BELOW _&amp;#7863;   ua BREVE+GRAVE _&amp;#7857;   ua BREVE+TILDE _&amp;#7861;   ua CARON _&amp;#462;   ua CIRC+ACUTE _&amp;#7845;   ua CIRC+DOT BELOW _&amp;#7853;   ua CIRC+GRAVE _&amp;#7847;   ua CIRC+TILDE _&amp;#7851;   ua DOT ABOVE _&amp;#551;   ua DOT ABOVE+MACRON _&amp;#481;   ua DOT BELOW _&amp;#7841;   ua MACRON _&amp;#257;   ua RING ABOVE+ACUTE _&amp;#507;   ua TILDE _&amp;#227;   ua TREMA+MACRON _&amp;#479;   uae ACUTE _&amp;#509;   uae MACRON _&amp;#483;   ub DOT ABOVE _&amp;#7683;   ub DOT BELOW _&amp;#7685;  ukyr B_&amp;#1041; nur als Beispiel:kyrillischerGroßbuchstabe Б  Man gibtz.B.  "u a" ein, wenn man ein a mit irgendeinem Akzent sucht. Dannerscheintdiese Liste. Balken auf die richtige Zeile setzen, den Button [Kopie]drücken (Alt+k) - die Sequenz wird in die Eingabe kopiert.   Mangibt z.B. "kyr a" ein, umzu dem Abschnitt der kyrillischen Kleinbuchstaben zu kommen.  Indie Standard-Parametercat.api sind die nötigen Zusätze eingebaut,kommentiert mit "V23",damit man sie leicht findet und in andere Indexparameterübernehmenkann.  Verfahren  2    Alle bisherigen Codes oberhalb 127 des OstWest-Zeichensatzes müssen in UTF-8 umcodiert werden(Methode 2b). Dazu gibt es eine Parameterdatei i-1u.apr , die dasautomatisch durchführt, incl. Akzentvertauschung.  DasBearbeiten unter DOS undWindows wird dadurch leider erschwert, denn sogar die Umlaute sindnicht mehr direkt erkennbar.   In a99 kann man jedoch mitdem FLEX utf8edit.flx einen Datensatz extern bearbeiten ,und zwar im Unicode-fähigenNotePad. Dazu eingeben: X utf8edit , oder diesen FLEX auf einen derFlip-Buttons legen.  KeinUnterschied zuVerfahren 1 bei der Web-Formularbearbeitung.  Günstigerim Platzbedarf alsVerfahren 1 nur dann, wenn man einen hohen Anteil von nichtlateinischenZeichen hat, etwa Kyrillisch oder Griechisch.  WennEingabe und Bearbeitungausschließlich per Web-Formular erfolgen sollen, ist diesesVerfahrenvorzuziehen, weil man sich um die DOS- und Windows-Codes nicht mehrkümmern muß.  Codierungennach Methode 2akönnen zwar neben UTF-8 verwendet werden, sehr sinnvoll istdas jedochnicht.    Fürdas Umwandeln von UTF-8-Codes in Entitätenzahlen für RTF-oder HTML-Dateien gibt es ab V29.3 einen FLEX-Befehl  xcode U... (Geben Sie in a99 ein  h xcode)  Dabei kommen intern einige einfache Formeln zum Einsatz, die im Anhang dokumentiert sind.  Web-Schnittstelle  (für beideVerfahrengültig)  Zum Eingeben in einem Web-Formular, z.B. bei PHPAC, undauch in NotePad und anderen Windows-Programmen kann man das MS-ProgrammCHARMAP verwenden. Das siehtz.B. so aus:     Diesist die XP-Version! UnterNT und '98 gibt es erheblich weniger Möglichkeiten.   Tip: Es gibt eine TTF-Schrift namens MS Arial Unicode , die eine größere Menge vonaußereuopäischen Schriftenumfaßt als die normalen TTF-Schriften.              Anhang : Umrechnung  UTF-8 -&gt; Dezimal-Entitätencode E Normalerweise machen Programmierer das mit geschicktenBitmanipulationen, weil die intern schneller gehen. Z.B. bedeutet"-128" dann soviel wie das Wegnehmen des siebten Bits, und "*64" istein Verschieben um 6 Bit nach links. Hier wird statt dessen gezeigt,wie man es in anschaulich schlichter (dafür intern viellangsamerer) Weise mit Dezimalzahlen machen kann.   Situation: Bei zeichenweiser Abarbeitung eines Unicode-Textes von linksnach rechts trifft man plötzlich auf einen Code a &gt;193, dann:  Wenn a&gt;193 und a&lt;224           U+0080 - 07ff Dann ist 127 &lt; E &lt; 2048               128 - 2047   Mit dem auf a folgenden Zeichen b zusammen ergibt sich: (Wert b ist stets &gt;127 und &lt;192)  +--------------------------------+  |  E = (a-196)*64 + b-128 + 256  |  +--------------------------------+ und damit RTF: \uE? bzw,  HTML4: &amp;#E;   Beispiele: Die niedrigste Entitätenzahl ist 128 a   b  194 128  E= (194-196)*64 +(128-128) +256  =   128 = U+0080   Die höchste der zweistelligen UTF-Codes ist 2047:  a   b  223 191  E= (223-196)*64 +(191-128) +256  =  2047 = U+07ff  Das gilt nur bis a=223 . Danach kommen die 3-Byte-Codes:  Wenn 223 &lt; a &lt; 240 ( ab U+0800  ) Dann ist 2047 &lt; E &lt; 65536  Man nimmt dann die ZWEI auf a folgenden Codes b, c , wobei 127 &lt; b,c &lt; 224 gelten muß.   a   b   c  224 160 128   bis   239 191 191    0800 - ffff  e0  a0 80          ef bf  bf    2048 - 65535   E = (a-224)*4096 +(b-128)*64 +(c-128)  0           32          0     = 2048  z.B. Euro-Zeichen:  226 130 172                U+20ac   2*4096 + 2*64 + (172-128) =  8364   Hilfreiche Adresse:   http://titus.uni-frankfurt.de/indexd.htm?/unicode/unitest.htm    Umgekehrte Rechnung: Entitätenzahl -&gt; UTF-8  Gegeben ist eine Dezimalzahl E Im folgenden wird beim Dividieren stets nur der ganzzahlige Teil genommen, mit % wird der Divisionsrest gebildet:    1. Fall    127 &lt; E &lt; 256:        a = (E-256-63)/64 + 196    b = E%64 + 128 (Divisionsrest)    2. Fall  127 &lt; E &lt; 2048:   a = (E-256)/64 + 196  b = (E-256)%64 + 128 (Divisionsrest)   3. Fall  2047 &lt; E &lt; 65536   a = E/4096+224  b = (E-(a-224)*4096)/64 +128  c = (E-(a-224)*4096-(b-128)*64)+128  z.B. E = 8364 :  a = E/4096 +224 = 2 + 224                     = 226   b = (E-2*4096)/64 +128 = 172/64 +128 = 2 +128 = 130   c = (E-2*4096 -2*64) +128 = 44 + 128          = 172  (1) Jennings, Tom: ASCII:American Standard Code for Information Infiltration . 2001           [i] zuletzt aktualisiert:         02.05.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;    JanaS : Janus-allegro-System                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           JanaS : Janus-allegro-System   td { font-family: Verdana; font-size: 9pt; } JanaS : Janus-allegro-System         JanaS    Jan us- a llegro- S ystem           BisherV23 konnte a99:    eine Datenbank zugänglich machen zum Suchen, Lesen, Schreiben undExportieren     Textdateien im RTF-Format anzeigen und darin eingebaute Makros(FLEXe) ausführen    externe Programme starten, z.B. auch einen Browser, die dann abervöllig unabhängig laufen    Von außen kann man a99 mit FLEXen fernsteuern - a99 alsServer    Kurzanleitung für a99   Ab V24 kommt ein Browser hinzu:   Es gibt ein Zusatzprogramm namens JanaS , das nichts anderes als ein Browser-Fenster bereitstellt. Sosieht es aus:       In diesem Beispiel zeigt dasProgramm eine HTML-Datei namens doku.htm an - das ist einHTML-Äquivalent des sog. "Füllhorns". Hinter jedem Link steckt einBefehl für a99 - das ist der Mehrwert, den ein normaler Browser nicht bieten könnte.   JanaS kann zwei Dinge:   Im Internet surfen, also u.a. HTML-Dateien anzeigen (sieheBeispiel oben)     a99 wieder aktivieren und ihm Befehle und Daten zusenden. (Im Beispiel:hinter jedem Link steckt ein Befehl für a99)    JanaS läuft zwar alsgetrenntes Programm, aber   a99 und JanaS könnenNachrichten und Datenaustauschen.    In HTML-Dateien können FLEX-Befehle eingebaut sein. Beispiel: doku.htm ("Füllhorn")     HTML-Formulare sind nutzbar,um Daten zu erfassen oder zu bearbeiten. Beispiel: htmform.flx    In Formularen kann Unicode(UTF-8) verwendet werden, im Gegensatz zu den Formularen, die in a99eingebaut sind. Damit wird die Unicode-Eingabe und -Bearbeitung nunauch ohne avanti möglich.    Grafik, Tabellen, JavaScript, CSS -alle diese Mittel kann man ebenfallseinsetzen.  Um Mißverständnisse zu vermeiden:   JanaS hat nichts mit avanti zu tunund braucht keinen Web-Server. Es dient nicht dazu, eine Datenbank insNetz zu stellen, sondern unterstützt ohne Netz die Arbeit mit a99 auf dem lokalen PC.Anders gesagt:JanaS und a99 müssen auf dem selbem PC laufen, sonst können sie nichtzusammenarbeiten.    Beschreibung   1. Lokale Datei  a99 startet JanaS mitFLEX-Befehl janas dateiname     Das Programm janas.exe wird gestartet undzeigt den Inhalt von dateiname an,wobei dies eine Datei auf dem lokalen Verzeichnis HTML sein muß,die am eigenen Programmverzeichnis hängt. Oder der Dateinameenthält einen Pfad, z.B. in dieser Form: file:///d:/hilfsdateien/abc.htm    2. Internet-Adresse  a99 startet JanaS mitFLEX-Befehl janas url   Das Programm janas.exe wird gestartet undzeigt den Inhalt von url an    "Besondere Links" in einer html-Datei sehen so aus:  href=" flex:x  befehlsfolge " oder href=" flex:X  flexname " Start einer FLEX-Datei oder  href=" flex:h  dateiname " a99 soll die Hilfedatei dateiname. rtf zeigen  Ein Beispiel aus der oben gezeigten"Füllhorn"-Seite: IMPORT   JanaS stellt dann automatisch auf TEMP eineFLEX-Datei jPID .flx bereit, in dersteht  FLEX-befehlsfolge bzw.  exec  flexname bzw.  help  dateiname   Dabei ist PID die Prozess-IdNummer des aufrufenden a99.   Anmerkungen für Systemverwalter:     Das Fenster von a99 wirdautomatisch aktiviert (d.h. es kommt in den Vordergrund), wenn es auf diese Weise von JanaS aufgerufen wird. Bewußt verhindern kann man dies aberin dem zweiten Fall, indem man an flexname das Zeichen @ anhängt. [Ab V26.5]      "Besondere Links" können auchin HTML-Seiten eingebettet sein, die nicht auf dem PC des Nutzersliegen, sondern irgendwo im Internet! D.h. man kann geeigneteHTML-Seiten sonstwo bereitstellen, die Wirkung der FLEXe erfolgt aberstets nur im lokalen System des a99-Nutzers. (Wer einen solchen Link ineinem normalen Browser anklickt, erhält eine Fehlermeldung wiez.B.  "flex is not a registered protocol".) Weil das eine potentielle Gefahr ist, muß der Nutzer dann dieAusführung des FLEXes bestätigen, und zwar kommt folgende Meldung: FremdFLEX! Ausführen?     Das Programm janas.exe kann man auch im DOS-Fenster von Handstarten, aber nicht mit janas  url sondern mit:  janas  dateiname  in der Datei dateiname  muß dann nur die eigentlicheURLstehen, die der Browser anzeigen soll!    Tipfür Fortgeschrittene: Die Variante mit dem @ kann man nutzen, um a99 irgendetwas tun zulassen und dann eine andere HTML-Datei zu laden, ohne daß a99zwischendurch erscheint, d.h. das Wechselspiel der beiden wird optischgar nicht sichtbar! Dazu muß nur am Ende der Datei flexname ein janas -Befehl stehen, der dann das Laden der besagten anderen HTML-Datei auslöst. Die Formularmethode (siehe unten) nutzt man, um dem FLEX Informationmitzugeben, die er dann in Form von #u-Variablen zur Verfügung hat. Die HTML-Datei, die er am Ende aufruft, könnte gerade in dem FLEXerstellt worden sein. Man erkennt leicht das Potential dieser Methodik. Als einfaches Beispiel zum Studieren, Ausprobieren und Ausbauen gibt es jax.htm und jax.flx . Zum Starten: janas jax.htm in a99 eingeben.    Zusammenfassung zum FLEX-Befehl janas : (So steht es auch im Hilfetext  xjanas.rtf )   janas 1 DieDatei j.htm wird (erneut)angezeigt   Bei den nächsten drei Befehlen wird automatisch janas.exe gestartet,falls es noch nicht läuft:   janas url Die Web-Adresse url wird angesteuert und angezeigt   janas file:///c:/allegro/abc/xyz.htm So läßtman eine irgendwo im lokalen System liegende HTML-Datei anzeigen. Manbeachte denDreifach-Schrägstrich hinter "file:"   janas dateiname DieDatei dateiname (ohne Pfadangabe) muß auf dem HTML-Verzeichnis liegen (unterhalb desProgDir) und wirddann im Browser angezeigt.   janas Inhaltder iV wird als URL etc. genommen, d.h. vorher vorbereiten, sonst kommt "Die Seite kann nicht angezeigt werden"   janas 0 Wenn janas.exe gerade läuft,wird es beendet, das Fenster beseitigt. Wenn mehrals ein JanaS-Fenster aus mehreren a99-Fenstern heraus gestartetwurden, verschwindet nur dasjenige, das zum jeweiligen a99gehört. Einbau in _endflx.flx ist zu erwägen.  Außerdem kann man diesen Befehl geben:  Call janas.exe janas.exe wirdgestartet und erscheint mit leerem Fenster. Unter "Datei" kann man "Öffnen"wählen und eine URL angeben.     Formulare im HTML-Text  Wenn man ein HTML-Formular gebaut hat, muß man diejenigenInput-Felder, die in bestimmten Kategorien oder #u-Variablen landensollen, so angeben:     Feld x:   wobei nnn eine gültige Kategorienummer oder #u-Variable uxy sein kann. Beides ohne#. Um nebenbei eine #u-Variable zu belegen, die der Nutzer nicht sehensoll:  &lt;inputtype="hidden" name=" ujC " value=" wert "&gt;  Im FLEX tuwas.flx hatman demnach den Wert #ujCwert zur Verfügung.   Die so angelegten Felder werdendann zuerst belegt, bevor der FLEX tuwas.flx ausgeführt wird, d.h. man muß sich darum nicht selber kümmern! (Genaugesagt, der FLEX j.flx wird mit den betreffenden Befehlen gefüllt undamSchluß steht exec X tuwas .) In diesem FLEX muß dann z.B. an geeigneter Stelle ein put stehen, wenn der Satz gespeichertwerden soll.    Begleitende Maßnahmen   _door.flx : Ausgelöst durchSchaltfläche "Tür". Da könnte z.B. drinstehen:    janashttp://www.allegro-c.de oder z.B. Datei doku.htm von HELP:  janas doku.htm   onerror.flx : Ausgelöst durchungültige Eingabe im Schreibfeld Prüfen, ob Eingabe mit " http: " oder " file: " anfängt, dannübergeben an JanaS   if "www" jump www  if "http:" jump http  if "file:" jump http  ...   :www  var "http://" #uxE  janas  var ""  end  :http  var #uxE  janas  var ""  end    Beispiel für einen FLEX, der ein komplettes HTML-Formular erzeugt unddann JanaS aktiviert: (Die HTML-Datei mit dem Formular wird zunächst ins Help-Verz.geschrieben) Zum Ausprobieren gibt's eine etwas bessere Version . (Dahinter steckt der FLEX htmform.flx )  var "help\\test.htm"  open x  Vorbereitung fürwrite-Befehle  xport p e-u  dow wX dow a   wri "" n   wri '' n  wri "" n   wri '&lt;form action=" flex:x showrec ' 92 92 'disp" method=GET&gt;' n   wri '' n   wri 'Titel: ' n  wri 'Signatur: ' n  wri 'Verfasser: ' n  wri 'Jahr: ' n   wri'' dow A   close x  Und nun diepräparierte Datei von JanaS anzeigen lassen  janas test.htm    Und in der Datei e-u.apr steht nur drin:   E-U.APR : Einen Feldinhalt nach UTF-8 wandeln 2004-01-04  insbes. wirkt sich dies auf den FLEX-Befehl"write" aus  zl=0  Wenn "write" gegeben wird, steht der Inhalt in #u1 #-X #u1 ASCII -&gt; UTF-8 Tab elle laden td-utf8         [i] zuletzt aktualisiert:         18.04.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  allegro und XML                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                allegro und XML        Offiziell:  http://www.w3.org/XML/    Beispiele:  MARCXML und MABXML          XMLSchnellkurs  Hiersoll es nur um die elementaren, um die allerwichtigsten Dingegehen! Damit man den Wald erblickt und nicht nur lauter Bäume...  Jederweiß: Daten bestehen aus Datenelementen oder -feldern. (Wer's nicht weiß, kann es in einer Einführung nachlesen.)  Eintypisches allegro -Datenfeld sieht soaus: (durch die Farben unterscheiden wir echte Daten von Steuerzeichen )  #40 Goethe, JohannWolfgang ¬ von ¬  EintypischesXML-Datenelement sieht so aus:   Goethe, JohannWolfgang  von   Es könnteaber auch soaussehen:      JohannWolfgang     von     Goethe     Oder noch gänzlich anders - die Möglichkeiten sind unbegrenzt. DieBezeichnungen zwischenheißen " Tags " und dienen alsNamen für die eingeschlossenen Datenelemente. Auf deutschheißt "tag" soviel wie "label". Es gibt keine festgelegtenElementbezeichnungen fürBibliothekszwecke oder für irgendwelche anderen Zwecke.Jeder, der XML anwendet, kann sich seine Elemente selber ausdenken -dasist es gerade, was viele so charmant finden an XML. Und verbaleBezeichnungen suggerieren leichter als Nummern (die für sich genommennichts aussagen und deshalb gelernt werden müssen!), man verstünde, wasgemeint ist. Verspielt wird nur dergroße Vorteil der Nummern: sie sind sprachunabhängig und damit vonHause aus international.   Man hat bei XML nur eine ganz einfache Grundregel einzuhalten,die so aussieht:   irgendwelche Daten   Dabei ist Groß-/Kleinschreibung wichtig:  ,  und  wären drei verschiedene Elemente ! Aber allesandere ist beliebig. Die Daten , nebenbei gesagt, sollen aus Unicode -Zeichen bestehen(UTF-8).   Noch eine zweite Grundregelist wichtig: Ein Tag kann durch einoder mehrere Attribute erweitert werden. Wenn man etwa mehrere Typen von Personenunterscheiden will, ohne dafür mehrere verschiedene Tags einzuführen,könnte das z.B. so aussehen:   &lt;Persontyp=" author "&gt; Lessing,Gotthold Ephraim    Eine dritte Sache (oben beimGoethe-Beispiel schon zu sehen) erhöht das Potentialvon XML dann ins wahrhaft Astronomische: Tags können ineinander verschachtelt werden: DerInhalt zwischen dem öffnenden und schließenden Tag kann wiederumweitere XML-Datenelemente umfassen. Aber vollständig umfassen! Es darfnicht ein öffnendes Tag innerhalb des Inhalts liegen und das zugehörigeschließende dann außerhalb. Ansonsten ist die Reihenfolge von Elementenin keiner Weise geregelt. Man könnte somit haben:    &lt;Persontyp=" author "&gt; Lessing   GottholdEphraim   oder    &lt;Persontyp=" author "&gt;  GottholdEphraim   Lessing     &lt;Persontyp=" author "&gt;  Schiller   Friedrich       Konventionelle bibliothekarische Formatehaben dazu keine Entsprechung. So etwas löst Begeisterung aus - bis mananfängt, mit solchen Daten irgend etwas zu programmieren oder zuparametrieren... Andererseits muß man ja nicht alles ausreizen, was XMLim Prinzip ermöglicht! Übrigens ist XHTML eine modernere Variante vonHTML und richtet sich streng nach den Formalien von XML.   Wieauch immer, manerkennt leicht: Die interne Struktur einer allegro -Datenbankhat mit XML nichts zu tun. Das wird auch so bleiben. XML ist alsArbeitsformat ineiner Datenbank unpraktisch, zum Eingeben von Hand sowieso. Das brauchteinenauch nicht zu verwundern, denn für solche Zwecke wurde es nichtgeschaffen.Sondern fürdas Strukturieren von Dokumenten im weitesten Sinne und erst später dachte man an den Daten austausch zwischen Systemen und Programmen, nicht jedoch an das Speichern im Innern einer Datenbank.Austausch-Standardssollen nur die unterschiedlichsten Systeme miteinander verbinden.Intern können die alle machen, was sie wollen, daran ändert sich auchdurch XML nichts.  Für dietraditionellen bibliothekarischen Austauschformate MARC21 und MAB2 existiereninzwischen XML-Varianten: MARCXML und MABXML .Beispiele siehe unten . Diese definieren keineneuen, verbalen Labels für die Datenelemente,sondern verpacken die altbekannten Formatnummern nur als Attribute.Damitändert sich an der Inkompatibilität der Formate überhaupt nichts. XMList nichtgleichbedeutend mit Kompatibilität. Was XML vereinheitlicht, das istnur die formale Art derDatenauszeichnung: die alten Nummernsindnun mit spitzgeklammerten Labels ausgezeichnet statt mit bestimmtenSteuerzeichen. Dadurch kann man nun mit allgemein üblichenWerkzeugen auf die Daten losgehen, statt immer neue Spezialprogrammedafür zuschreiben. Mehr aber nicht. Mit anderen Worten: Es wird nicht MARC oderMAB durch XML ersetzt, das wäre eine grob unsachliche Aussage, sondernnur die bisherigen Steuerzeichen (eine Norm namens ISO2709) durchXML-Spitzklammern. EineNeuentwicklungderLibrary of Congress, MODS , ersetzt die Nummern vonMARC durch verbale Tags,englische natürlich. MODS ist, anders als MARCXML, nicht mehr 100% mitMARC21kompatibel, sondern bildet nicht alle MARC-Einzelheiten ab.    Esergeben sich nun für allegro zwei Fragen:    1.  Wie bekommt manXML-Datenin eine allegro -Datenbank hinein?   DreiMöglichkeiten stehen zur Wahl:   1. Umwandlung mit derImportsprache , Einspeisen mit demProgramm UPDATE    Diemächtigste, aber schwierigsteMethode; nur für fortgeschrittene allegrologen   2.  Mit FLEX :geeignet, wenn nur einzelne, nicht allzu viele Felder ausXML-Fremddaten zuübernehmen sind und die Feldinhalte mehr oder weniger unverändertübernommenwerden können. Die Importsprache bietet dagegen mehr Funktionen für dasManipuliereneinzelner Datenfelder. Ab V29 gibt es den Manipulationsbefehl x (für var und write ).Wenn in der "internen Variablen" ein XML-Text steht, der das obengezeigte Datenfeld mit Lessing enthält, kann man es mit var (x'Person type="author"') herausziehen.   3.  Vorherdie XML-Datenmit eigenen Programmen in die allegro-Externstruktur umwandeln ,dann mitdem Menü "Datei / Weitere Offline-Datei laden" einlesen. WelcheSoftware man für die externe Umwandlung benutzt, das spielt natürlichfür allegro keine Rolle.  2.  Wie kannmanDaten mitXML-Struktur aus einer allegro -Datenbank herausbekommen?   Dazugibt es jetzt (ab V24.4) ebenfalls drei Wege:   1.  Export mit Hilfeder  Exportsprache    Die mächtigste, aber schwierigsteMethode. Jedes kleinste Detail kann damit programmiert werden. DieserWeg istzuwählen, wenn die Daten einem von außen vorgeschriebenen XML-Schemaentsprechensollen, wie etwa MARCXML oder MABXML. Bei solchen Schemata ist estypisch, allegro -Elemente in einer vorgeschriebenen Reihenfolgeinmehrere Teile auseinanderzunehmen oder auch anders zusammenzusetzenoderineinander zuverschachteln.   2.  Ausgabe der Datenmit Hilfe von FLEX-Makros     Schnell und relativ einfach zu realisieren, etwas wenigermächtig in denDetails der Umwandlung. Diese Methode kommt in Betracht, wenn maneinige Datenelemente für nicht allzu komplizierte externe Verwendungszweckebraucht, wie etwafür statistische Auswertungen.    3.  Denneuen FLEX-Befehl  xml  einsetzen     Wandelteinen Datensatz als Ganzes um in vier verschiedene Standard-Strukturen.Das macht kaum Arbeit, allenfalls kleinere Eingriffe in dieKonfigurationsdatei (.CFG-Datei) sind nötig, in der dieFeldbezeichnungen stehen. DiesesVerfahren ist sinnvoll, wenn die Daten extern gebraucht werden und esnicht sogenau auf deren Struktur ankommt, sondern darauf, ob man sie dann mitXML-Werkzeugen bearbeiten kann.     Derneue FLEX-Befehl   xml  modus  Wandeltden aktuellen Datensatz um in einen XML-Datensatz, also eine Folge vonDatenelementen, die mit Tags versehen sind in der XML-typischen Weise:   Text des Datenfelds    DerXML-Text steht dann alsGanzes in der internen Variablen! Das ist aber nur eine Zugabe. Er wirdin derselben Form sogleich in die Ausgabedatei geschrieben, denn daswird in aller Regel der Sinn der Sache sein. Damit in der Ausgabedateiaber Unicode ankommt (intern ist normalerweise kein Unicode!), sindzusätzlich vorher die folgenden drei Befehle zu geben, damit dieAkzentvertauschung unddie Unicode-Umcodierung ausgeführt werden:  xport p p-xml dow a  dow wX   Fernerdie nötigen write-Befehle vorher und nachher, um den Datensatzangemessen in umschließende Tags einzubetten, denn der Befehl selbstproduziert nur die nackten Datenelemente, kein Drumherum. Das Drumherumkann aber genausogut in die Exportparameter eingebaut werden, unter derSprungmarke #-X !  Als Komplettbeispiel kann mansich den FLEX xmlexp.flx ansehen, mit dem man die aktuelleErgebnismenge in eine Datei mit XML-Struktur überführt. Dieser wirdaktiviert über den neuen Menüpunkt "XML-Ausgabe" auf dem Exportmenü (inden "Komfort-Methoden").  Wenn man tatsächlich NUR das XML-Produkt in der internen Variablenhaben will: vorher open x nul geben und hinterher close x , dann unterbleibt dieDateiausgabe.   Die Export-Parameterdatei p-xml.apr kann für jede CFG benutzt werden. Sie leistet die Umwandlung desinternen Zeichensatzes in Unicode (UTF-8), wie es für XML empfohlenwird, einschl. Ersatz der Sonderzeichen (s.u.). Anschließendkann jederXML-Kenner mit solchen Daten etwas anfangen, auch wenn die tags keinemexistierenden Schema genau entsprechen - und es gibt bislang keinetabliertesund standardisiertes XML-Schema für Bibliotheksdaten. Es gibt aberWerkzeuge, vor allem XSLT ,mit denen man die exportierten XML-Daten, falls nötig, noch inganzandere Formen verwandeln kann.   Sonderfall hierarchische Sätze: Jeder Untersatz wird automatisch in ... eingeschlossen, wobei i die Hierarchiestufe ist (1 für #01 , 2für #02 usw.).   Wieaber sehen die Tagsaus, d.h. was steht innerhalb der spitzen Klammern? Braucht man dafürExportparameter? Eben nicht, das ist das Sympathische an diesem Befehl. Das Geheimnis: DieTags stehen schon längst inder CFG , mit der man arbeitet! Daraus werden sie entnommen.(Standardfall: Datei $A.CFG.)   Der modus  ist eine Ziffer: 0,1,2,3  0 :  &lt; label &gt;...&lt;/ label &gt;    Hier ist label dieBezeichnung, die sichaus der CFG ergibt.  Wenn das Datenfeldeine Mehrfachkennung hat, wird zuerst die Abfrageliste von oben nachunten nachder Kategorienummer durchsucht. Wird dort nichts gefunden, oder stehtSpatiumhinter der Kategorienummer, wird die Deskriptorenliste durchsucht (dieZeilen, die mit # anfangen).  1 :  &lt;feldnr=" knum "&gt;...    knum ist die Kategorienummer  2 :  &lt;feldlb=" label "&gt;...    Wie 0, aber statt der Kategorienummer wirdimAttribut lb das Label angegeben  3 :  &lt;feld nr=" knum " lb=" label "&gt;...    Kombination aus 1 und 2  Je nachVerwendungszweckkann man sich also aussuchen, wie die Daten herauskommen sollen. BeiModus 0gibt es so viele Tags wie man verschiedene Felddeskriptoren hat, beidenanderenFällen gibt es nur ein Tag namens &lt; feld &gt;,zu dem dieKategorienummerund/oder das Label als Attribut ergänzt werden.  Diezentrale Rolle fürden xml-Befehl spielt also die CFG, die man verwendet. Mit ihrer Hilfekann mandas Ergebnis stark beeinflussen. In der Standarddatei $A.CFG wurden dieLabels in den Deskriptorenzeilen alle XML-gerecht gestaltet:ohne Leer- und Sonderzeichen.  Hinweisezur CFG  StellenSie drei Dinge sicher:  1.  allevorkommenden Felder müssen eine Bezeichnung in ihrer Deskriptorzeilehaben    Das sind die Zeilen, die mit #anfangen, z.B.    #20"Titel"...  2. Felder,die mit bestimmten Wiederholungszeichen eine andere als dieGrundbedeutunghaben, müssen mit einer eigenen Bezeichnung in der Abfragelistevorkommen, z.B.so (ohne # vorne):    57i"  Interpret:"  3. dieFeldbezeichnungen dürfen in jedem Fall nur aus Buchstaben, Ziffern,Bindestrichoder Unterstrich bestehen, das erste Zeichen darf nur ein Buchstabesein.    NurGrundbuchstaben, keine Umlauteetc.!  (Die Bezeichnung wird amerstenLeer- oder Sonderzeichen abgeschnitten!)  Beispiel:  #57"anderePerson"  Deskriptorzeile für #57  57d"Dirigent:"   Abfragezeile für #57d  Wennman die Abfragelisteansonsten nicht braucht, ist es einfach: man listet unterhalb derDeskriptorenalle Felder in der zweiten Form auf.  Und dieReihenfolge?Die Felderkommen in der Reihenfolge heraus, wie sie im Datensatz stehen - und dasist dieReihenfolge der Deskriptorzeilen in der CFG.  Willman eine andere:schnell eine abgewandelte CFG machen mit Deskriptorzeilen in dergewünschtenReihenfolge,ansonsten alles gleich, kein Eingriff in die Daten nötig. Eine somodifizierte CFG kann gefahrloseingesetztwerden auch beim Bearbeiten von Sätzen! Den Namen dieser Dateieinsetzen in die Befehlszeile Konfiguration= in der INI-Datei.   Wennaber bestimmte FelderNICHT mit ausgegeben werden sollen?  Dannschreibt man im FLEX vor denxml-Befehl die Liste der betreffenden Felder, die Reihenfolge ist dabeibeliebig.  Wennz.B. #81, #99e und#99n nicht mit ausgegeben werden sollen;   #99n  #81   #99e  xml 1  undo  Denndie Felder werdendadurch aus dem aktuellen Satz im Arbeitsspeicher gelöscht! Durch undo wird das wiederrückgaengig gemacht. Genauer gesagt: der unveränderte, in der Datenbankbefindliche Satz wird wieder gültig gemacht, der verkürzte imArbeitspeicherungültig.  Ausprobieren:  GebenSie im Schreibfeld ein:  xxml 0\sho IV  unddann statt der 0hintereinander 1,2,3. Sofort sehen Sie, was gemeint ist. In derDoku-Datei xxml.rtf ist das für jedenModus als Flip eingebaut.   DreiDetails müssen nochbeleuchtet werden:    Teilfelder (in MAB "Unterfelder" genannt)  Damitwird immer inderselben Weise umgegangen:  Aus  #nnnText▼aTeilfelda▼bTeilfeld b wird   TextTeilfeldaTeilfeld b    Nichtsortierzeichen  Auchdamitwird immer inderselben Weise umgegangen:  Aus  #20 ¬Die¬ Erkenntnis derNatur wird   DieErkenntnis der Natur  DieNichtsortierzeichen könnenan jeder beliebigen Stelle in jedem Datenfeld vorkommen!   Inbeiden Fällen sind dieselben Abkürzungen verwendet, ns und uf, die inMABXML definiert wurden.    XML-Steuerzeichen XML kommt mit ganz wenigen Steuerzeichen aus:  und &amp; .Diese drei Zeichen dürfen deshalb nicht als solche innerhalb der Datenvorkommen. Sie werden automatisch ersetzt durch &amp;lt; , &amp;gt;bzw. &amp;amp; , wie es allgemein üblich ist.     BEISPIELE (und ein paarsubjektive Anmerkungen)   Beispiel für zwei Datenelemente inMARCXML:      Arithmetic /    Carl Sandburg ; illustrated as ananamorphic adventure by Ted Rand.         San Diego :    Harcourt Brace Jovanovich,    c1993.      Im klassischen MARC sieht das so aus:     245  10 |a Arithmetic / |c CarlSandburg ; illustrated as an anamorphic adventure by Ted Rand.    260    |a San Diego : |b HarcourtBrace Jovanovich, |c c1993.      Für diesen Standard wurden, wie man sieht, keine verbalen Tagserfunden, man hat vielmehr die MARC-Nummern als Attribute für das Tag genommen. Auffällig ist die Interpunktion am Endeder Unterfelder, typisch für MARC21 (aber nicht für Unimarc oder dasabgeschaffte UKMARC) : sie bleibt auch in der XML-Version erhalten! Daswirdvon XML-Experten für sehr unschön gehalten, unelegant war es schonimmer, ist aber wegen derangestrebten 100% Kompatibilität unvermeidlich.  Nebenbei(es interessiert niemanden): in XML werden für dieseDatenelemente 400 Byte verbraucht, im alten MARC 146. Für solcheVerschwendung gibt es keinen zwingenden Grund. Ohne weiteres hätte manz.B. df statt datafieldund sf statt subfielddefinieren können. Und wennXML es zuließe, statt der betulichen Wiederholung des Tags am Feldendeso etwas wie &lt;/&gt; zu schreiben, würde auch einiges gespart, undzwar bei jeder XML-Anwendung. Sparsamkeit ist jedoch nicht im Sinne derHardwareindustrie, die an dem Zustandekommen der Standards nicht ganzunbeteiligt ist. Aber solche Auswüchse werden allenthalben klaglosgeschluckt, schon ein Hinweis darauf wird nicht gern gehört. Man solltees sich aber mal klarmachen: Wenn jeder MARC-Satz nur 10 Felder hätteund 20 Unterfelder, dann enthielten 1 Mio. Datensätze insgesamt 20Millionen mal das Wort "datafield" und 40 Millionen mal "subfield". Istdas elegant? Zusammen mit den Spitzklammern wären das allein fürdiese Tags  mindestens  880MB mehr als beim alten MARC. Zum Vergleich: der allegro-OPAC derUB Braunschweig braucht bei 1.1 Mio. Datensätzen weniger als 800 MB insgesamt , incl. Index undallen anderen Dateien. Sie sollten dasjedoch nicht überbewerten, es interessiert wirklich niemanden -"Platten kosten doch nichts mehr!". Wenn man XML nur zum Austauschbenutzt, kann man in der Tat darüber hinwegsehen. Aber derProgrammierer, der hinterher mit den Daten umgeht, hat dann jedesmal"datafield" etc.hinzuschreiben statt "df"- vielleicht ist das eineÜberlegung wert? (Denn Programmiererzeit kostet schon noch was und wirdim Gegensatz zu den Platten immer teurer.)   Dieselben Datenelemente in MODS:   Gans anders als in MARCXML gibt es hier verbale Tags, außerdem mehrVerschachtelungen. Es besteht aber wohl noch Unklarheit hinsichtlichder Interpunktion!    Arithmetic /    Carl Sandburg ;illustrated as an anamorphic adventure by Ted Rand.     cau  San Diego    Harcourt BraceJovanovich  c1993  1993  1st ed.  monographic     Ein wenig sparsamer ist man hingegen doch beim MABXML-Entwurf gewesen,der ebenfalls verbale Tags vermeidet und die alten Nummern in Attributeeinbettet:   Beispiel für vier Datenelemente inMABXML:   Journal of neurology für Testzwecke und Validation LokaldatenHeise  official journal of the European Neurological Society  Zeitschrift für Neurologie  Organ d. Deutschen Gesellschaft für Neurologie u. d.Deutschen Gesellschaft  für Neurochirurgie   Und für Unterfelder bzw. Teilfelder hat man &lt;ufcode=... &gt;  bzw.  definiert.            [i] zuletzt aktualisiert:         18.04.2011 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;  aresqa : allegro relational                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig            aresqa : allegro    relational      Auftakt zur allegro -Version 25(2005)   Skeptisch?Keine Zeit?  Wenn jemand nur schnell wissen will, ob aresqa etwasbringt, und zwar für den Normal- oder Nur-Anwender ohne Neigung zum Relationentum,dann empfiehlt sich der illustrierte Kurzeinblick weiterunten.  Worum gehtes?  Es gibt vieleUnterschiede zwischen allegro und Relationalen Datenbanksystemen (RDBS)- sonst wäre allegro überflüssig. Dazu erschien eine ausführliche,vergleichende und begründende Gegenüberstellung:  http://www.allegro-c.de/a-r.htm .  Weder kann allegro ungefähr dasselbe wie ein relationales System, noch umgekehrt. Heutige RDBSsind ohne Frage in ihrem Aufgabenbereich außerordentlich mächtige Instrumente,mit denen allegro in mancher Hinsicht überhaupt nicht konkurrierenkönnte, das sollte schon deutlich ausgesprochen werden. Doch es geht nicht umKonkurrenz, denn die Aufgabengebiete sind unterschiedlich.    Stärken von allegro sinddie folgenden Eigenschaften, die ein RDBS selten oder nie braucht oder aufwelche die meisten RDBS-Anwendungen gut verzichten können:     Funktionsreiche Indexdateien: Sichtbare     Register zum Blättern u.a.  Hohe Geschwindigkeit bei sehr großen     Datenmengen auf relativ kleinen Maschinen  Geringer Plattenplatzbedarf  Jedes Feld darf beliebig oft mehrfach     auftreten (bei RDBS problematisch)  Diffizile Feldstrukturierung mit Unterfeldern     (RDBS-Datenfelder sollen "atomar" sein, d.h. unstrukturiert)  Unterschiedliche Satztypen in derselben Datei  Hierarchische Satzstrukturen  Komfortable Anwendung von Normdaten  Export-und Importsprachen von hoher Leistung     und Mächtigkeit  FLEX-Skriptsprache für die Programmierung     interaktiver Vorgänge. FLEX ist im Gegensatz zu SQL eine prozedurale     Sprache, kann also z.B. Daten satzweise verarbeiten und hat auch viele     interaktive Funktionen.   Deshalb wärees noch immer wenig aussichtsreich, ein Bibliothekssystem mit SQL entwickeln zuwollen, um damit allegro letztlich abschaffen zu können. Das bedeutet, allegro wird schon noch eine Weile brauchbar und in einigen Projekten gar unentbehrlichbleiben.  Warum aber, sofragt man sich immer mal wieder, könnte man nicht die Vorteile beiderWelten miteinander kombinieren ?  Das fragen insbesondere solche Anwender oder Systemverwalter, diesich gut mit RDBS auskennen, aber mit allegro überhaupt nicht. Denn dieärgern sich immer wieder, weil sie nicht "schnell mal eben", wie siees mit SQL gewöhnt sind, eine SELECT-Auswertung und/oder ein UPDATE machenkönnen. aresqa soll genau das möglich machen, und zwar ohne jede allegro -Kenntnis,insbes. ohne Parametrierung.  Aber wiesoll das gehen?  Es gibt ja schon einen Schritt in diese Richtung: das Tabellen erstellen ! Eine erstellte Tabelle (manchesprechen von einer CSV-Datei,  CSV= C omma S eparated V alues)kann man mit Word oder Excel weiterverarbeiten, aber auch in ein RDBSübernehmen.  Den zweiten,noch größeren Schritt soll aresqa machen! So arbeitet es, und so erklärtsich auch sein Name:  a  a llegro-Daten ausgeben inTabellenform, geeignet zur Übernahme durch ein  re  re lationales Datenbanksystem, darinAnwendung von  sq  SQ Lzur beliebigen Bearbeitung der Tabelle, dann Rückgabe an  a  a llegro: Wiedereinspeisung in die Datenbank  Die von einer aresqa -Aktionbetroffenen Sätze können auf Wunsch während der Aktion in der allegro -Datenbankalle gesperrt werden.  Hauptinstrument, das wird hier schon klar, bleibt die allegro -Datenbank.Das RDBS wird als Bearbeitungs- und Auswertungsinstrument genutzt, nicht fürpermanente Datenhaltung. So etwas wie ein Tandem-Betrieb mit verteiltenAufgaben ist nicht angestrebt. Aber Tabellen können nun in beiden Richtungen ausgetauscht werden.  Zugabe 1: Es ist auch möglich, die letzten drei Schritte ohne den ersten zumachen! Falls man in einer relationalen Datenbank einen eindeutigen Schlüsselfür eine allegro -Datenbank hat, kann man derselben auch Daten zumEinmischen übergeben, die man vorher nicht als Tabelle von ihr erhalten hatte.Diese Daten können dann in vorhandene Sätze eingefügt oder als neue Sätzegespeichert werden. (Mit der IMPORT-UPDATE-Methode ging das immer schon, aberdie Übergabe RDB -&gt; allegro wird nun stark erleichtert.)  Zugabe 2: Neue Datensätze via Tabelle erzeugen! Wenn die ersteTabellenspalte nichts als die Ziffer 0 enthält, dann wird aus der Zeile einneuer allegro -Datensatz gemacht, in welchem die Tabellenspalten gemäßder .STR-Datei in Datenfelder verwandelt werden.  Zugabe 3: Die Tabellenerzeugung ist abgestimmt mit der bisherigen Methode"Tabellen erstellen". Eine für aresqa erstellte Strukturdatei (s.u.)kann in eine Parameterdatei umgewandelt werden, mit der man in der schonbekannten Weise Tabellen für Office-Programme u.ä. erzeugen kann. (DieUnterschiede liegen nur in der Überschriftszeile und der optional möglichenVorsortierung der Tabelle.)  Hinweis: Die dem RDBS oder einer Tabelleübergebenen Daten stellen nie den gesamten Umfang einer Datenbank dar, sondernimmer eine Auswahl bestimmter Felder oder Unterfelder aus einer Ergebnismengeoder auch aus der Gesamtbank. (Das ist schon deshalb klar, weil man ja mit SQLgar nicht den gesamten Datenbestand modellieren kann .) Denn dieAufgaben, die man evtl. mit SQL lösen will, beziehen sich vermutlich nie aufdie kompletten Sätze und alle Satztypen mit allen Bestandteilen, sondern ebenauf bestimmte Felder. Vorzugsweise werden dies Felder sein, in denen Zahlen,Geldbeträge, Datumsangaben, Codes, Adressen oder sonstige simple Zeichenfolgenstehen, denn damit können RDBS ganz exzellent jonglieren. Die"Zielgruppe" sind also nicht Katalogdaten (bibliographische Daten) imengeren Sinne, sondern in erster Linie Geschäftsgangsdaten.  Vermutung: In den meisten Fällen wird man wohl im RDBS nur "schnell maleben" die übergebene Tabelle in irgendeiner Weise bearbeiten und nachRückgabe wieder löschen - also gar keine eigentliche Datenbankarbeitveranstalten.  DieVoraussetzung für aresqa ist natürlich ein vorhandenes RDBS. Mit dem weit verbreiteten MySQL kann mandiese Voraussetzung in weniger als einer Stunde auf einem normalen PC kostenlosund bequem herstellen.  Man braucht:  MySQL Server : www.mysql.de/ "Downloads", oder von Firma MySQL AB:   dev.mysql.com/tech-resources/articles/4.1/installer.html   Client : Konsolprogramm mysql.exe (im Serverpaket enthalten!)   oder SQLyog ( empfohlen ) www.webyog.com/    oder MySQL-Front: www.mysqlfront.de/download.html  Ist nur MySQL verwendbar - was ist mit anderen Systemen? MySQL ist kostenlosund deshalb überall einsetzbar, das ist besonders für viele allegro-Anwenderein entscheidender Punkt. Es hat zudem einen Leistungsstand erreicht, mit demes für die hier interessierenden Aufgabenbereiche hinter keinem anderen Systemzurücksteht. Gleichwohl, wer aresqa mit einer anderen Engine einsetzen will, etwa Oracle oder DB2, könnte dies tun, denn die Kommunikationzwischen allegro und RDBS erfolgt über standardmäßige SQL-Skripte bzw.CSV-Dateien, wie sie jedes RDBS verarbeiten kann.  Dateien,die aresqa braucht  Strukturdatei q-xyz.str  Struktur der Tabelle (welche Felder...)  FLEXe aresqa1.flx erstellt ein SQL-Skript undeine Tabelle, s.u.   aresqa2.flx liest die Tabelle (nachBearbeitung) wieder ein  Skript q-xyz.sql Skript für MySQL zur Übernahme der Tabelle  Tabelle q-xyz.tab Die Tabelle selbst, die vom SQL-Skript geladen wird  Die Namen derDateien (nicht der FLEXe) beginnen also mit q- . So kann man sie leicht erkennen.  Der Nutzer hatnur die Strukturdatei anzulegen, was einfach ist und von a99 unterstützt wird.  So sieht die übergebeneTabelle q-xyz.tab aus:  inn1 [tab] feld1 [tab] feld2 [tab]...[tab] feldN  inn2 [tab] feld1 [tab]...  ...  wobei nn1, nn2... die internen Satznummern sind, ODERgeeignete eindeutige Schlüssel: dann steht nicht ein i am Zeilenanfang, sondern ein | und die Registernummer.  Die wichtigsteKomponente ist die Strukturdatei . Sie ist denkbar einfach konstruiert.So sieht eine Strukturdatei für 4 Felder aus:  #kk1    Name des Feldes #kk1  &amp;kk2    Name des Feldes #kk2  #kk3$s  Name des Teilfelds $s von #kk3  #kk4$t  Name des Teilfelds $t von #kk4  Das Feld #kk2soll dem RDBS übergeben werden, also in der Tabelle auftauchen, bei derRückgabe an allegro aber nicht mit übernommen werden. Deshalb beginnt die Zeilemit &amp; statt #. $s und $t sind Teilfeldcodes. Der Inhalt von feld1 wird also aus #kk1entnommen, feld2 aus #kk2, feld3 aus dem Teilfeld s von #kk3, Feld 4 aus demTeilfeld t von #kk4 ...  Die Strukturdatei wird zuerst gebraucht, um die Tabellendatei zuerstellen, aber dann auch hinterher, wenn die Tabelle zurückgeholt werden soll,um die Spalten dann wieder den Feldnummern und Teilfeldern zuzuordnen (denn inder Tabelle selbst stehen ja diese Angaben nicht drin).  Vorgang  FLEX aresqa1.flx erstellt eine Tabelle mit Hilfe derStrukturdatei q-xyz.str :  Ergebnismenge bilden   aresqa1.flx ausführen: q-xyz.tab und q-xyz.sql entstehen  MySQL Client aktivieren  Skript q-xyz.sql starten ( q-xyz.tab wird geladen, darin steckt dieErgebnismenge als Tabelle)  Aktionen mit SQL...   q-xyz.tab wieder ausgeben   aresqa2.flx ausführen: q-xyz.tab wieder einlesen (mit Hilfe von q-xyz.str )  Ergebnismenge ist verändert  Übrigens, wie oben schon angedeutet:  aresqa2.flx kann auch eine Tabelle einlesen, die vorher nicht mit aresqa1 erstellt wurde, sondern die man mitanderen Mitteln selber produziert hat, die aber in Form, Feldfolge und-inhalten der Strukturdatei zu entsprechen hat.  Mehr zu denDateien  Nun die genauereBeschreibung der Strukturdatei, der Tabelle und des sql-Skripts:  q-xyz.str  ( Strukturdatei )  Das ist die Liste der Felder (Nummer und Name), aus denen die Tabelle zu bildenist. Die erste Tabellenspalte darf nur ein eindeutiger Schlüssel sein. Imeinfachsten Fall ist es automatisch die interne Satznummer, mit demBuchstaben i davor.  Man kann abereinen anderen Schlüssel verlangen, indem man die .STR-Datei mit einem p-Befehlbeginnt (kleines p!):   pX  = eindeutiger Schlüssel (Erzeugung bei Sprungmarke X inden Indexparametern),  Sonderfall p@ : Primärschlüssel  Weitere Zeilen beginnen mit # oder &amp;  #FeldNr1     Feldname1  #FeldNr2$x   Feldname2  ...  &amp;FeldNr n (mb) Feldname n  Feld n nur in MySQL anzeigen, bei Rückführungignorieren!  #FeldNrN     FeldnameN   DieFeldname-Angaben bilden dann die Spaltennamen der MySQL-Tabelle! Vor Feldname n (n=1...N) hat jeweils mindestens ein Leerzeichen zustehen, kein TAB-Zeichen.  Die ersteSpalte aber ist etwas besonderes: sie enthält im Normalfall (ohne p-Befehl) dieinterne Satznummer, mit Buchstabe i davor.  Alternativ ist die erste Spalte ein eindeutigerSchlüssel, der durch den p-Befehl deklariert wird.  Folgen kanneine Zeile, die mit |r xy beginnt.Sie besagt: die erste Spalte ist ein Schlüssel, der im Register r steht unddort das Präfix xy hat. Beim Zurücklesen der Tabelle wird dann jeweils derInhalt der ersten Spalte genommen, mit xy vorn ergänzt und im Register rgesucht, um den zugehörigen Satz zu finden.  Jede Zeile,die mit # beginnt oder mit &amp;, entspricht einer Tabellenspalte.  Zeilen, diemit &amp; statt # beginnen, erzeugen (in aresqa1.flx) eine Tabellenspalte ingenau derselben Weise wie die #-Zeilen, aber diese Tabellenspalten werden beiRückführung der Tabelle (in aresqa2.flx) nicht übernommen. Sie dienen nur dazu,die Tabelle dem menschlichen Bearbeiter im RDBS leichter verständlich zumachen. Z.B. kann ein Name darin stehen, der als solcher nicht verändert werdensoll. Manipulationsbefehle ( mb ) sind nurbei solchen Feldern anwendbar. D.h. die übergebenen und zur Bearbeitungvorgesehenen Feld- und Teilfeldinhalte müssen vollständige, unveränderteInhalte sein.  Wenn UTF-8 zumEinsatz kommen soll: Als Hilfe zur Umcodierung nach UTF-8 wird dieParameterdatei p-unicod.apr gebraucht. Diese kann unverändert fürandere Konfigurationen benutzt werden. (Kopie machen: p-unicod.bpr, wenn eineB.CFG im Einsatz ist.)  Hinweis zum p-Befehl:  Wenn man mitdem p-Befehl einen anderen eindeutigen Schlüssel wählt (der auch bei jedem Satzauftritt!), darf bei der Sprungmarke X  kein #u1 vorkommen, m.a.W. dortdarf nur mit echten Kategorienummern gearbeitet werden.  q-xyz.tab [Codierung in dieser Dateinormalerweise ANSI, wahlweise UTF-8]  Diese Datei wird von aresqa1.flx automatisch erstellt.  Die erste Spalte enthält einen eindeutigen Schlüssel der allegro-Datenbank:   iInterneNummer   ODER Schluessel eindeutigerSchlüssel, dessen Präfix im |-Befehl der Strukturdatei steht   ODER  | rSchluessel r=1...9,:,; eindeutiger Schlüssel im Reg. r  Inhalt von #feld1  Inhalt von Teilfeld $x aus #feld2  Inhalt von ... #feldN  Diese Inhaltebilden pro Satz jeweils nur eine Zeile, die Datenfelder sind durch TAB(ASCII-Code 09) getrennt. Das ist die allgemein übliche Struktur einerCSV-Datei, aber eben nicht mit Komma, sondern TAB als Trennung.  q-xyz.sql  Auch dieses Skript wird von aresqa1.flx automatisch erstellt. Es enthält die fürMySQL nötigen Befehle, um die Datenbank und deren Tabelle anzulegen (beideheißen immer "aresqa") und sodann das Laden der q-xyz.tab zuveranlassen. So sieht das Skript aus:  /*  Skript zum Erstellen und Einlesen einer aresqa -Tabelle  2004-11-13  Ausführen:  C:\Programme\MySQL\MySQLServer4.1\bin&gt;mysql &lt;skriptdatei  danach ist die Datenbank aresqa vorhanden, sie hat nur  1Tabelle, und die heisst "aresqa". Wenn sie schon existierte,  wird sie gelöscht!  */  CREATE DATABASE IF NOT EXISTS `aresqa`;  USE `aresqa`;  DROP TABLE IF EXISTS `aresqa`;  /* DieTabellendefinition muss jeweils erstellt werden! */  /* DieFeldauswahl ergibt sich aus aresqa1.flx und Strukturdatei */  CREATE TABLE `aresqa` (  `Id` varchar(25) NOT NULL,   `ISBN` varchar(255) default NULL,  `Signatur` varchar(255) default NULL,  `jahr` varchar(255) defaultNULL,  `verlag` varchar(255) default NULL,   PRIMARY KEY  (`Id`)   ) ;  /* DieDatei aresqa.tab wird auch von aresqa1.flx erstellt,  darin stehen die Datenzeilen, ANSI- oder UTF-8 codiert mit TAB als Trenner!  */  LOAD DATA CONCURRENT LOCAL   INFILE"c:/allegro/q-xyz.tab"   INTO TABLE aresqa  FIELDS TERMINATED BY '\t'  LINES TERMINATED BY "\r\n"   ;  /* DieRückgabe erfolgt dann später mit: */   use aresqa  SELECT * from aresqa INTO OUTFILE"c:/allegro/q-xyz.tab"  Statt c:\allegro hat hier das Arbeitsverzeichnis zu stehen, auf dem a99 läuft.  Tip:  Diese zweiBefehle kann man auch in eine Datei out.sql schreiben und dann mit dem Aufruf  mysql&lt;out.sql  von derKonsole aus starten.  Arbeitsweise in a99 [hier nur kurze, noch vorläufige Hinweise]  Die Startseitefür das Tabellen-Erstellen ( h table geben!) wurde entsprechend erweitert,damit man Strukturdateien erstellen, auswählen, bearbeiten und starten kann. BeimStarten übernimmt aresqa1.flx die Strukturdatei und produziert dieTabellendatei.  NachBearbeitung im RDBS holt man die Tabelle zurück mit dem Aufruf von aresqa2.flx . In die Nutzervariablen #uqQ schreibt manvorher den Namen der Struktur, die Tabellendatei hat auf dem Arbeitsverzeichnisdes Anwenders zu liegen,  Strukturdatei und Tabelle müssen sichselbstverständlich entsprechen.    aresqa-Viewer und Editor : Nicht nur für Tabellen!    Als Werkzeugfür das Betrachten und (in gewissen Grenzen) Bearbeiten von Tabellendateienwurde ein Modul entwickelt, das mit dem neuen FLEX-Befehl aresqa aktiviert werden kann. Aber nicht nurTabellen, sondern beliebige Listen- und Textdateien (das sind ja alleseinspaltige Tabellen) kann man hiermit anschauen und editieren. Und zwar imASCII- oder ANSI-Code, aber dieser Unterschied fällt normalerweise nicht mehrauf! Dazu gehören besonders auch ViewListen, UIF- und INI-Dateien, Formulare,CFG- und Parameterdateien sowie FLEX-Dateien. Wir haben also mit aresqa nichtsweniger vor uns als einen neuen, alternativen Editor für alle diese Dateien...  Holen Sie sichdas V25-Gesamtpaket , dannkönnen Sie alles sofort selber nachvollziehen. So sieht das aresqa-Fenster aus:      Selber ausprobieren: Man erhält diesen Anblick, wenn man beim neuen a99 im Schreibfeld  eingibt: x    ar help/flex.vw Hat man auch den neuen onerror.flx installiert, wird's noch einfacher: man gibt nur ein: a help/flex.vw Es stimmt: beim Dateinamen ist auch / statt \ möglich.  Sondertips:  1. Wenn man nur a eingibt, wird der        Inhalt des Anzeigefeldes, egal was es gerade ist, ins aresqa-Fenster        projiziert. 2. Wenn man  a name gibt,        und die Datei name existiert nicht, wird sie hinterher angelegt. Das ist        vermutlich jetzt der schnellste Weg, eben mal eine kleine Datei anzulegen, z.B.        eine FLEX- oder Batch-Datei.   Und noch eine ganz andere Anwendung mit aresqa: Geben Sie einfach nur ein: d , und schauen Sie, was passiert.  Hinweis: In a99 bzw. alcarta kann man nur weitermachen, wenn man zuerst        das aresqa-Fenster schließt.  Mit F1 oder dem Button [Help] kommt Hilfe (Datei ha_ar erscheint). Dieses Fenster kann man stufenlos vergrößern und verkleinern, anders als das  View-Fenster. Es folgt die (im Vergleich zum F1-Hilfetext) etwas ausführlichere  Beschreibung der Funktionen:  Die Cursor-Tasten funktionieren, wie man es erwartet. Mit Tab-Taste springt man    zwischen der Liste und dem Eingabefeld "Find" hin und her.  Im Feld " Find " kann man eingeben:  -- eine #Zeilennummer, um zu der betr. Zeile zu springen (wenn es eine größere Liste ist), also z.B. #100 für      Zeile 100. Oder  (das kennt man vom ViewListen und Kurzlistenfenster) -- ein Suchwort (beliebige Zeichenkombination) wobei Groß-Kleinschreibung    gleich- wertig ist, auch Umlaute können als solche oder      aufgelöst eingegeben werden. Mit [+] und [-] springt man zum nächsten / vorigen      Vorkommnis des Suchworts.  Sonderfall: Setzt man ^ vor das Suchwort, wird      nur am Zeilenanfang gesucht.  Suchen+Ersetzen : Eingabe von ,abc,xyz,   bzw. _abc_xyz_, um abc durch xyz zu ersetzen.  Mit [ Code ] wird die Anzeige zwischen ASCII (DOS) und ANSI (Windows)umgeschaltet. Wenn die Umlaute falsch erscheinen, drücken Sie auf diesen Knopf. (Nicht immerkann das Programm korrekt erkennen, welche Codierung die Datei hat.)  [Enter]-Taste zeigt die ausgewählte Zeile in einem Eingabefeld, wo man sieändern kann.  [Einfg]-Taste ermöglicht das Eingeben einer neuen Zeile. Sie wird VOR die momentan markierte Zeile eingefügt.  [Entf]-Taste löscht die markierte Zeile.  [ Add] Ermöglicht die Eingabe neuer Zeilen, die ans Ende gehängt werden.Man gelangt in eine Eingabeschleife, damit man bequem mehrere Zeilenhintereinander eingeben kann, bis man das Eingabefeld mit [Esc]-Taste schließt.  [ Copy] Kopiert die markierte Zeile ins Eingabefeld. Die bearbeiteteZeile wird dann als neue Zeile unter der markierten eingefügt.  [ Undo ]Macht die letzte Editier-Aktion rückgängig.  [ Redo ] Umgekehrt. Beides geht mehrfach hintereinander! Die Markierungspringt jeweils auf diejenige Zeile, wo die Änderung sich ausgewirkt hat. DieseFunktionen arbeiten zeilen- bezogen, nicht zeichenweise. Ist man am Anfangs- bzw. Endpunkt deraufgezeichneten Aktionen angekommen, wird der Undo- bzw. Redo-Button grau, damitman sieht: mehr geht nicht.  Mit Maus kann man eine einzelne Zeile verschieben. Sie wird dannvor diejenige Zeile geschoben, auf der man die linke Maustaste freigibt.  Anm.: Ein Markieren und Kopieren oder Löschen mehrerer Zeilen ist nichtvorgesehen. Denn dies würde die Funktionen [Undo] und [Redo] sehr erschweren.   [ Save ] schreibt, ohne dasFenster zu schließen, die Tabelle in die Datei aresqa.lst . Was damit geschieht, wenn man das Fenster schließt, ist Sache des FLEXes, inden der aresqa-Aufruf eingebaut ist. Nach erfolgter Speicherung wird der Buttoninaktiv (grau), aber die nächste Änderung aktiviert ihn wieder.  Beispiel: onerror.flx In welchem Code gespeichert wird, sieht man in dem Feld unter dem Save-Button. Mit dem Button x daneben kann man den Speichercode umschalten. So ist es ganz einfach, eine ASCII-Datei in ANSI zu wandeln und umgekehrt.  Mit Taste # erhält man die vollständige Anzeige der ausgewählten Zeile.Nützlich, wenn diese sehr lang ist. Mit Taste [Enter] sieht man auch die ganzeZeile, aber zum Bearbeiten.  Das Statusfeld (über [Code]) zeigt zwei Zahlen: die Nummer der markierten Zeileund die Gesamtzahl der Zeilen. Bei Bearbeitungen ändern sich diese Zahlen entsprechend.   Hinweis zu  alcarta : Darin (und auch in a99, wenn die Berechtigungunter 5 liegt) fehlen die Buttons unter dem Statusfeld, also alleBearbeitungsfunktionen. In a99 kann man zusätzlich das Bearbeiten ganz verhindern,wenn man die Funktion mit dem FLEX-Befehl Aresqa statt aresqa aufruft.  [ OK ] und [ Esc ] schließen das Fenster. In beiden Fällen wird, wennÄnderungen noch nicht gespeichert sind, zur Entscheidung aufgefordert. DieOriginaldatei wird nicht überschrieben, siehe [Save], es entsteht nur die Datei aresqa.lst . Der Unterschied ist nur: bei OK steht anschließend die zuletzt markierte Zeilein der "internen Variablen" und kann so im FLEX ausgewertet werden;nach Esc dagegen ist die iV leer.   Sonderfunktionen bei ViewListen Hat man eine Datei mit .vw als Dateityp vor sich, dann 1. Zeilen, die mit h beginnen, bewirken sofortige Anzeige des Hilfetextes 2. Zeilen, die mit inummer oder nummer beginnen, bewirken direkte Anzeige deszugehörigen Satzes. 3. Beim Speichern werden die Zeilen auf gleiche Länge gebracht, damit die Dateidann sofort die korrekte Struktur hat. Dazu wird die längste Zeileermittelt und die anderen auf diese Länge aufgefüllt. Die Punkte 1 und 2 entsprechen dem, was man von den ViewListen kennt. Nur sindhier auch die vor dem | stehenden Befehle bzw. Nummern zu sehen. So kann manschon beim Bearbeiten einer ViewListe sehen, ob sie funktioniert!        [i] zuletzt aktualisiert:         18.04.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
   Import mit FLEX            allegro-C  BlueChyp  V27.2            Neuer-und Verbesserungen     7. Mai 2007                       Mehr zu den Themen:       [1] Volltextsuche  [2]MultiX  [3]Rechnen mit FLEX  [4]Import mit FLEX  [5]asort 32bit  [6]FLEX-Lehrbuch  [7]Web-Anbindung  [8] zDirect: Z39.50 Client      Importmit FLEX     Zwar bleibendie bekannten Importfunktionen mit dem DOS-Programm IMPORT.EXE vollerhalten, aber die FLEX-Sprache bietet ab V27.2 alleMöglichkeiten, die man für einfacheDatenkonvertierungen braucht. Zwei Dinge sind es vor allem, die mankönnen muß, um Fremddaten umzuwandeln    Daten einlesen aus einerDatei, und zwar immer einen Datensatz als Ganzes. Entscheidend ist dazudie Fähigkeit, in der Fremddatei fortlaufend zu lesen, biseine charakteristische Zeichenkombination gefunden wird, die das Endeeines Satzes oder den Beginn des nächsten markiert. Dasmuß auch dann funktionieren, wenn es keine Zeilenstrukturgibt - typisch für manche Fremddatenquellen.   Der Befehl   fetch eN   kann dies.   Beispiel: Die Sätze sinddurch zwei Leerzeilen getrennt, das entspricht einer Zeichenkombination13 10 13 10.   Man schreibt dann:   var 1310 13 10   fetch e4   ins #uzy   und es wird alles eingelesen bis zumnächsten Auftreten dieser Kombination aus 4 Zeichen. Dereingelesene Satz wird als Ganzes kopiert in #uzy zur weiterenVerwendung.        Datenfelderherausziehen aus demFremdsatz mit Hilfe der Manipulationsbefehle und in eigene Felderkopieren. Häufig braucht man dazu Ersetzungen vonZeichenfolgen durch andere sowie Umwandlung von Einzelzeichenüber Tabellen. Die dazu nötigen Fähigkeitensind jetzt alle vorhanden; neu hinzugekommen ist der Befehl   xcode  , mit demauch die früheren Import-Protypenersetzungen möglichsind. Mit den neuen Befehlen p und y (wie in den altenImportparametern) kann man die Zeichenumwandlungen definieren.    Beispiel: Das Feld "Verlag"befindet sich in den Fremddaten im Feld 260 und beginnt mit $b, endetmit $c   Manschreibt dann, wenn man vorher den ganzen Fremddsatz wie obeneingelesen hat:   var#uzy(b"260 " b"$b" e"$c")   ins #75   und es wird der Inhalt des Fremdfeldes isoliert undin #75 kopiert.   In den Importparametern hätte man dasselbeso ausgedrückt:   #75   s "260 "   b"$b"   e"$c"    Hier werdennun zwei Fälle dargestellt, in denen die FLEX-Technik neueLeistungen erbringt, und das ganz ohne Importparameter. Der Fall2 ist noch schneller unddirekter!    1.Der Fall OHIOLINK  Als Beispielkann der Fall von MARC-Daten dienen, wie man sie aus dem SystemOHIOLINK, einem sehr großen Zentralkatalog, leicht kopierenkann. Sie können sofort per ISBN selber einen solchen Satz original ausOHIO abrufen ! Es erscheint ein JanaS-Fenster, indem der Datensatz mit MARC-Nummern zu sehen ist. Achtung: Wenn dasSystem den richtigen Datensatz nicht hat, kommt ein anderer, in derRegel unpassender, bei dem ein Anfangsteil der ISBNübereinstimmt.)  Dann:  1. Mit derMaus den ganzen MARC-Satz markieren, mit Alt+c in die Zwischenablage kopieren  2.JanaS/Fenster verlassen, in dieses Anzeigefeld klicken, hintereinander Alt+a und Alt+v    Der MARC-Satz erscheint. Auf Wunsch kann man mehrereDatensätze untereinander einkopieren. Dann:  3. ImSchreibfeld  Xohio   eingeben.Anzeigefeld wird verarbeitet.    Anschließendhat man den umgewandelten Satz so vor sich, als hätte man ihnselber eingegeben.  Der Datensatzist aber noch nicht gespeichert, d.h. man kann vorher nochändern oder löschen.  Der FLEX ohio.flx liest ineiner Schleife jeweils einen Abschnitt bis zum nächsten"LEADER" und macht aus den so eingelesenen Daten einen allegro -Datensatz.Diese Datensätze kommen in den Offline-Speicher undkönnen dann mit Alt+q besichtigt werden.  Besondersattraktiv bei den Ohio-Daten ist, daß in vielenSätzen die Inhaltsverzeichnisse der Bücher enthaltensind! Das gibt es bei keiner anderen Datenbank, und hier bekommt mansie nicht als PDF, sondern als strukturierte Texte in derwiederholbaren MARC-Kategorie 970.    So sehendiese Daten aus:    LEADER 00000pam  2200000a 4500  001  30811572  003  OCoLC  005  19950423121748.0  008  940630s1995  nyu  000 1 eng   010  94027510  020  0449225550  040  DLC|cDLC|dndc/sfd  043  e-uk-en  050 00 PR6058.O912|bA63 1996  100 1  Howatch,Susan.  245 10 Absolute truths /|cby Susan Howatch.  250  1stBallantine Books domestic ed.  260  NewYork :|bFawcett Crest,|c1996.  300  624p. ;|c18 cm.  610 20 Church ofEngland|zEngland|xClergy|xFiction.  650  0Cathedrals|zEngland|xFiction.  650  0Bishops|zEngland|xFiction.    LEADER 00000pam  2200000a 4500  001  9066419  008  821119s1982  caua  b  0000 eng   010  82022697  020  0913890545(pbk.) :  020  |z093179045X(pbk.)  040  DLC|cDLC|dKSU  050 0  TJ163.2|b.T6561982  082 0  333.79|219  245 00 Tools for the soft path /|cby theInternational Project   for Soft Energy Paths ; Jim Harding ... [et al.]  260  SanFrancisco :|bFriends of the Earth,|cc1982  300  288p. :|bill. ;|c28 cm  504  Includesbibliographical references  650  0 Powerresources  650  0Energy conservation  650  0Energy policy  700 10 Harding, Jim  710 20 International Project for Soft EnergyPaths    LEADER 00000pam  2200000a 4500  001  40964731  003  OCoLC  005  19991025121013.0  008  990223s1999  gw a  b  1010 eng   010  99020159  020  3540657029(acid-free paper)  040  DLC|cDLC|dOHX|dC#P|dCWR  050 00QB843.E2|bI28 1998  072  7 QB|2lcco  082 00523.8/8|221  111 2  IAUColloquium|n(169th :|d1998 :|cHeidelberg, Germany)  245 10 Variable and non-spherical stellar windsin luminous hot   stars :|bproceedings of the IAU Colloquium no. 169,held   inHeidelberg, Germany, 15-19 June 1998 /|cB. Wolf, O.   Stahl, A.W. Fullerton (Eds.)  260  Berlin;|aNew York :|bSpringer,|cc1999  300  xx,424 p. :|bill. ;|c24 cm  440  0Lecture notes in physics,|x0075-8450 ;|v523  504  Includesbibliographical references and index  650  0 Earlystars|vCongresses  650  0Stellar winds|vCongresses  700 1  Wolf,B.|q(Bernhard),|d1935-  700 1  Stahl,O.|q(Otmar),|d1955-  700 1  Fullerton,Alexander W.,|d1959-  970 11 |tObject Index|p423  970 21 |tRotationally Modulated Winds of OStars|cAlex W.   Fullerton|fFullerton, Alexander W., 1959-|p3  970 21 |tRotationally Modulated Winds ofBA-Type Supergiants   |cAndreas Kaufer|fKaufer, Andreas|p11  970 21 |tUsing Spectropolarimetry to DetermineEnvelope Geometry   and Test Variability Models for Hot StarCircumstellar   Envelopes|cKaren S. Bjorkman|fBjorkman, Karen S.|p19 ...  und noch viele weitere solche Felder  970 21|tConference Summary: The Demise of Spherical and   Stationary Winds|cImmo Appenzeller|fAppenzeller, I.(Immo),   1940-|p416  971  |d19990923      DieZeichenfolge am Satzanfang ist LEADER. Das Lesen bis zumnächsten LEADER sieht in FLEX so aus:    var"LEADER"  // damitfängt jeder Satz an!  fetch e6  // Daten lesen bis zu dieser Zeichenfolge    Danach stehtder Datensatz in der iV bereit. Zweckmäßig ist, ihnzuerst in eine #u-Variable zu kopieren, z.B. #uzz .  Durch dieseSyntax wird es auch ganz einfach, Steuerzeichenfolgen als Begrenzungvorzugeben. Wenn etwa das Satzende durch die Sequenz  13 10 13 10 (zwei Leerzeilen) gekennzeichnet ist,dann:  var 1310 13 10  fetche4    =======================================================    2.zDirect : Die Direktabfrage über Z39.50  Gut undschön, wird man sagen, aber muß das soumständlich sein? Es gibt Protokolle, mit denen man solcheSachen automatisieren können sollte, wie es ja auch EndNoteu.a. tun. Das ist wahr, aber ausgerechnet OHIOLINK hat keinenZ39.50-Service, deshalb wurde die oben beschriebene Methode erdacht.Die Library of Congress dagegen und MELVYL (ebenfalls eingroßer Zentralkatalog) haben einen, desgl. der GBV, der SWD,HEBIS und ein paar andere. Und dafür gibt es ab V27.2 einenoch schnellere Methodik. Mitgeliefert werden dafür zwei neueModule: zc.exe und z39.dll . Sie beruhenauf der YAZ-Softwarebibliothek (Open Source). Das Programm zc.exe kann ineinem Zuge von mehreren Servern quasi gleichzeitig per ISBNSätze abrufen und diese dann in eine Datei schreiben. Ein FLEXkann das Programm zc.exe starten unddann sofort die Ergebnisdatei einlesen und umwandeln. Meistens dauertdas nur wenige Sekunden je Server.    Nutzung  ·  Will man dieFunktion routinemäßig sehr oft nutzen, legt man sieam besten auf einen Flip-Button und schreibt in die Datei _start.flx diese Zeile:   flip 3&amp;3: ZDirect=X zc    ·  Zurgelegentlichen Nutzung gibt man ein:  X zc .  Der Aufruf des Programms  zc.exe  ist darin eingebaut.    ·  Will mangelegentlich unterschiedliche Server einzeln nutzen, macht man sichKopien von zc.flx undaktiviert darin die Zeilen für die betreffenden Server. Dannruft man diese FLEXe selektiv auf, z.B. mit  X zc2 .    Was stecktdahinter?  Der FLEXfür die Z39-Suche heißt   zc.flx  (Z-Client).Darin steht eine Listeder Server , die abzufragen sind. DieEinträge dieser Liste haben eine festgelegte Form. Inderselben Form kann man dort weitere Einträge fürandere Server anlegen. Eine Serverzeile sieht so aus:  wri 'UBBS;usmarc ubsun02.biblio.etc.tu-bs.de:2020/opac'  // UB BS  DieKommentare in zc.flx erklären alles weitere.  Eingebundenwird z39m.inc , darinwerden die Suchergebnisse dann umgewandelt und in den Arbeitsspeichergeholt. Im Anzeigefeld erscheinen alle gefundenen Sätze schongleich in der umgewandelten Form. Die Originalform kann man sich mit  h zilist  zeigen lassen.  In  z39m.inc  steckt dasUnterprogramm :z39m , welches dieeigentliche Arbeit macht. Wenn man die Umwandlung verbessern will,muß man nur in diese Datei eingreifen. Auch diese Umwandlungkommt ohne Importparameter aus, es wird alles mit FLEX gemacht.    Ablauf:  zc.flx : nimmt ISBNvom Nutzer entgegen, setzt damit einen Aufruf von zc.exe zusammen undstartet diesen dann   ==&gt; zc.exe fragt dieServer ab und schreibt die Ergebnisse in Datei zilist   ==&gt; zc.flx startetUnterprogramm :z39m (in z39m.inc )   ==&gt; Unterprogramm liest zilist und holt dieDaten in den Arbeitsspeicher    Was ist zutun?  ... wenn manzDirect für eine eigene, Nichtstandard-Datenbank nutzen will?Nur das Unterprogramm z39m.inc istspezifisch für das Zielformat. Ausgeliefert werden zweiVersionen: eine für das A-Format (DOS-Code), die zweitefür das N-Format (ANSI-Code). Man kopiert die passende z39m.inc am besten indas eigene Datenverzeichnis und kann es dort frei modifizieren. Dabeibraucht man sich nur um die Datenfelder zu kümmern, alsohauptsächlich die Feldnummern durch die eigenen zu ersetzen,alle anderen Probleme der Umwandlung sind in zc.flx erledigt.  Diegrößte Besonderheit ist: Es werden Daten ausunterschiedlichen Quellen umgewandelt, die sich im Format und sogar inder Zeichencodierung unterscheiden. Im Falle der DNB bekommt man keineMARC-Daten, sondern ISBD! Und im Falle der polnischenNationalbibliothek sind es Unicode-Daten, beim GBV und DNBunterschiedliche ANSI-Codierungen. Wichtig sind dabei die neuenMöglichkeiten der Umcodierung :     Zeichenumcodierungüber Tabellen  Grundprinzip ist,daß der momentane Text in der internen Variablen mit Hilfeeiner Tabelle umcodiert wird. Es gibt bei den classico -Programmenzwei Arten der tabellengesteuerten Umcodierung, die beim Export bzw.beim Import zum Einsatz kommen. Beide Arten können ab V27.2auch in a99 verwendet werden.    A. Exporttabellen    xcode  ab   avanti  (ab V27)  Codiere den in der iV stehendenText um, und zwar mit der Tabelle p bzw. q  Das ist auch ein Testbefehlfür Experten, zumTesten der diversen Umcodiertabellen!   Folgende Werte kann man setzen:    a = i d x   Index-, Display-, Exportparameter, und darin:  Hinweis: Für  avanti  gelten nur i und x    b = p q   p- bzw. q-Tabelle  Anschließend steht in deriV der entsprechend umcodierte Text.      B. Importtabellen    AbV27.2 gibt es noch weitere Möglichkeiten, Umcodierungenvorzunehmen. Diese sind besonders hilfreich beim Einlesen von Fremddaten , die ja nicht selten anders codiert sind, als man es braucht. Es wirdkeine Import-Parameterdatei herangezogen, aber deren Technik wird genaunachgebildet (siehe Handbuch Kap.11.2.2 ) .    xcodey   [dahinterkommt weiter gar nichts!]  Zur Umcodierung wird eine Tabellebenutzt, die man vorher mit Hilfsbefehlen der Form   y x ... und  p x ...   anlegen kann.    Die Hilfsbefehle geltenalle für die gesamte Sitzung , müssen alsonicht in jedem FLEX erneut gegeben werden. Sie sehenfolgendermaßen aus:    y x u   Ersetzt beim Befehl  xcode y  jedes x durch ein  u .  Beispiel:  y A a  : ersetzt das große Adurch das kleine    y a/z A   Ersetzt beim Befehl  xcode y  jedes a durch ein  A ., jedes b durch ein B usw.  Damit kann man ganze Zeichenfolgenmit einem Befehl definieren, falls es sich um aufeinanderfolgendeZeichen handelt.    y a/z =A   Ersetzt beim Befehl  xcode y  jedes a durch ein  A ., jedes b  auchdurch ein A usw.  Damit kann man ganze Zeichenfolgenin denselben Code umwandeln.    y. nnnmmm   Diese Variante ersetzt beim Befehl  xcode y  jedenDezimalcode nnn durch den Code mmm .  Sonderfall: 256 an der Stelle von mmm bedeutet: Code nnn ignorieren.  Beispiel:  y .13 32  bzw.  y .13 256  : ersetzt Code 13 durch dasLeerzeichen bzw. beseitigt ihn ersatzlos.    p x abcABC   Sog. Protyp-Ersetzungen .Damit kann man Doppelcodes ersetzen: wenn xa auftritt, wird es durch A ersetzt, xa dagegen durch B usw. Solche Codierungen tretenz.B. in MARC-Daten auf, auch wenn diese per Z39 zum Zweck des Importsgewonnen werden.      Hinweise:   1.Eine andere Art der Umcodierung macht man mit den Befehlen  asci/ ansi  . Dabei werden die umkehrbareno-Tabellen benutzt, die in die Anzeige- oder Indexparameter eingebundensind. Normalerweise ist dies die Tabelle o.apt .  2.Wenn man oft mit dem write -Befehl Daten ausgibt, ist esbequemer, die automatisch Umcodierung mit  exp wX  einzuschalten.  Vorher die geeigneten Exportparameter laden!  3.Für die Umwandlung von Unicode-Daten in den Standard-DOS-Code gibt es eine weitere Methodik: sie arbeitetmit einer Tabelle, die man mit u -Befehlen in die Indexparametereinbaut. Eine komplette Liste findet man in der Datei   ucodes.apt .     Beispiel:   Inden Exportparametern sind p-Umcodierbefehle für ASCII-&gt; UTF-8. Wenn nun ein Text in #uxy steht und in UTF-8 umzuwandeln ist,macht man das so:  var #uxy  xco xp  ins #uxy                 http://www.allegro-c.de/bluechyp/        Bernhard Eversberg, UBBraunschweig2007-05-03     
</fragment>
</item>
<item>
<fragment>
  SolrPower für allegro                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig          SolrPower für allegro          Grundlage  Suchmaschinentechnik wird realisiert durch Einsatz der Software namens Solr von Apache. Diese läuft außerhalb des allegro-Systems,normalerweise auf einem Webserver, auf dem auch avanti läuft, aberavanti wird nicht gebraucht, wenn man SolrPower nur in einem lokalen Netz oder auf einem Einzel-PC mit a99/alcarta einsetzen will. SolrPower kann auch in PHPAC und a30 genutzt werden; dazu ist avanti+apac nötig, denn das sind ja Web-Methoden.  Das Einrichten der Sache ist nichts für Nur-Anwender, ein wenigErfahrung in der Systemverwaltung ist unverzichtbar. Diese Anleitungklärt die Zusammenhänge und zeigt, wie es geht.   Nutzung in a99/alcarta Nachdem man, wie unten in          A. und B. beschrieben, die Software eingerichtet hat, ruft man aus          a99/alcarta die SolrPower ab, indem man schlicht den Befehl X asksolr.flx gibt, bzw. man legt diesen Befehl auf einen der Flip-Buttons. Oder wieauch immer man die Funktion starten will - es ist ein ganz normalerFLEX. Und was er produziert, ist eine ganz normale Erg.Menge, derNutzer merkt nicht, was der FLEX in Wirklichkeit alles tut - bzw.nicht der FLEX, sondern Solr! Solr ist ein Programm, das nicht selberauf eine allegro-Datenbank zugreift, sondern auf einen eigenen Index.Damit es den anlegen kann, muß man ihm Daten in XML-Strukturübergeben; intern hat der Index jedoch eine ganz andere, sehrkompakte Struktur, die man nicht kennen muß. Zum Anzeigen undBlättern eignet sich der Index nicht, nur zum Suchen. Ergebnisseliefert Solr dann in einer XML-Struktur, aus der asksolr.flx eine normale Erg.Menge macht. Solr erhält seine Suchaufträge von einem Serverprogramm          namens "Jetty". So ähnlich, wie acon seine Aufträge (Jobs) von avanti erhält. Allerdings muß für jede Datenbank ein          eigenes Jetty mit eigener Portnummer laufen oder eine sog. "Multicore"-Installation verwendet werden.  Man beginnt am besten mit folgenden Schritten, um zu sehen, ob es imeigenen Umfeld funktioniert, und um sich mit der Methodik vertraut zumachen. Weiter unten in Abschnitt B. geht's dann zur Sache: SolrPower für die eigenen Daten.   A. DemoBank mit SolrPower ausstatten   Alles soll erst mal auf ein und demselben PC eingerichtet werden. Webserver und Solr können aber letztlich, für den Dauerbetrieb, auf einem anderen System liegen.   0. Man braucht ab Schritt 4 diese drei Dateien :  Am besten kopieren Sie die Dateien in denDEMO2-Ordner und für Schritt B. in Ihr DbDir! Es stehen Kommentaredrin. Man findet sie im SVN unter flex bzw. prog .   asksolr.flx (erstellt den Suchbefehl und läßt ihn ausführen)   allsolr.flx (erstellt aus der eigenen Datenbank die XML-Daten)   expsolr.flx (desgl., aber nur für die aktuelle Erg.Menge)   e-solr.apr (Zeichenumwandlung. Falls man nicht mit $a.cfg arbeitet, sondern x.cfg : kopieren auf e-solr.xpr und modifizieren.   1. Wenn Java (mindestens 1.5) noch nicht vorhanden, dann aktuelles Java installieren  Man erhält es von http://java.com/de/download/  Java installiert sich z.B. unter C:\Programme\Java\jre7 .   Man ergänzt dann die PATH-Variable mit  C:\Programme\Java\jre7/bin , um Java aufrufen zu können.  Unter Win'7/64 wird es c:\Program Files (x86)\... sein.   (Ein Webserver, am besten Apache ( xampp auf Einzelplatz), wird nur für PHPAC u.ä. gebraucht, für Solr nicht.)    2. Solr-Paket entpacken z.B. in c:\programme\solr   Das Paket kann man downloaden von  http://lucene.apache.org/solr/ )  Darin braucht man nichts zu konfigurieren. Aber ein wichtiger Tip: Wenn            man zuverlässige Trunkierung will, dann diese Angabe rausnehmen aus der Datei schema.xml :   Die Datei liegt in c:\programme\solr\example\solr\conf  Erfahrene Solristen können darin noch viel mehr einstellen. Es ist            sozusagen die CFG und API in einem, in allegro-Sprechweise.   3. Ein DOS-Fenster aufmachen und Jetty starten :  Jetty ist ein für Java-Software nötiges Serverprogramm; es ist mit im Paket. (Eine Alternative wäre Tomcat von Apache.) Dazu auf c:\programme\solr\example  diesen Befehl geben: java -jar start.jar   (In dem start.jar   steckt das Programm drin.)  Es kommen sehr viele Meldungen, die letzte sieht etwa so aus:   INFO: [] Registered new searcher Searcher@e33e18 main  Dieses DOS-Fenster dann minimieren. SolrPower gibt's nur, solange  das Programm Jetty läuft. Diese "Instanz" von Jetty ist aber nur für die  Demo-Datenbank zuständig! Für eine andere Datenbank (siehe B.) braucht man ein eigenes Fenster mit eigener Jetty-Instanz. Man stoppt eine Jetty-Instanz mit  Strg+c  im selben DOS-Fenster.   4. Daten aus allegro DemoBank mit expsolr.flx  exportieren  a) Erg.Menge machen (z.B. Volltextsuche mit Suchbegriff #20, d.h. all e Sätze, die einen Titel haben.)  Dann X expsolr eingeben und auf Endemeldung warten.  Es entsteht c:\programme\solr\example\exampledocs\katalog.xml ODER   b) Gesamtbank: X allsolr eingeben und auf Endemeldung warten.  Es entsteht solr-1.xml . Diese verschieben nach c:\programme\solr\example\exampledocs\  (Hierbei wird ein Batch ccc.bat erzeugt, der dann acon mit allsolr.job ausführt.) In beiden Fällen wird zum Exportieren die Parameterdatei e-solr.apr verwendet.    5. Solr-Index erstellen Noch ein DOS-Fenster aufmachen und  Auf c:\programme\solr\example\exampledocs diesen Befehl:   java -jar post.jar katalog.xml  (Es dauert bei 100.000 Datensätzen weniger als 2 Minuten)  Letzte Meldung: ... COMMITting Solr index changes..  Es entsteht c:\programme\solr\example\solr\data\index\  Dort liegen dann die Indexdaten von Solr für die DemoBank.   6. Schon kann's losgehen! In a99 eingeben:   X asksolr [oder dies auf einen FlipButton legen]  In das Eingabefeld dann geeignete Suchwörter eingeben, die automatisch mit AND verknüpft werden   7. "Enter" drücken und asksolr.flx tut sein Werk  Binnen kurzem erscheint eine Ergebnismenge, die von Solr produziert wurde.  Damit kann man umgehen wie mit jeder Erg.Menge. Nicht anders als hätte man sie z.B. mit PRESTO gemacht ("externe" Erg.Menge).    B. Eigene Datenbank(en) mit SolrPower ausstatten   Aufgabe:  Die Datenbank in c:\allegro\XYZ soll SolrPower erhalten.  (Setzen Sie überall statt XYZ Ihren Ordnernamen ein)  Prinzip ist, daß eine eigene Instanz von Jetty eingerichtet wird mit eigener PortNummer und dazu ein eigener Solr-Ordner für die Datenbank XYZ . (Eine andere Möglichkeit, die sog. "Multicore"-Technik, bei der ein Jetty mehr als eine Datenbank betreuen kann, wurde noch nicht auf  ihre Eignung untersucht).   1. Den gesamten example -Ordner kopieren :  c:\programme\solr\example  --&gt; c:\programme\solr\XYZ [müßte nicht unbedingt " XYZ " heißen, ist nur praktisch]  Darunter liegen dann insbes. diese Verzeichnisse (die anderen            interessieren nicht):   -- etc mit jetty.xml   -- exampledocs für die zu indexierenden xml-Daten   -- solr/data/index für den Index   2. Bearbeiten :  Die Datei c:\programme\solr\XYZ\etc\jetty.xml  An zwei Stellen ersetzen:  default="8983" durch default="8984"  Die Nummer 8983 bzw. 8984 ist die PortNummer. Durch diese unterscheiden sich zwei Instanzen von Jetty und geraten nicht durcheinander.  Man kann andere Portnummern wählen. Diese müssen ggfls. in der Firewall freigegeben werden für Zugriffe von außen.   3. Jetty-Instanz starten auf  c:\programme\solr\XYZ :   java -jar start.jar  Diese "Instanz" von Jetty ist dann also nur für Datenbank XYZ zuständig   4. Kopie des FLEXes  expsolr.flx nach c:\allegro\XYZ (siehe A.4)  Darin diese Zeile ändern:   open x c:/programme/solr/example/exampledocs/katalog.xml  zu   open x c:/programme/solr/XYZ/exampledocs/XYZ.xml  (Ob Sie die Datei " XYZ.xml " nennen, ist eigentlich egal.)  Außerdem in expsolr.flx evtl. die zu exportierenden Felder ändern,  besonders wenn es keine A-Datenbank ist.   5. Daten damit exportieren , (siehe A.5) a) Erg.Menge machen und dann X expsolr . Die Daten landen in der genannten Datei  XYZ.xml .   ODER b) Gesamtbank: X allsolr  Es entstehen Dateien solr-N.xml (N=1,2,...)  mit jeweils nicht mehr als 32MB Die verschiebt man nach  c:/programme/solr/XYZ/exampledocs  Gebraucht wird  e-solr.apr   6. Noch ein DOS-Fenster, und in  c:/programme/solr/XYZ/exampledocs  den (leider etwas komischen) Befehl geben  a) java -Durl=http://localhost:8984/solr/create -jar post.jar   dann wird ein leerer data-Bereich für den Index angelegt.  Es kommt zwar eine Fehlermeldung:   FATAL: Solr returned an error: Not Found  Das ist aber OK.  Und dann  b) java -Durl=http://localhost:8984/solr/update -jar post.jar solr-*.xml   womit die Daten indexiert werden  Endemeldung: COMMITting Solr index changes..  Wennspäter weitere Dateien hinzukommen, nur noch der zweite Befehl,dann den Namen der betr. xml-Datei am Ende.   7. Kopie des FLEXes  asksolr.flx nach c:\allegro\XYZ  Darin diese Zeile ändern (auf die PortNr : 8984 kommt's an):   var "Fhttp://localhost: 8983 /solr/s...  zu   var "Fhttp://localhost: 8984 /solr/s...   Und nun kann's losgehen, die Datenbank XYZ hat jetzt SolrPower.  Man ruft sie in a99 ab - wie gehabt - mit X asksolr oder wie auch immer.   Tip: Das Suchbefehlsfeld dazu nutzen, indem man asksolr.flx umbenennt in onfnda99.flx ,              denn dieser wird automatisch ausgeführt, wenn man keinen              gültigen Suchbefehl eingibt, und eine Eingabe für SolrPower              ist ja eben kein gültiger a99-Suchbefehl! Hinweis: In alcarta wird statt dessen onfndalc.flx ausgeführt. Am Anfang dieser beiden FLEXe muß man dazu aber die ersten vier Befehle ersetzen durch:  var #ux0  ins #uwo     C. Einige Tips   Solr-Index erneuern  o  Server stoppen (im Fenster von Schritt 3.: Strg+c)  o  Verzeichnis ../solr/data  löschen  (s. Schritt 5.)  o  Schritte 3 - 5 wiederholen   Weitere Daten einspeisen (Index aktualisieren)  Zuerst die Daten in der XML-Form (exportiert mit expsolr.flx o.a.) bereitstellen. Dann denselben Befehl wie in B.6.b . Sätze mit derselben internen Nummer werden dabei ersetzt, nicht dupliziert!   Solr Dokumentation  Die ist mit im Paket; geben Sie im Browser ein:   c:/programme/solr/docs/index.html   Zur Funktionsweise  Die Funktionsweise            von Solr ist nicht immer transparent, vor allem die Anordnung (das            Ranking) der Ergebnisse. Damit es keine Probleme mit Diakritika gibt,            werden die Daten von expsolr.flx so aufbereitet, daß nur die Grundbuchstaben an Solr übergeben werden.    Zur Suchbefehls-Syntax Hinweise dazu gibt es hier, wenn man mehr will als die hier vorgestellte Minimalversion:   http://wiki.apache.org/solr/SearchHandler?action=show&amp;redirect=StandardRequestHandler   Konfigurieren Selber dies und jenes konfigurieren kann man unter   c:\programme\solr\example\solr\conf  vor allem in der Datei schema.xml ,  z.B.   Ferner liegen dort stopwords.txt und synonyms.txt .  An alledem wurde für die hier vorgestellte Minimalvariante nichts geändert !   In den FLEXen expsolr.flx und asksolr.flx wird der FLEXperte einiges entdecken,              was modifiziert werden kann. Im zweiten z.B. die Anzahl der            Ergebnisse, die maximal gezeigt werden sollen: In der Angabe  ...&amp;start=0&amp;rows=1000... ändert man dazu die Zahl 1000.  Die Datenfelder,            die Solr durchsuchen soll, können in e-solr.apr vorgegeben werden.            Hier sind Änderungen auf jeden Fall dann nötig, wenn man            nicht mit A.CFG arbeitet. Es existieren entsprechende Dateien,             e-solr.bpr und e-solr.npr, für MAB bzw. N.CFG.   Nutzung mit a30  Auch in a30 kann SolrPower schon genutzt werden (mit  a30solr.job). (Für PHPAC bleibt noch etwas zu tun.) Man läßt im FreiRaum von a30 einen Suchschlitz für Solr erscheinen, indem man im Job schreibt:   wri "_!_FRE " n  // alternativ  _!_FRE1, dann FreiRaum Nr.1  wri "TE Eingabe:|100" n  wri "IN VurS|300" n  wri "BU Solr|a30solr" n   Der Job   a30solr.job  erhält dann die Eingabe in der Variablen  #urS,            übergibt sie an Solr und liefert die Ergebnisse an a30, jedenfalls              die ersten 100 Ergebnisse. Dies zu erweitern wäre nicht schwer,              aber oft reichen schon die ersten 20, weil Solr schon ein "ranking"            (genannt "scoring") vornimmt!   NEU und wichtig für SolrPower in a30 ( a30ajax.php + a30solr.job ) ist die Variable (in  a30_ini.php  einzusetzen)   $SPort="8984";  // SolrPort, default 8983   Damit wird ein anderer Port (andere Instanz von Jetty) eingestellt, falls es nicht 8983 sein soll.    Logdatei In .../solr/example/logs/ entsteht eine Logdatei. Schauen Sie mal rein, ob Sie draus schlau werden...     Literatur   Smiley, David &amp; Pugh, Eric : Solr 1.4 Enterprise Search Server. - PACKT Publ., 2009. - 317 S. ISBN 978-1-847195-88-3                  [i] zuletzt aktualisiert:         29.08.2012 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
   VuFind 2.x unter Windows installieren  .code1 { font : 14pt Courier; }      allegro + VuFind      InstallationVuFind 2.x unter Windows (Aug.2014/Jan. 2015)  (Beruht auf der Anleitung von vufind/org )  Die englischeFassung wurde gestrafft, präzisiert und wonötig ergänzt. Zu den einzelnen Abschnitten wurdenjeweils während der Arbeiten Notizen geschrieben, die im zweitenTeil gesammelt sind und auf die vom ersten Teil verlinktwird. Viele Stolpersteine konnten in Korrespondenz mit demVuFind-Entwickler, Demian Katz, beseitigt werden, dem hiermitausdrücklich gedankt sei, wie auch verschiedenen Kollegen inDeutschland, die mit ihren Erfahrungen geholfen haben. Praktisch durchgeführt wurde alles am Beispiel derKatalogdaten des DeutschenHistorischen Instituts Warschau (Anwender seit 20 Jahren), woman plant, diesenKatalog später in Betrieb zu nehmen alsAblösung des bisherigen PHPAC. Dazu würde man, nebenweiteren Modifikationen, z.B. gern noch den VuFind-Index des GBVanbinden, was jetzt noch nicht geschehen ist. Die Dokumentationzur Vorversion kann evtl. mit herangezogen werden, obwohlfür einen Neubeginn nur die aktuelle Version zu empfehlen ist.Für die Version 2.x wurde bewußt ein neuer,ballastfreier Anfang gemacht und hierbei nur so knapp wiemöglich genau das protokolliert, was zum Erstellen einerfunktionsfähigen Instanz gebraucht wird. Fürweitergehende lokale Anpassungen kann die alte Doku immer noch Hilfebieten.  Tip: Die offizielleDoku (englisch) ist ein Wiki mit Suchfunktion.  Wichtiger Hinweis: Die Umwandlung der allegro -Daten(s. 10.) und ihre Bereitstellung für VuFind ist das geringsteProblem,auch das regelmäßige Updating ist einfach und gehtschnell.Die notwendigen Parameter (Wandlung allegro-Daten -&gt; MARC-Daten)sind vorhanden und bei Bedarf leicht anzupassen.  Der sog "Index"des VuFind-Systems ist in keiner Weise mit einem allegro -Indexvergleichbar. Er besteht aus einer Anzahl Dateien, darunter eine, inder die komprimierten MARC-Daten stehen, die man in VuFind dann in derIntern-Anzeige zu sehen bekommt, s.a. 11a. VuFind kann nur in seinem eigenen Index suchen, auchnicht z.B. in einem Pica-Index. Daher ist das Umwandeln und Indexierenin jeder Umgebung erforderlich, und das bedeutet auch, daßeinVuFind-Index nicht ständig aktuell sein kann. Ein Updating istdaher in jedem Fall notwendig. Mit allegro ist es gelöst. Nur die von Statusdaten ("verliehen"etc.)würde noch zusätzliche PHP-Skripte erfordern (einesog.DAIA-Schnittstelle). Für Präsenzbibliotheken ist dieskeinThema.    ERSTER TEIL :Installation und Konfiguration der Komponenten  0.Erfordernisse  Sehr wichtig:MySQL auf derselben Maschine   DieSeite requirements beachtenfür die Fremdpakete! Andere Versionen auf eigenes Risiko...  Installationmit Xampp ist etwas einfacher, aber nicht fürProduktionsumgebung empfohlen.  Hierwird angenommen, daß das VuFind-Paket in c:\vufind liegt undApache 2.4 in c:\apache24 . Das ist nichtzwingend.   1.Download VuFind  --&gt;Notizen   Von: http://vufind.org/downloads.php . Das .zip-Paket ist für Windows zu empfehlen. Alles entpackenin c:/vufind . Eingriffe werden nötig in den Ordnern  local: LokaleVersionen gewisser Dateien, z.B. die httpd-vufind.conf fürApache, und aus config die vufind/config.ini import: wichtig:  marc.properties .( Hierauch die jetty-Dateien, diese aber ohne Änderungsbedarf)  public: Nur dieStartdatei index.php! (Wirdautomatisch erstellt) solr: in biblio/index liegen dieSolr-Indexdaten  module: z.B. VuFind/src/VuFind/RecordDriver/SolrDefault.php sog.getter-Funktionen für MARC  oder  .../SolrMarc.php  (ist umfassender! "extends SolrDefault")  themes:   in   blueprint/templates/RecordDriver/SolrDefault sinddie Datenanzeige-Templates   Achtung: In config nichtsändern, sondern zu ändernde Dateien nach local kopieren, inden jeweils entsprechende Unterordner dort  Am allerwichtigsten ist local\config\vufind\ config.ini mitsehr vielen, z.T. unverzichtbaren lokalen Einstellungen. Nach Änderung: Apache neu starten, nicht VuFind, das liest diese Datei gar nicht!!! Sie istnur für Solr wichtig.  Dasgesamte Paket (ohne Apache und MySQL, PHP und Java) hat gut 6000Dateien in gut 3400 Verzeichnissen. Die meisten werden wohl nichtwirklich gebraucht, und nur um sehr wenige muß man sichkümmern - diese werden nachfolgend behandelt.  2.Webserver: Apache 2.4  --&gt;Notizen   Von: http://httpd.apache.org/download.cgi .Die typischen Optionen des Installationsassistenten sollten ok sein. Oder: http://www.apachehaus.com/cgi-bin/download.plx   Apache alsDienst installieren, damit es beim Hochfahren des Rechnersautomatisch startet.  Inder Konfig-Datei conf\httpd.conf das# vor dieser Zeile wegnehmen:   LoadModule rewrite_module modules/mod_rewrite.so  (d.h. den mod_rewrite Modul aktivieren)  Undauch diese Zeile muß sein:  ( index.php heißt die Startdatei)   DirectoryIndex index.html index.php  Fehlersuche: Wenn z.B. einganz leeres Ergebnis im Browser ankommt, dann im Apache-Ordnerin logs/error.log nachsehen  Hinweis: ImApache-Bereich liegen keine Dateien für VuFind, die liegenalle unter c:\vufind   Anm.: Wenn es Datensätze gibt mit '/' in der Idnr, dann AllowEncodedSlasheson im Abschnitt  der httpd.conf !     3. MySQL5.6  --&gt;Notizen   Von: http://dev.mysql.com/downloads/mysql/5.0.html#downloads .Typische Optionen des Install-Assistenten übernehmen. Wenn manein root-Paßwort setzt,  (keine schlechte Idee),dieses unbedingt notieren. In der MySQL-Datenbank liegen keine Katalogdaten, sondern Nutzerdatenund Tags u. dgl.  WichtigeDatei: libmysql.dll  Das libraryfile libmysql.dll istnötig. Fehler wie "missing database driver" kommen, wennWindows es nicht finden kann. Wenn es solchen Ärger gibt,dann:  1.) libmysql.dll inden  PHP Ordner legen und diesen in den Systempfad eintragen(wie unten beschrieben beim Java JDK ).  2.)Wenn libmysql.dll nicht imPHP-Ordner, könnte es im MySQLOrdner sein (z.B. C:\ProgramFiles\MySQL\MySQL Server 5.0\bin). Es kann helfen, diesenOrdner in den PATH zu setzen. Warnung: Wenn dieDatei im  PHP und im MySQL Ordner ist,dann ist die PHP-Version wahrscheinlich die korrekte und die von MySQLmacht Probleme. Evtl. den MySQL-Ordner aus dem PATHherausnehmen, damit's läuft.   4. PHP5.5  --&gt;Notizen   Downloadvon  http://windows.php.net/download/ .Die "thread safe" Version wählen, wenn man nicht guteGründe dagegen hat.  Empfehlung: Den Ordner  php an den Apache-Ordner hängen. (Nicht zwingend)  Wichtig: PHP und Apachekooperieren nur, wenn sie beide für 32-bit  bzw. 64-bit sind und vom selben Compiler, z.B. VC9.  GeeigneteVersion von Apache wählen und den Konfig-Pfad angeben (z.B. c:\Apache24\conf\ ); Keine Panikbei Fehlermeldung – Man kann es später manuellkorrigieren (siehe unter 7. VuFind konfigurieren weiter unten).  ImAbschnitt "Choose Items to Install" : PEAR installieren lassen (unter Extras) und folgende extensions (unter PHP /Extensions):   GD2 (optional,empfohlen wegen besserer Anzeige der Covers)  Internationalization(intl)  LDAP (optional)  Multi-ByteString (optional, aber empfohlen)  MySQL  MySQLi  PDO (mit MySQL)  XSL   Environment  DiePATH-Variable ergänzen um  PHP : z.B. an PATH dieAngabe ;c:\www\apache24\php anhängen. Dann ist überall der Befehl php möglich, um PHP-Skripte zu starten. Zu Environment-Variablensiehe Umgebungsvariablenändern .  Anm.   WennKomponenten bei der ersten Installation vergessen wurden, einfach denInstaller nochmal starten für die betr. Module.  PHP installiertu.U. Erweiterungen ohne die nötigen library files. Start vonPHP wird dann  pop-up-Fehlermeldungen bringen. Danndie php.ini editieren (in c:\...\PHP\, auch über die StartMenu-Abkürzung) und auskommentieren (; davorsetzen) wasstört (zu finden in Zeilen mit =php_*.dll). Wenn man davontatsächlich was braucht, dann diese Dateien per Googleausfindig machen.    5. Java7  --&gt;Notizen   JDKvon: http://java.sun.com/javase/downloads/?intcmp=1281 .Die Default installation options kann man alle nehmen.  EineSystem-Environment-Variable namens JAVA_HOME setzen auf den Pfad zurJava Installation, wo bin\java.exe liegt, z.B.  z.B.JAVA_HOME=c:\programme\java\jre1.7.0_21  (oderz.B. c:\ProgramFiles (x86)\Java\jdk1.x.y_z ). Siehe dazu Umgebungsvariablenändern .    6.VuFind initialisieren : Das Install Script  --&gt;Notizen     cmd (DOS-Fenster).   In Windows 7einfach cmd in das Suchfeld ganz unten links eingeben. U.U. rechtsklicken auf den "cmd"-Befehl und "Als Administratorstarten", damit alles mit den richtigen Berechtigungen versehen wird.   Weiter imDOS-Fenster: cd c:\vufind  Das Skriptstarten : php install.php eingeben  und Enter.   DieFragen mit den Defaults beantworten (Enter und sonst nichts)– Man kann das auch später wiederholen umÄnderungen zu machen.  7. VuFindkonfigurieren  --&gt; Notizen  7.1Environment-Variablensetzen  VUFIND_HOME und VUFIND_LOCAL_DIR setzen. BeiUnklarheiten siehe Umgebungsvariablenändern .  7.2VuFindmit Apache verbinden  Die httpd.conf bearbeiten. Folgendes muß rein:  Includec:/vufind/local/httpd-vufind.conf  (Ändern,wenn die Datei woanders liegt).  Apachenach Änderungen neu starten.  GegenNetz-Timeouts folgende Einträge in php.ini  machen oder inder   http-vufind.conf :   php_value default_socket_timeout 25  php_value max_execution_time 30  Kleinereoder größere Werte einstellen (beide in Sekunden)abhängig vom Environment. Das socket timeout sollte kleinersein als die max execution time. Das ist 100%Windows-spezifisch – auf*nix-Plattformen unnötig.  7.3TroubleshootingApache  Debugging-Tipsgegen "Forbidden"-Meldungen u.ä.:  Wenndie PHP-Installation nicht automatisch PHP zur Apache Konfigurationergänzt hat, dann in der httpd.conf folgende Zeilen einfügen, oberhalb der "Include"-zeilefür http-vufind.conf :   LoadModule php5_module "c:\Program Files\PHP\php5apache2_4.dll" ... oder 2_2.dll, je nach Apache-Version!  AddType application/x-httpd-php .php  PHPIniDir "c:\...\PHP\"  (Pfadangabefür PHP muß natürlich stimmen)  DieApache logs können helfen - zu finden imWin'Startmenü unter ApacheHTTP Server / Review ServerLog Files   mike_beccaria(Jun 09) : Add“Options All” to the httpd-vufind.conf file if youare getting an “access Denied” on the homepage anda “Directory index forbidden by option directive”error in the apache error.log.   demiankatz(Jul 09) : if the PHP install added multiple PHPIniDir and LoadModule entries to the bottomof httpd.conf and this is preventing Apache from starting, comment outthe duplicate ones and leave only the first pair intact.     7.4Solrkonfigurieren  Dieconfig files für jeden Solr Index sind u.U. auf relative Pfadegesetzt. Unter Windows kann Solr u.U. die  Indexdateien nichtfinden. Dann gibt's keine Ergebnisse. Solr dann umkonfigurieren mit denexpliziten Pfaden für die Indexe:  Indiesen Dateien stehen alle Einstellungen für Solr:   c:/vufind/solr/biblio/conf/solrconfig.xml  c:/vufind/solr/authority/conf/solrconfig.xml  c:/vufind/solr/stats/conf/solrconfig.xml  Darin dieseZeilen finden:   ...  Darinevtl. die relativen Pfade ändern auf:   c:/vufind/solr/biblio hier liegen die Indexdaten!  c:/vufind/solr/authority  c:/vufind/solr/stats  Beispiel:    &lt;dataDir &gt; ${solr.data.dir:./solr/biblio} &lt;/dataDir &gt;   ändernin:   &lt;dataDir &gt; c:/vufind/solr/biblio &lt;/dataDir &gt;   7.5Solr testen  Doku: https://wiki.apache.org/solr/CommonQueryParameters   Damit kann man per Browser direkte Abfragen machen, z.B.  http://vufind...:8080/solr/biblio/select/?q=SUCHWORT&amp;rows=20&amp;start=0&amp;indent=yes&amp;qf=allfields&amp;qt=dismax&amp;fl=*%2Cscore&amp;wt=json oder den Teil ab q=... in die Solr-query-Konsole eingeben.  8.VuFind starten  Normalerweise: vufind start eingeben in c:\vufind . DiesesFenster dann nicht schließen! Man sieht dort ständigdie protokollarische Anzeige der Aktivitäten. Wenn man's in einem Remote Desktop macht, dann den RDT "Trennen", nicht"Schließen". Leider kann man es nicht als Dienst starten. (In Linux dagegen geht esals Daemon)  9.Abschließendes Checking --&gt; Notizen  Nacherfolgreicher Installation sieht man eine Seite mit dem Titel "AutoConfigure"  Sonstin einem Browser zu dieser URL gehen:  http:// your-server-name /vufind/Install/Home  (Hierstatt your-server-name dieStartadresse, die man für VuFind vorgesehen hat;statt vufind deneigenen Pfad, wenn man beim Installieren einen anderen gewählthat).  z.B. http://vufind.allegro-c.de:81/vufind/Install/Home  Dannerscheint   Basic configuration... OK  usw., u.U."Fehlgeschlagen" statt "OK", dahinter dann repariert : da drauf klicken (es müßteeigentlich "reparieren" lauten!  Troubleshooting (Debugging)  (s.a. unten 1b.) Wennnur leerer weißer Schirm oder "Es ist ein Fehler aufgetreten", dann   Apache errorlog checken – siehe oben Troubleshooting Apache .  Wenn's nichthilft: in c:/vufind/local/httpd-vufind.conf dieseZeile aktivieren  SetEnv VUFIND_ENV development Apache-Restart :Entwicklermodus, der hilfreiche Fehlermeldungen liefernkönnte, aber auch Hinweise wie  Notice: Undefined index:title_sub in C:\vufind\module\VZG\src\VZG\RecordDriver\SolrVZGRecord.phpon line 79  was keinen Fehler darstellt - im aktuellen Satz fehlt hier das Feld title_sub  Noch dazu kann man debug = true setzen in der config.ini (s.u. 1.b). Dann werden DEBUG-Meldungensichtbar. Wenn das dann eine URL ist, die an Solr gerichtet ist, danndiese kopieren und direkt in den Browser eingeben. Aus den Meldungenvon Solr kann man u.U. was entnehmen.  PHP-Fehler sichtbar machen? Inphp.ini setzen:  display_errors= On    Nochkein Erfolg? Dann --&gt; support page .  Hinweis:   Um die VuFindMySQL-Datenbank zu setzen, braucht man das root Passwort, das bei derMySQL-Installation gegeben wurde.   Konfigurationfestschreiben  Sobaldalle Einstellungen stimmen, sieht man einen Link "Disable AutoConfiguration" auf der Seite "Auto Configure". Darauf klicken, um dasInstallskript zu blockieren. Falls es doch nochmal gebraucht wird,manuell in der config.ini ändern.  10.Import Records  --&gt;Notizen MARCEDIT downloaden und installieren von http://marcedit.reeset.net  (Unter "Download from oregonstate.edu" Latest Version 32bit  DOWNLOAD - Keineanderen Buttons klicken) Siehe dazu auch: http://www.allegro-c.de/doku/vufind/marcedit.htm   Ab Version 6.0hat MARCEDIT auch ein Konsolprogramm namens cmarcedit.exe .Um damit z.B. eine Datei  daten.mrk in eine echte MARC-Dateinamens daten.mrc zu wandeln, startet man es so: cmarcedit-make -s daten.mrk -d daten.mrc . Mit cmarcedit-h erhält man Hilfe.  Zumeigentlichen Importieren im Sinne von "Einspeisen" (Schritt 3.)muß VuFindgestartet sein! Siehe 8.   a)Daten erstmals importieren    Daten aus allegro -Datenbankals MARC-Datei daten.mrk exportieren mit marctxt.apr  Befehl daten.mrk geben und  "File / Compile file into MARC".Ergebnis: daten.mrc (Daten imechten MARC-Format)  Oder ab Version 6.0 wahlweise so: cmarcedit-make -utf8 -s daten.mrk -d daten.mrc   Diese Dateiverschieben nach c:\vufind unddann dort in einem DOS-Fenster : import-marc daten.mrc  Der Vorgangläuft dann automatisch ab, man sieht Zwischenmeldungen auch indem DOS-Fenster, wo VuFind gestartet wurde   Wenndabei Fehler kommen, dann den Befehl mit Option --test-only geben, um genauere Fehlermeldungen zu erhalten.    b)Updating   Die Log-Dateimit log2alg in eine .alg verwandeln:  log2alg cat imDatenordner geben, dann wird aus cat.log die Datei cat.alg   Die cat.alg mit marctxt.apr in log.mrk exportieren: srch-dcat.alg -emarctxt=log.mrk  log.mrk in log.mrc wandeln (siehea.2) mit cmarcedit-make -s log.mrk -d log.mrc   Dann diese mit import-marc log.mrc einspeisen   11. Anzeige und Indexierung anpassen : Siehe dazudie --&gt;Notizen     12.Logo, Standorte, Sprachen : Siehe dazudie --&gt;Notizen     Hinweis  WennVuFind's "Wikipedia author information module" genutzt wird (das istaktiviert in config.ini ), dann beiProblemen Apache's "heap size setting" erhöhen in httpd.conf :  ( Formore details, see the  VUFIND-630  JIRA ticket .)   ThreadStackSize 8388608     Appendix:Umgebungsvariablen ändern bei Win'7   "Start"Menü  Rechtsklick auf“Computer”  "Eigenschaften"  "ErweiterteSystemeinstellungen"  Button"Umgebungsvariablen"  Neue Variable:"Systemvariablen" / "Neu"  EineVariable ändern:  daraufdoppelklicken   ******************************************************************************    ZWEITER TEIL :Notizen (konkrete Erfahrungen)     1. Download VuFind: Entpacken in c:\vufind Dann zuerst einige weitere Voraussetzungen schaffen, s. 2.-5.   DanachInitialisieren: s. 6.  (einige Dateien automatischvorbereiten etc.)  Wichtig f. Datenimport:  ./import/marc.properties +marc_local.properties Darin (marc_local) auch Bibliotheksname und Adresse !!! Änderung wird nur wirksam, wenn man die Daten alle neuimportiert!!!  1a. System-Umgebungsvariable setzen: Systemvariablen (!) Neu: VUFIND_HOME=c:\vufind  Neu: PHP_HOME=c:\apache24\php    1b. Viele wichtigeEinstellungen in  C:\vufind\local\config\vufind\ config.ini (ACHTUNG: local! Denn c:\vufind\config ... enthältnur die gelieferten Standardversionen) Nach Änderungen:  Apache neu starten  Einige wichtige Sachen darin:  autoConfigure = false  after auto-configuration is complete    [Site]  email  =name@abc.xyz.de language = de timezone = "Europe/Berlin"  [Database] database       = mysql://root@localhost/vufind/   Falls maneine DAIA-Schnittstelle hat:  driver= "DAIA" wenn ILS offline, gelbe Meldungsbox beim Start:"Wegen Wartungsarbeiten ..." (in themes/blueprint/templates/search/home.phtml)   Ohne driverkeine Statusabfrage beim ILS: driver = "noILS" (der wird als default geladen, wenn dererstgenannte nicht existiert!) (Es kommt dann nur auf dem Startbild eineWartungs-Warnmeldung, s.o.) Verhindern: in  config/NoILS.ini den Wert  mode = ils-none  setzen) Die Drivers liegen in module/VuFind/src/VuFind/ILS/Driver GBV hat dafür den driver DAIA.phpentwickelt Ein Driver  allegro.php wäre noch zu entwickeln ...  Fuer Logging: diese Zeilen und zugehörigeaktivieren, wenn MySQL zur Speicherung gewünscht ; CREATE TABLE log_table ( id INT NOT NULL AUTO_INCREMENT, ; [Logging Sonst: Wenn eine Datei  vufind.log entstehen soll:  [Logging] file          = /vufind/vufind.log:alert,error,notice,debug   [Spelling] enabled = false   statt "true" falls sonst Fehler von Solr kommen  Link resolver...  [OpenURL] ;url            = "http://openurl.myuniversity.edu/sfx_local" resolver       = EZB  ; für Covers: [Content] coverimages     = Google,OpenLibrary  [System] debug = true    nur setzen, um Testmeldungenzu kriegen insbes. die Suchbefehle, die zu Solr gehen und Fehler verursachen  [Site] defaultRecordTab= Description  Dannwird der Tab "Beschreibung" automatisch geöffnet, unter derSatzanzeige, statt "Exemplare"  [Languages] alle gewünschten aktivieren, Reihenfolge nach Wunschändern   ------------------------------------------------  2. Apache // Download:  http://www.apachehaus.com/cgi-bin/download.plx //           Version 2.4.x VC9 , httpd-2.4.10-x86.zip // requires  Microsoft Visual C++ 2008 SP1 RedistributablePackage (x86) // oder      Visual C++Redistributable for Visual Studio 2012 Update 4 //  download fromhttp://www.microsoft.com/en-us/download/details.aspx?id=5582  // ODER zum Testen: c:\xampp\apache\bin\httpd.exe   //Wichtigste Datei: c:\Apache24\conf\ httpd.conf darin aktivieren: LoadModule rewrite_module modules/mod_rewrite.so  Neue Zeile: ScriptAlias /cgi-bin/ "c:/Apache24/cgi-bin/"  index.php hier einfügen:  DirectoryIndex index.html index.php    Define SRVROOT "/Apache24" ServerRoot "${SRVROOT}"  DocumentRoot "c:/Apache24/htdocs"  ...   AllowOverride None Options None Require all granted    LoadModule php5_module C:/Apache24/php/php5apache2_4.dll and PHPIniDir "C:/Apache24/php"   AddHandlerapplication/x-httpd-php .php PHPIniDir "c:/Apache24/php/"    Erst wenn das allesstimmt, kann folgendes auch klappen:  Include C:/vufind/local/httpd-vufind.conf Darin steht ein Alias fuer das eigentliche Startverz.,z.B.  c:\vufind\public  Firewall: Programm Apache... / Eigenschaften // Aktion: Zulassenfür Web   ------------------------------------------------   3. MySQL  server . Muß als Dienstlaufen, wird nicht von VuFind selber gestartet Dienst-Startbefehl z.B.: "C:\Program Files\MySQL\MySQL Server 5.6\bin\mysqld"--defaults-file="C:\ProgramData\MySQL\MySQL Server 5.6\my.ini" MySQL56 Zum Installieren: mysql-installer-web-community-5.6.19.0.msi Empf.: www.softpedia.com Man muss einen account bei Oracle einrichten, kostenlos Option "Server only" wählen Root password wählen und sorgfältigaufbewahren!! Dienstname: Default MySQL56 Wird dann automatisch als Dienst eingerichtet und gestartet Prüfen mit   sc query mysql56  "C:\Program Files\MySQL\MySQL Server 5.6\bin\mysqld" --defaults-file="C:\ProgramData\MySQL\MySQL Server5.6\my.ini" MySQL56  Evtl.: C:\Program Files\MySQL\MySQL Server 5.6\lib\libmysql.dll copy to Und in der /vufind/local/config/vufind/config.ini  muss stehen: [Database] database = "mysql://vufind:password@127.0.0.1/vufind" ACHTUNG: Das wirkt sich sofort aus! Wird bei jedem Zugriff gelesen.  Um passwort des Nutzers vufind zu ändern:  Am mysql prompt: GRANT SELECT,INSERT,UPDATE,DELETE ON vufind.* TO 'vufind'@'localhost'IDENTIFIED BY 'your-desired-password' WITH GRANT OPTION;  FLUSH PRIVILEGES;  und das Pw auch eintragen in  local/.../config.ini  ------------------------------------------------   4. PHP 5.5 from: http://windows.php.net/downloads/releases  Paket: php-5.5.13-Win32-VC11-x86.zip  Entpacken nach  c:\Apache24\php   Achtung: rename php.ini-production  to  php.ini   Systemeigenschaften/Systemvariablen:  Hier zuerst Punkt6 : phpinstall.php  PEAR installieren: get  http://pear.php.net/go-pear.phar to c:\Apache24\php then  php go-pear.phar dazu muß vorhanden sein: msvcr110.dll  auf \windows\system32 oder im PHP-Ordner. (Win64: msvcr110.dll 875.472 Bytes von 2014)  Wichtig: korrekter include_path, z.B. include_path = ".:/www/php/includes"  Installierte Module checken: php -m  In php.ini aktivieren: (Pfad evtl. ändern!)  extension=c:/apache24/php/ext/php_mysqli.dll  oder extension=php_mysqli.dll   zend.multibyte= On  extension=php_gd2.dll  extension=php_xsl.dll  extension=php_mbstring.dll extension=php_exif.dll     ; Must be after mbstring as it depends on it    ------------------------------------------------    5. Java 7 (nur für Solrwichtig) Java wird von VuFind selber gestartet, wie auchSolr z.B kann es auch liegen in c:\program files(x86)\java\jre7 darunter jedenfalls Ordner "bin" und darin java.exe EnvironmentVariable PATH :  JAVA_HOME ergaenzen    ------------------------------------------------    6. VuFind initialisieren:   phpinstall.php (in c:\vufind)  Base path:  z.B. "/vufind"  (das ist default) Es wird dann ein Alias eingerichtet:  Alias /vufindC:/vufind/public aber in  ./public  liegt nur das Startfile index.php!  Dann kommt dieser output: Apache configuration written to C:/vufind/local/httpd-vufind.conf  Diese .conf muß Apache zusätzlich laden. Damit esdas tut: Windows Start Menü -&gt; Apache HTTP Server -&gt; Editthe Apache httpd.conf Dann diese Zeile zur httpd.conf ergänzen:  IncludeC:/vufind/local/httpd-vufind.conf  Außerdem diese Zeile einbauen:  Alias /vufind /c:/vufind/public  Nach dieser Aktion: Apache neu starten.  Damit wird VuFind zum Testen zugänglich unter der URL http://localhost/vufind  Im Fehlerfall: Systemereignisprotokoll einsehen:  eventvwr.msc dann Windows-Protokolle/ System , auf !Fehler doppelklicken Schuld ist evtl. die Zeile  IncludeC:/vufind/local/httpd-vufind.conf  Damit Befehlszeilen-Tools funktionieren, diese Umgebungsvariablensetzen:  VUFIND_HOME=c:/vufind VUFIND_LOCAL_DIR=C:/vufind/local  -----------------------------------------   7. VuFind starten Dazu muss JAVA_HOME gesetzt sein und jvm.dll vorhanden  (z.B. in c:\Program Files (x86)\Java\jre7\bin\client )  Startbefehl: vufind start in c:\vufind  Startet auch Java und Solr! Wenn Start nicht gelingt mit einer Java-Fehlermeldung, ist evtl.java.exe schon am Laufen. Dann zuerst killen, z.B. mit procexp.exe (Download: http://www.heise.de/download/process-explorer.html)   --------------------------------------------   9. Abschließendes Checking (im Browser):  http://localhost/vufind/Install/Home Und Fehlermeldungen untersuchen! MySQL Passwort wirdgebraucht!  Wennirgendwo "Reparieren" dransteht, jeweils klicken, dann wird das gemacht.   9a.Solr Diagnose (im Browser):  http://localhost:8080/solr/#/   Diagnose-Tool. ist Solr am Laufen?  Wichtig: unter "Core selector": Biblio / Schema  pruefen. Ist es das richtige Schema? Oder "Authority", alsovertauscht? Die Zuordnung steht in  solr/solr.xml. Dortändern   Unter "biblio" dannOverview: Statistics-Seite erscheint, darauf ein Button "Optimize" -komprimiert die Indexdaten und zwar die Verz.vufind/solr/biblio/index, sowie  spellcheckerund spellShingle (was immer die machen)  Zu empfehlen: Jeweils nach einem Update wieder "Optimize" machen   --------------------------------------------    10. Daten einspeisen, Typ .mrc  Daten aus Katalog exportieren in  daten.mrk  mitmarctxt.apr dann Befehl:  daten.mrk  startet MARCEDIT, Menue"File / Compile File into MARC" erzeugt  data.mrc  Daten importieren:  -- Zuerst den Index (d.h. die gesamten Solr-Daten!) löschen: (Dies immer, wenn man den Index ganz neu aufsetzenwill: Unter Win: Inhalt von \vufind\solr\biblio\index  löschen (--&gt; https://vufind.org/wiki/re-indexing )  -- Dann die neu umgewandelten Daten indexieren: (--&gt; https://vufind.org/wiki/importing_records ) Windows:  in \vufind: import-marc.bat data.mrc ACHTUNG: Dazu muß in einem anderenFenster vufind gestartet sein, siehe7., weil sonst solr nicht läuft  LOG-Dateien einspeisen: Umwandeln in log.mrk mit marctxt.apr, dann Befehl:   log.mrk  startet MARCEDIT,Menue "File / Compile File into MARC" Erzeugung von  log.mrc dann in \vufind den Befehl import-marc log.mrc  Dabei können Fehlermeldungen auftreten, wenn die MARC-Datenfehlerhaft sind:  D.Katz, 12.8.14: "Bad request" : means there's some sort of invalid data in the record-- for example, multiple values in a single-valued field. Usually there is more detailed error information displayed on the Solrside than on the SolrMarc import side. If you can isolate a bad record andindex it while watching the console output from Solr, you can see which fieldis causing the issue. You can use the JETTY_LOG environment variable to log the Solr output to a file, which might help in tracking this down if you can't easily isolate a bad record. When starting Solr from the command line, just do something like:  set JETTY_CONSOLE=c:\jetty.log vufind.bat start  Then you can look through jetty.log for detailed messages.    ----------------------------------------------------  LokaleAnpassungen    11a. Datensatz-Anzeige anpassen see also: https://vufind.org/wiki/vufind2:record_drivers https://vufind.org/wiki/vufind2:record_driver_method_master_list  Die zuständigen .phtml-Dateien:(quasiAnzeige-Parameter) ==&gt;\vufind\themes\blueprint\templates\RecordDriver\SolrDefault .css:  ==&gt;\vufind\themes\blueprint\css    core.phtml = Template, Vorlage für die Einzeltitel-Vollanzeige  result-list.phtml = Templ. für die Kurzlistenanzeige genutzt wird: SolrDefault.php : getter functions(holen MARC-Feldinhalte aus den Solr_Daten) ==&gt;\vufind\module\VuFind\src\VuFind\RecordDriver\ SolrDefault.php z.B. getCallNumber() (für dieFormatierung der Signatur) s. dazu im Wiki dieListe dergetter-Funktionen: ==&gt;https://vufind.org/wiki/vufind2:record_driver_method_master_list Feldnamen in /vufind/import: (brauchtman f.d. getter-Funktionen)  marc.properties :Definitionen von Feldnamen: zB 'edition', 'callnumber-a' oder in  marc_local.properties: die lokal abweichenden Angaben; Diese haben dann höhere Priorität als gleichnamige in marc.properties. ==&gt;\vufind\import   ABER:  Template für Tab "Beschreibung" (z.B. "physical" =Seitenzahl = MARC 300) steht in dieser Datei: \vufind\themes\blueprint\templates\RecordTab\ description.phtml Darin kann evtl. ein Fehler sein: Abschnitt am Ende (mit"videoclips") rausnehmen.     ACHTUNG: Nach Änderungen an .properties: vufindneu starten! nur die .phtml werden sofortwirksam.    11b.Solr-Indexierung anpassen  also quasi die Index-Parameter: /vufind/solr/biblio/conf/ schema.xml beruht auf marc.properties und    11c. Optionen fürdas Suchen findet man in  searches.ini z.B. unter [Sorting]: "relevance" oder "year". Default : "default_sort=..." und im Falle von sharding, wenn auf einen bestimmten Bestand zu filtern ist: default_filters[] = "institution:DHI Warschau"    11d. Signaturgruppen  Liste in /vufind/import/translation_maps/ callnumber_map.properties Muss vor dem Import vorliegen, sonst kein Browsingnach Signaturen! Default ist LC-Liste A - Z  --------------------------------------------------------------------  12. Logo  (erscheintganz oben)  vufind_logo.jpg in  \vufind\themes\blueprint\images ersetzen durcheigenes Signet der Bibl. Herzchen für "Favorites" (wennman das albern findet):  heart.png auf   \vufind\themes\blueprint\images\silk und/ oder  \vufind\themes\bootprint\images\icons   13. Standorte Die Default-Meldung "3rd Floor MainLibrary" steht in \vufind\module\VuFind\src\VuFind\ILS\Driver\ Sample.php   14. Sprache der Oberfläche \vufind\languages: de.ini  deutsche Texte Nach Änderung:Verzeichnis  /vufind/local/cache/languages löschen! Wird neu erzeugt ... Die Reihenfolge im Sprachauswahlfeld steht in derconfig.ini. Nach Änderung Apache-Neustart.  15. Facetten(angezeigt auf der rechten Seite) Auswahl und Reihenfolge in\vufind\config\vufind\facets.ini (Kopie nach local!)  16. Export-Funktionen export.ini nach local kopieren (wie config.iniund facets.ini) und z.B. Reihenfolge ändern  Zusätzlich in  config.ini  Abschnitt  [Export] anpassen  Achtung: Nicht die Bezeichnungen "Endnote" etc. in diesen Dateienändern! Falls aber doch nötig, d.h. z.B. EndNote/Citavi" gewünscht, dann in toolbar.phtml diese Zeile einsetzen statt der vorhandenen: export()-&gt;needsRedirect($exportFormat)):?&gt;target="escapeHtmlAttr($exportFormat)?&gt;Main"href="recordLink()-&gt;getActionUrl($this-&gt;driver,'Export')?&gt;?style=escapeHtmlAttr($exportFormat)?&gt;"&gt;transEsc('Exportto')?&gt; escapeHtml($exportFormat =='EndNote' ?'Endnote/Citavi' :$exportFormat)?&gt;   17. GBV einbinden (zunächstbeim GBV Berechtigung geben lassen)  1. in local/httpd-vufind.conf einfügen und Apache neu starten: SetEnvVUFIND_LOCAL_MODULES VZG  2. Ordner VZG (vom GBV, in GitHub zu finden) unter module  anhängen  https://github.com/gbv/vufind/tree/master/module Darin  ist SolrVZGRecord.php  besonders wichtig,ergänzt module/.../SolrDefault.php Korrekte Fassung s. Anhang (korr. vonD. Katz, 8.1.15) Das Index-Schema vom GBV ist hier:  https://github.com/gbv/findex-config/blob/master/SolrCloud/solr_config/schema.xml   3. In config.ini  bzw.  searches.ini: (siehe: https://vufind.org/wiki/using_solr_shards?s[]=sharding )  Normaler Abschnitt lautet so: //   This section requires no changes for mostinstallations [Index] engine         = Solr url            = http://127.0.0.1:8080/solr default_core    = biblio   Statt dessen: drei Abschnitte:  Vorsicht: Kein Spatium vor  [...  [Index] in config.ini engine         = Solr url            = http://findex.gbv.de/index local          = /home/vufind/solr default_core    = XYZ [Das ist der eigene Berechtigungscode beim GBV]  und 2 Abschnitte in searches.ini : [IndexShards] Lokal = vufind.dhi.waw.pl:8080/solr/biblio GBV =shard1,shard2,shard3,shard4,shard5,shard6,shard7,shard8,shard9,shard10  [ShardPreferences] showCheckboxes = true defaultChecked[] = "Lokal" defaultChecked[] = "GBV"  Die zwei Checkboxes werden unter dem Eingabe-Suchschlitz zur Auswahlgezeigt  Achtung: In einem Fremd-Index sind u.U. MARC-Felder, die man im eigenenIndex nicht hat. Für GBV siehe:  siehe https://github.com/gbv/findex-config/blob/master/SolrCloud/solrmarc_config/VZG_index.properties Darin ein Abschnitt, der mit  # GBV  beginnt   Dannbraucht man einen Abschnitt [StripFields]   Kinstler:Zu der Fehlermeldung   Warning:strlen() expects parameter 1 to be string, array given in  C:\vufind\module\VuFind\src\VuFind\View\Helper\Root\AddEllipsis.php online 61  ... gut möglich, dass es an Anpassungen inSolrDefault.php liegt. Denn das ist die Klasse, die die Daten, die ausfindex kommen verarbeitet.  Die Fehlermeldung tritt prinzipiell dann auf, wenn eine Funktion inVuFind eine Zeichenkette erwartet, aber mehrere Zeichenketten (alsarray) übergeben bekommt. Das Modul VZG überschreibtdeswegen ein paar wenige Funktionen genau aus dieser Klasse SolrDefaultmit Anpassungen, die in der Klasse SolrVZGRecord implementiert sind(und sowohl mit Zeichenkette als auch mit arrays als Eingabe umgehenkönnen): die Funktionen getShortTitle(), getTitle() undgetSubtitle(). Wenn Sie nun wiederum ein eigenen getSubtitle() implementieren, solltenSie darauf achten, dass das ebenfalls mit arrays umgehen kann. Wenn Sieallerdings getSubtitle() in SolrDefault direkt ändern und dasModul VZG korrekt geladen und verwendet wird, sollte ein getSubtitle()in SolrDefault immer von der Implementierung in SolrVZGRecordüberschrieben werden, Ihre Anpassungen also gar nichtausgeführt werden.  Ich würde Ihnen deswegen empfehlen, bei Ihren eigenenAnpassungen enbenso vorzugehen: Implementieren Sie sie in einem eigenenModul, in einer eigenen Klasse, in der Sie (nur) die notwendigenÄnderungen überschreiben oder ergänzen undstellen Sie sicher. Durch Vererbung können diese Anpassungendann den Code in VuFind ersetzen. Das ist der Mechanismus, der inVuFind 2 vorgesehen ist, um eigene Anpassungen getrennt vom "Stammcode"von VuFind zu halten. Das ganze basiert auf dem Modul-Konzept des ZendFramework 2: http://framework.zend.com/manual/current/en/modules/zend.module-manager.intro.html   Anhang: SolrVZGRecord.php  korrigiert von D. Katz 8.1.15  class SolrVZGRecord extends VuFindSolrMarc { /** * Get the short (pre-subtitle)title of the record. * * @return string */ public function getShortTitle() { return $this-&gt;getBestField('title_short'); } /** * Get the full title of therecord. * * @return string */ public function getTitle() { return $this-&gt;getBestField('title'); } /** * Get the subtitle of therecord. * * @return string */ public function getSubtitle() { return $this-&gt;getBestField('title_sub'); }  /** * Get the best available valuefrom a field that may or may not be an array. Liefert '', wenn es das Feld nicht gibt, weder als normales oder als array sonst wird der einzige oder erste Feldinhalt geliefert * * @param string $field Name offield to check. * * @return string */ protected function getBestField($field) { if (!isset($this-&gt;fields[$field]) ||empty($this-&gt;fields[$field])) { return ''; } return is_array($this-&gt;fields[$field]) ? $this-&gt;fields[$field][0] : $this-&gt;fields[$field]; } }           B.Eversberg :2015-01-08  
</fragment>
</item>
<item>
<fragment>
   allegro Fortbildung Potsdam 2014    www.allegro-c.de/fb/golm2014.htm   allegro -Fortbildung  (Materialfür eine Veranstaltung inPotsdam-Golm, 8.9.2014)   Wer gernealles ausprobieren möchte, aber keine allegro-Installation aufseinem PC hat, kann sich kostenlos und ohne Passwort die Demo-Version besorgen!           Vorbemerkungen     A. allegro als technisches System  H. Export, Zweiter Teil : Gesamtexport    B. Export, Erster Teil: Methoden, Parameter vs. FLEX  I. Ausleihe, Erwerbung, Zeitschriftenverwaltung    C. Datensicherung und Update-Verfahren  U. Zum Thema Unicode    D. Suchmöglichkeiten  W. Zum Thema Web-Kataloge    E. Katalogisierung  X. Zum Thema RDA    F. Fremddatenübernahme einfach und schnell  Y. Für Fortgeschrittene    G. Import  Z. Zukunftssicherheit              Vorbemerkungen  Die vorab gesammelten Fragen sind hier zu Themenzusammengefaßt und in eine für dasVerständnis sinnvolle Reihenfolge gebracht. Zunächst aber Hilfe zur Selbsthilfe! Wenn irgendwelche Fragen in der Praxis akut auftreten, wie geht man ambesten vor?  Alles was rot ist in diesem Text können Sie ins Eingabefeld Ihres allegro -Programms(a99) eingeben oder im Menü anklicken (oder die genannte Tastedrücken, z.B. F1 ).Unbedingt ausprobieren!  Es gibt im Prinzip dreiInformationsquellen , und bei den meisten Themen stehendreiHinweise, die sich auf diese Quellen beziehen.    Ganzdirekt und sofort ausführbar im Programm a99 : Hilfe A-Z ( Alt+4 ),oder  hdoku eingeben (gleichwertig: Oben auf das ? klicken. Das " Füllhorn "bringt die wichtigste Auswahl davon.)    Theoretische Darstellung imSystemhandbuch: Kapitel 0 und in jedem Kapitel dereinleitende Abschnitt 0 und das alphab. Register. Viele neuere Themenstehen nicht im Handbuch! Unbedingt zu lesen ist dasKap.0.0, wo man die Begriffe kennenlernt.  Kap.10 und 11 sind die wichtigsten (schwierig, aber normalerweise brauchtman sie nicht): die Sprachen für Export und Import.  Das aktuelle Handbuch gibt'sals Ganzes nur online als PDF: www.allegro-c.de/doku/handb34.pdf  Direkt in a99 hat man aberauch Zugriff auf Handbuchtexte: h handbuch eingeben!    Online : Material aufder allegro -Homepage :Man findet alle Themen unter allegro-C von A-Z  Darunter auchFortbildungsmaterial und Dokumentationen zu diversen Themen. Und jederzeit kann man dieaktuelle Version downloaden.  Für den Einstieg sehrhilfreich: DieIllustrierte Anleitung   Insgesamt eine große Füllevon Material - nicht immer leicht, etwas Relevantes zu finden! Ganzallgemein ist es aber gut, diese drei Zugänge zu kennen.   Tip :Viel lernen kann man gefahrlos durch direktes Ausprobieren mitder Demo-Datenbank ,die bei der Standardinstallation immer dabei ist. (Icon entsteht beimInstallieren.) Im Register 1 unter zz findet man darin Beispielefür alle verschiedenen Datenarten.     Zuden konkreten Themen    A. allegro alstechnisches System "Einblicke, um zu verstehen, was meine ALD-, INI-  usw.Dateien bedeuten."  Also: Welche Dateien sind wichtig, und was ist da drin?   a) Zuerst muß man wissen: Wasgenau sind Dateien?Unddann speziell: allegro-Dateien   ImProgramm:  hdateien : Populäre, allgemeineDarstellung zu demThema.  hbackg : Zu den Hintergründen speziell der allegro -Datenstruktur    ImHandbuch:  Dateien: Kap. 0.1 und 0.2, kommentierte Liste der Programme : 0.4     Online: Dateien - was ist das eigentlich? www.allegro-c.de/dateien.htm Hintergründe: www.allegro-c.de/formate/backg.htm Funktionsschema: www.allegro-c.de/doku/fkts/fktschema.htm ,interakt. graph. Darstellung der Zusammenhänge      b) Undnun ganz konkret: WelcheDateien braucht allegro und was enthalten sie?   In der Quick-Liste ( Alt+4 ): " Datenbank: Bestandteile ": das ist eine allgemeine Beschreibung.  hfiles : Interaktiv! Welche Dateien gehören zuIhrer Datenbank? ( Dasselbe auchim Internet, siehe 3.)    Kap. 0.8  (dasselbe) und Kap. 0.3 :Dateitypen    allegro -Dateien: www.allegro-c.de/doku/ff/ (genaue, kommentierte Übersicht der Dateitypen)     B. Export, ErsterTeil - "Was genau ist Export ,welcheMöglichkeiten gibt es?" (Zweiter Teil siehe H. ) Das Exportieren ist die wichtigste Kernfunktion! Die eingegebenen Datenin derinternen Form (.ALD-Dateien) sind immer die Grundlage, aus der allesandere gemacht werden muß. Also alles, was man wirklich zusehenbekommt im Programm und im alcarta-OPAC, auch im Web-OPAC:Titelanzeige, Ergebnisübersicht, Register(Indexdatei),Listen und Tabellen aller Art - das sind alles exportierte Daten! Statt"exportieren" kann man auch "umwandeln" sagen. Daraus folgt:für jede Art Export braucht man eine Vorschrift, die demProgramm sagt,wie es aus den internen Daten das machen soll, was gebrauchtwird. Für alle diese Vorschriften gibt es eine einheitlicheSprache (also nicht etwa für den Index eine andere alsfürdie Titelanzeige!), und das ist die Exportsprache .Sie wurdeschon sehr früh geschaffen, ab 1985, und zwar war die ersteAufgabe das Drucken von Katalogzetteln. Ab 1999 entstand noch ein ganz anderes Konzept: die SkriptspracheFLEX . Mit ihr kann man Vorgänge programmieren,und sie kann heute in vielen (aber nichtallen) Fällen auch das Exportieren übernehmen und istvielleichter zu lernen. Sie ist die Grundlage der Web-Kataloge. Was man daan der Oberfläche im Browser sieht, das wird alles mit FLEXgemacht, aber FLEX kann auch Parameterdateien zu Hilfe nehmen, um Datenin eine besondere Form zu bringen, d.h. FLEX kann nebenbei dieKernfunktion"Export" nutzen, wenn seine eigenen Fähigkeiten nicht reichen. Aber FLEX kann noch etwas ganz Neues, was mit der Exportsprache nichtgeht: FLEX kann Daten aus dem Internet zu Hilfe holen! Das neue Konzept"Linked Open Data (LOD)" will darauf hinaus, daß z.B.Normdaten nicht mehrlokal vorgehalten werden müssen, sondern bei Bedarfübereinen geeigneten (internen) Link aus einer Quelle im Internetherbeigeholt und dann in eine Datenanzeige einfach mit einbezogenwerden können. Nicht allein Normdaten kommen dafür inBetracht, auch z.B. Wikipedia-Daten, aber im Prinzip alles, was eineWeb-Adresse hat (einen URI = Uniform Record Identifier).  Fazit: Export gehört zum Fundament und ist ein riesiges Thema,es war das größte von allen - bis FLEX kam! EineFLEX-Datei (Typ .flx )ist so etwas wie ein externes Unterprogramm. Wenn es aktiviert wird,scheint es aber so zu sein, als sei es ein integraler Teil von a99. Beispiel: DieKalenderfunktion. Sie steckt in der FLEX-Datei kalender.flx .Man kann sie direkt aufrufen mit Xkalender (großes X). Sie kann auch eingebautsein in Hilfetexte: z.B. hdoku .   hac10 : Das Handbuchkapitel 10, anders aufbereitet  hexprt : Die Komfortfunktionen. Da stecken zwar viele Exportparameter drin,aberman sieht sie nicht, man braucht die Sprache nicht zu kennen!Vielleicht das Wichtigste: "Tabellen erstellen" (kurz: htable ) und "Zählungen" (kurz: hct )  hflex : Einführung in FLEX    Kapitel 10 : Die Exportsprache; mit 60 Seiten dasdickste von allen. Und in Kap. 6wird beschrieben, wie man Exportparameter einsetzt, um z.B. Listen zuproduzieren. Insgesamt aber ein Thema eher für Systemverwalter. Kap. 2.3 bietet einen Überblick zu FLEX - Export ist damitmeistens leichter!    Ganzeinfache Einführung in dieExportsprache: www.allegro-c.de/expar.htm  FLEX-Lehrbuch für a99: www.allegro-c.de/flex/handbuch.htm  FLEX-Einstieg für das Programm acon : www.allegro-c.de/doku/aconflex.htm      C. Datensicherung undUpdate-Verfahren  Zwei Konzepte sind wichtig:   Sicherungskopie : Regelmäßigdie ganze Datenbankkopieren - dafür gibt es ein einfaches Verfahren. Im Prinzip bräuchte man nur die .ALD-Dateien zu sichern! Alleanderenkann man rekonstruieren lassen, wenn sie verlorengehen. Das gehtüber das Menü "Reorganisieren"    Änderungsprotokoll : Während der Arbeit werden alleÄnderungen protokolliert -d.h. eine Art Logbuch wird geschrieben; das passiert automatisch! Wo ist dieses Protokoll? In der LOG-Datei! Sieheißt im Normalfall cat.log      hbackp : Sicherungskopie - Was ist das, wie geht das? Mit 1Klick starten!  horg : Alle Funktionen für das Reorganisieren, wenn z.B. mal dieIndexdatei (.ADX) nicht mehr funktioniert oder die Kurztiteldatei(.STL) verlorengegangen ist.  Kap. 0.7  Datensicherung: www.allegro-c.de/doku/handb34.pdf#page=35   Kann man sich dieLOG-Datei denn auch anschauen? Ja, ina99 mit Alt+4 : LOG-Dateibesichtigen    D. Suchmöglichkeiten  Es gibt mit a99 vier verschiedene Methoden:(Für Web-Kataloge: siehe W.)   Suche über dieRegister: Alt+i : Blättern und auswählen; F1 für Hilfe  Fernglas-Expertensuche : Die kassische Methode; F1 für Hilfe  SchnelleSuche : Einfach irgendwelche passenden Wörtereingeben  Volltextsuche (im Menü " Finden "); Hilfeerscheint dann im Anzeigefeld  Für die "Schnelle Suche" braucht maneinALL-Register (erweitertes Stichwortregister), dann einfachpassende Suchwörterin dasFeld " Schnelle Suche "am unteren Rand eingeben. Die werden dann imALL-Register gesucht und mit UND kombiniert. Man kann aber auch imIndexfenster direkt in dasALL-Register reinschauen! Was aber da nichtdrinsteht, z.B. Wörter aus Fußnoten oderAusgabebezeichnungen, das kann man nur mit der Volltextsuche finden.   hcommd : Ausführliche Hilfe zum Suchenmit "Schnelle Suche"  h ftr  : Ausführliche Hilfe zur Volltextsuche(s.a. 3.)  Zur Volltextsuche: Kap. 4  Volltextsuche mit "regulärenAusdrücken" : www.allegro-c.de/bluechyp/regex.htm      E. Katalogisierung Die wichtigste Tätigkeit! Exportieren und indexieren geht janur, wenn ersteinmalDaten da sind, und die entstehen beim Katalogisieren: gespeichertwerden sie in den .ALD -Dateien. Heute wird fast überall das Windows-Programm a99 benutzt. Wenige Anwender kennen und nutzen noch denVorläufer PRESTO, der immer noch kompatibel ist. In Zukunftwirdimmer mehr mit a35 gearbeitet werden, auch allegro-B genannt. Dafür braucht man am Arbeitsplatz nur einen Browser,kein eigenes Programm wie a99 oder PRESTO.    DirekteEingabe undBearbeitung - dabei mußman die Kategorienummern kennen.  Vorgang: Links das Feld auswählen, Enter, im Schreibfeld bearbeiten,Enter  Formulare für unterschiedlicheDatensatztypen:  F9 zum Eingeben neuer Daten,  Alt+# zum Aufrufen der Formulare für den aktellen Satz,den man bearbeiten will.  Fremddaten = Neue Daten von woanders "abzapfen". Siehe F .  Zum Thema Datenerfassung kann man einigeFortbildungslektionen empfehlen: www.allegro-c.de/fb/   Sonderthema: Wie baut man ein neues Datenfeld ein, welches das Programmnoch nicht kennt? Geben Sie ein  hneufeld , dann kommt eine Anleitung!    F.Fremddatenübernahme : Die einfachsten und schnellsten Verfahren Gesamtübersicht:  hfremd Ökonomisch ist heute fast nur noch die direkteÜbernahme perInternet aus der DNB, aus dem GBV oder auch aus anderen Quellen. Daspassiert ohne Umwege über Browser o.a. - nur für dasVerfahren"Zack"braucht man den Browser. Fremddaten liegen immer in einem anderen Format vor, heute meistensMARC. Jede Quelle hat aber ihre Besonderheiten - es gibt kein 100%einheitliches MARC. Die direkte Übernahme aus DNB und GBVarbeitetaber ganz anders - doch braucht man es gar nicht zu wissen! Hier spieltFLEX seine Fähigkeiten aus, Daten sofort aus dem Netzherbeizuholen: Bei derdirekten Übernahme erhält man die Fremddaten sofortimeigenen Format, als hätte man sie gerade selber eingegeben.Ganzperfekt allerdings nicht, oft muß man ein wenig nacharbeiten-daswar aber auch sonst schon immer so. Leiderändert z.B. DNB öfter mal etwas, und so kam es zuplötzlichenAusfällen, z.B. erschienen auf einmal die Titel nicht mehr!Wenn das inBraunschweig bekannt wird, bemüht man sich um schnelle Abhilfeundstellt die verbesserten FLEX-Skripte bereit, z.B. den dnb.flx :Die aktuelle Fassungbesorgt man sich, indem man eingibt:  Xgetfile dnb.flx , und sofort klappt's wieder (denn FLEXholt dann die aktuelle Fassung).   F9 [Neusatz], dann sieht man u.a. diese Zeilen:  Datensatz direkt aus DNB abrufen (per ISBN oder Wortsuche)  Datensatz direkt aus GBV abrufen (per ISBN oder Wortsuche)  ODER  Alt+4 ,dann " fremd "eintippen und man sieht diese Zeilen:  Fremddatendirekt aus der DNB beziehen   [ dnb.flx ]  Fremddatendirekt aus dem GBV beziehen   [ srugbv.flx ]  Fremddatendurch Abruf per ISBN aus Internet übernehmen [ zc.flx (mitZ39.50)]  Im Handbuch steht dazu nichts - diese Verfahren sindnoch zu neu!  Allg. Beschreibung des Verfahrens, also wie es internfunktioniert: www.allegro-c.de/bluechyp/import.htm    Nebenbei: Es gibt auch noch die Methode der Schnellkopplung ,mit der man Daten aus einer allegro -Fremddatenbank schnell übernehmen kann. Diese Datenbankmußallerdings mit auf dem eigenen Server (als Kopie) installiert sein.    G. Import =Datenkonvertierung + Einspeisen der konvertierten Daten. Allgemeines zudiesem Thema  Esgibt ein Programm, das import.exe heißt. Das ist schon alt. Es tut nicht das, was mandenkt!Es speist keine Daten direkt in die Datenbank ein,  es wandeltnurfremde Daten um in das eigene Format, dabei entsteht eine "Grunddatei",Typ .alg .Damit das klappen kann, braucht import.exe eine genaue Vorschrift, diezu den Daten paßt, um die es geht. Solche Vorschriften werdenin einereigenen Sprache verfaßt: die heißt Importsprache . Das Einspeisen dieser Datei muß dann ein anderes Programmmachen: upd.exe . Früher war import.exe die Grundlagefür jede Fremddatenübernahme, z.B. auch noch beim ZACK-Verfahren (Z39.50-Gateway). Heutegeht es immer öfter auch anders: Hinter dendirekten Methoden steckt nicht mehr import.exe ,sondern FLEX!Damit werden die unmittelbar über's Netz von DNB, GBV oderanderswo abgezapftenDatensätze ohne Zwischenschritt umgewandelt und sofort in dereigenenForm in a99präsentiert. Nur wenn man damit nicht zufrieden ist undEinzelheitengerne anders hätte, dann müßte man sich dasFLEX-Skript vornehmen: dnb.flx , srugbv.flx ,oder zc.flx .Ganz leicht ist das auch nicht, aberes ist ein großer Vorteil, weil dadurch das Importieren keineBlack Boxist, sondern ein offenes Verfahren.   hfremd : Übersichtder verfügbaren Methoden  hac5 : Beschreibung der Arbeitsweise desProgramms import.exe  hac11 : Dokumentation der "Importsprache"    Kap. 5 und Kap. 11: dasselbe, nur gedruckt.   www.allegro-c.de/bluechyp/import.htm : Anleitung zum Thema "Import mit FLEX", ohne Importsprache     H. Export, Zweiter Teil : "Wie kann ich meine Datenbank in den Verbund einspielen?" EinKinderspiel ist das in keinem Fall! Aber bei keinem System! DennVerbünde und überhaupt andere Systeme jeder Art habenihre Eigenheiten,die mit Sicherheit irgendwo abweichen von dem, was man ineinem eigenen System gemacht hat. Man muß also schauen,ob man diewirklich wichtigen Besonderheiten, auf die man Wert legt, gut in denVerbund rüberbringt, und der Verbund muß schauen, obaus den Lokaldatenalles das zu machen ist, was dem Verbund wichtig ist. Ohne eine genaueVoruntersuchung kann das nicht abgehen.  allegro stellt aber ein paar Exportfunktionen bereit, mit denen mansofort aus dem Stand die Daten in bestimmten Standardformen ausgebenkann, und zwar die gesamte Datenbank auf einmal! Damit könntemanbeginnen und dem Fremdsystem diese Daten vorlegen, dann überVerfeinerungen reden! Geben Sie ein: hexprt und dann wählen:  "GanzeDatenbank exportieren / ... mehrere Möglichkeiten" Es erscheint eine Auswahlliste mitfertig vorbereiteten Exportformen:   ExternesFormat(DOS-Codes)  ExternesFormat (Windows-Codes)  InternesFormat  MAB2: Format Der DB (DOS)  MAB2                (Windows)  MARC: Format der LC und OCLC  MARC                (Windows)  MARCmit Untersaetzen (Textformat)  MARC                 (XML / UTF-8)  Mehrüber MARC-Export  Pica3: Format des GBV  Exportals XML-Datei     I. Ausleihe,Erwerbung, Zeitschriftenverwaltung In a99 sind keine Prozeduren fürGeschäftsgängedirekt eingebaut! Die werden vielmehr alle mit FLEX-Skriptenrealisiert. DerVorteil ist, daß man im Prinzip nichts einfach hinnehmenmuß, sondern alle Einzelheiten modifizieren und erweiternkann -wenn man sich mit FLEX auskennt. Im Standardpaket sind alle Skripteenthalten, man braucht nichts zusätzlich anzuschaffen oder zuinstallieren.  Startenkann man so: (und nach dem Start jeweils Initialisierung klicken, wenn man damit arbeiten will!)   Ausleihe mit aLF : half . Hinweise für den Anfang, Konzept undDatenstruktur: half-e  Die zugehörigen FLEXe haben Namen derForm a-*.flx ,z.B. a-chkout.flx für den Ausleihvorgang Vorbereitungen: Barcodes fürNutzerausweise undMedieneinheiten, Nutzerdatensätze, Exemplarsätze,Kalenderdaten, Medientyp-Stammsätze,Medientypsätze, Leserklassensätze   Erwerbung mit ORDER : horder . Erklärungen zumFunktionsmenü: horderh Die zugehörigen FLEXe haben Namen derForm o-*.flx ,z.B. o-bestel.flx für den Bestellvorgang Vorbereitungen: Systemsätze fürLieferanten, Auftraggeber, Kontingente, Währungskurse   Zeitschriftenverwaltungmit ZAboM : hzabom . Einführung und Fortbildung: www.allegro-c.de/doku/order/zabfo.htm  Die zugehörigen FLEXe haben Namen derForm z-*.flx ,z.B. z-heft.flx für den Heftzugang  Für die Ausleihe gibt es ferner eine ganz einfache Variantemit Namen ALFA ,die ohne Exemplarsätze auskommt und ohneStammdatenfür die Nutzer, auch ohne Barcodes: Start mit halfa und dann auf Ausleihfunktion aktivieren klicken. Damit ein Buch ausleihbar ist, muß derDatensatzein Feld #90 haben (Signatur) oder #91 (Zugangsnummer). An dieses Feldwerden angehängt: ▼u Nutzername ▼D Ausleihdatum . Es ist auch möglich, mit ALFA zu beginnen und späterauf aLFumzusteigen. Wenn man weder #90 noch #91 hat, muß dieDatei d-wrtf.apr geändert werden. Darin sind für diesen ZweckKommentare mit dem Wort ALFA.   Tip :In der Demo-Datenbank sind Beispiele für alle Satztypenenthalten: im Reg. 1 unter zz zu finden.    U. Zum Thema Unicode Traditionell gab es die Gleichung 1Zeichen = 1 Byte . Und ein Byte hat 8 Bit, damit kann man256 Werte codieren - die Zahlen0 bis 255. Welche Zeichen man diesen Zahlen zuordnet, wäre theoretischegal, aber es gibt die Norm ASCII, dabei ist 48 derBytewert für das Zeichen 0, 49 für die 1, usw., 65fürdas A, 97 für das a, usw. Weil das viel zu wenig ist für die in der Welt vorkommendenZeichen, wurde Unicode geschaffen. Damit kann man zigtausende Zeichen codieren, wobei aber dieersten 127 dieselben sind wie in ASCII. Die anderen werden mit 2, 3oder 4 Byte codiert. Mehr dazu, und auch, wie man auf Unicode umstellt:   hunicode : Wie kann man in allegro mit Unicode umgehen?  Im Handbuch steht dazu nichts    Einführung in dasThema und Hinweise für den Einsatz mit allegro : www.allegro-c.de/unicode   Muß man umstellen? Es empfiehlt sich nur dann, wenn man vieleSonderzeichen hat, auf die man bisher verzichten mußte. Derempfindlichste Nachteil wird sein, daß man nicht mehr so gutmita99 arbeiten kann. Genau gesagt: Man kann weiterhin mit a99 fast allesmachen, nur werden viele Sonderzeichen nicht korrekt angezeigt und sinddeshalb nur umständlich einzugeben und zu bearbeiten! Zwargeht es nicht ganz direkt, einen Datensatz mit Unicode zubearbeiten oder einzugeben, aber zwei indirekte Methoden existieren: X utf8edit und Xhtmform . Mit a35 geht es dann besser, nur hat a35 (noch) nicht ganz so vieleKomfort-Funktionen wie a99. Aber nichtlateinische Schriften wie z.B. Kyrillisch,Chinesisch oder Arabisch , die gehen wirklich ambesten mit Unicode, mit a35 im Browser. Zur Beruhigung: Wenn es irgendwann nötig oder sinnvoll werdensollte, auf Unicode umzustellen, kann man das jederzeit tun! Wenn's nur darum geht,einen Webkatalog einzuführen (z.B. a35), dann braucht man'snicht zutun, das klappt auch so. Fremddaten von DNB und GBV u.a. kommen heute schon in Unicode daher!Die werden dann automatisch umgewandelt, das ist in dieImportskripte schon eingebaut, d.h. die Fremddaten sind keinzwingender Grund,umzustellen! PHPAC und a35 zeigen im Browser die eigenen Zeichen mitUnicode an, auchwenn man selber in der Datenbank nicht umgestellt hat. Nachaußensieht man also mit seinem Webkatalog nicht alt aus - er hat Unicode,wieheute fast alles im Web!  WelchenZeichensatz hat man in der eigenen Datenbank? BeimStandardsystem ist es immer noch DOS-ASCII, aber eine Tabelle (Datei o.apt )wandelt zwischen diesem und dem Windows-Zeichensatz hin undzurück, ohne daß man es merkt. Wichtig ist dabei,daß man die allegro -Schriften installiert hat (mitgelieferte TTF-Dateien), und das muß aufjedem PC gemacht werden, der die allegro -Datenbankbenutzen soll. Dies entfällt, wenn man aufUnicode umstellt.    W. Zum ThemaWeb-Kataloge  Dieheutemeistgebräuchlichenberuhen auf PHP als Skriptsprache im Webserver. Die sichtbarenOberflächen im Browser sind aber sehr verschieden undteilweiseauf anderen Grundlagen realisiert, z.B. mit Perl statt PHP: Die Referenzliste führt zu vielen Beispielen. Hier sind die zwei meistverbreiteten Oberflächen, daruntersteckt jeweils die Demo-Datenbank:   PHPAC : Recht konventionelles Design. Große Zahl von Installationen Anleitung zur Installation: hphpac   a35 : Neues Design in drei Varianten: PC, Tablet, Smartphone. Noch wenigeInstallationen Anleitung dazu: www.allegro-c.de/doku/a35  Dazu werden neben den PHP-, FLEX- und anderen Skripten nur zweiProgramme gebraucht, die es auch für Linux gibt:  avanti : Ein Serverprogramm, das ständig im Hintergrundläuft und mit dem Webserver zusammenarbeitet,  acon :Ein Konsolprogramm; es erhält FLEX-Jobs von avanti,führt sie aus und liefert die Ergebnisse an avanti.  Möglich ist aber auch, aus den eigenen allegro-Daten einenVuFind-Katalog zu machen. Oder, wie man heute sagt, ein "DiscoverySystem". Was dafür zu tun ist, auf der Basis der aktuellenVuFind-Version2.3, ist dokumentiert und ein Beispielkatalog kann ausprobiert werden: vufind.allegro-c.de:81/vufind/ . Auf der Seite von allegro ist nicht viel zu tun, eigentlich nur das Exportieren der Daten imMARC-Format. Die Parameter dafür gehören schon zumStandardpaket (siehe H. ).    X. Zum Thema RDA  Mitder Einführung von RDA verändert sich in allegro ersteinmal gar nichts. Denn allegro ist ein Datenbanksystem ,kein Spezialprogramm mit fest eingebauten Katalogregeln! Auch die RAK sind nicht eingebaut. Man muß für eine konkrete allegro -Anwendungvier Bereiche unterscheiden, und nur die ersten zweihaben viel mit den Regeln zu tun:   DieDatenstruktur : Welche Typen von Datensätzenbraucht man, was für Elemente umfassen diese? Das ist Sache der "Konfiguration" und die Angaben dazu stehen in derCFG-Datei (Normalfall:  Datei $a.cfg ) Wenndie Regeln ein bestimmtes Element vorschreiben und man will diesesanwenden, muß es dafür ein Datenfeld oder Unterfeldgeben  DieErfassungsregeln : Was gibt man ein in die Datenfelder, und in genau welcher Form(Ansetzung)? Dafür bietet a99 Formulare an, die manmodifizieren kann. Die Standard-Formulardatei heißt cat.frm .  DieIndexierung : Wie soll gesucht werden können? Praktisch bedeutet das:Welche Feldersoll das System indexieren und in welcher Weise? Die Vorschriftdafürsteht in der Index-Parameterdatei ,im Normalfall cat.api .(Zwar sagen die Regeln, was für Fragen der Katalog beantwortenkönnen soll, doch auch bisher schon gingen dieMöglichkeitender Systeme, d.h. deren Indexierung, darüber weit hinaus!)  DieDatenanzeige :  Wie sollen die Datensätze und ihre Felderangezeigt werden? Nichtmit den Kategorienummern, also in der internen Form, das ist klar! DasProgramm soll die Daten klar und übersichtlich zeigen, undzwar in Formvon Ergebnislisten (Kurztitel) und als Datensatz inausführlicherDarstellung. Anm: RAK hatten dafür die ISBD-Strukturvorgeschrieben,das tut RDA nicht mehr. Man ist also frei in der Gestaltung der eigenenOberfläche. Aber auch bisher schon hat man das nicht so enggesehen, esgibt viele OPACs, die ISBD gar nicht kennen. Für a99 stehendieVorschriften füt die Titelanzeige in einerExport-Parameterdatei namens d-wrtf.apr ,wahlweise auch d-krtf.apr .   Das Importieren von RDA-Daten wird auch mitder gegenwärtigen allegro -Versionmöglich sein! Die Daten werden auf absehbare Zeit in MARC21geliefert werden, auch von DNB und GBV, und es sind dannhöchstensModifikationen in den Importparametern nötig, nicht in derSoftware und nicht in den eigenen Daten. Obwohl momentan noch gar nichtbekannt ist, was sich konkret alles ändern wird.  Das allegro -Konzeptmit den Konfigurations- und Parameterdateien stelltsicher, daß das System vor Ort modifiziert werden kann! DenndieProgramme selbst müssen nicht verändert werden, nurdie Dateien mit den"Vorschriften". Und wie kommt man heran an diese Dateien:   hadm eingeben! Eskommt ein Menü, auf dem manz.B."Konfiguration" anklickt, um die Konfigurationsdatei zu sehen und zubearbeiten. Hier findet man alle wichtigen, änderbarenHilfsdateien, darunter auch die Indexparameter und die Formulardatei.  RDA ist ein Regelwerk mit vielen Optionen und Alternativen, so wie esmal Voll-RAK gewesen ist. Man muß daher für dieAnwendungkonkrete Richtlinien zusätzlich erarbeiten. Die liegeninzwischenvor: www.dnb.de/DE/Standardisierung/International/rda.html ,aber verständlich und nutzbar sind sie nur mit dem Regelwerkselbst, und das ist nur in der kostenpflichtigen Datenbank RDAtoolkit einsehbar, eine gedruckte Ausgabe ist im Moment (Sept. 2014)nicht lieferbar, nachzufragen wäre bei FacetPublishing ,bei DNB sucht man vergebens danach. Ein deutsches Vorwort und eineÜbersetzung der Einleitung entstand in Eigeninitiativeaußerhalb der offiziellen Gremien: www.allegro-c.de/regeln/rda/Vorwort_und_Einleitung.pdf     Y. FürFortgeschrittene  Fortbildungstexte - 10Minuten, die sich lohnen : www.allegro-c.de/fb/ Viele Themen! Mit jedem kann manbeginnen, alles sofort ausprobieren.  " Schnell mal eben ... "- Trick 17 - 75 : xjanas tricks.htm oder www.allegro-c.de/flex/tricks Für angehende FLEXperten.Beispiele fürnützliche FLEX-Anwendungen, auch gut zum Lernen geeignet.    Z.Zukunftssicherheit   Wird allegro weiterentwickelt? Mindestens bis Ende 2015 wird nochweiter daran gearbeitet. Schonjetzt und danach liegen alle Quellprogramme veröffentlicht vor( OpenSource : www.allegro-c.de/os/index ).Das bedeutet, daß nicht mehr nur die UB Braunschweig dieKompetenz und das Recht besitzt, die Programme zu ändern undweiterzuentwickeln.  Wichtig: DieQuellprogramme in C und C++ sind die schwierigsten Komponenten, aberauch die am längsten und gründlichsten erprobten undbewährten. Diese Komponenten wird man 2015festschreiben können. Veränderungen undWeiterentwicklungen können sich dann aufParameterdateien und vor allem auf FLEXe beschränken, aufEbenen also, mitdenensich viele allegro -Anwenderund -Betreuer auskennen. Ferner kann dieOPAC-Funktion wahlweise anVuFind delegiert werden, so daß man speziell dafürdieQuellprogramme in C und C++ definitiv nicht mehr zu verändernbraucht.   Wie lange wird esnoch laufen können? Zumindestso lange, wie Programme für Windows 7 lauffähigbleiben; nach Aussagen von Microsoft unter Windows'10 mindestens bis 2022. [XP und '7 werdennicht mehr empfohlen, technisch geht es aber damit immer noch, und auchSicherheitsupdates kann man noch beziehen.] Unter Linux bleibt es so lange brauchbar, wie es Compiler fürC++ gibt - daist kein Ende abzusehen, denn Linux selbst ist in C geschrieben. Daher wäre es nicht übertrieben, zu sagen,daß man mit allegro so lange wird arbeiten können, wie es Linux gibt. Die neue Browser-Oberfläche a35 beruht auf HTML5, PHP, CSS3undJavaScript, d.h. ausschließlich auf den gängigen,jedemWeb-Programmierer vertrauten Standards, und a35 kann in allen wichtigenBelangen die Windows-Oberfläche a99 ablösen. Dannspieltfür die Oberfläche das Betriebssystem keine Rollemehr. Eine Umstellung intern auf Unicode ist (siehe U.) zwarmöglich,aber nicht zwingend, um arbeitsfähig zu bleiben - selbst inUmfeldern, die sich ansonsten komplett auf Unicode gründen.   Wie lange wird esaber noch brauchbar bleiben? EinEckpfeiler der bibliothekarischen Datenverarbeitung wird nochfürlängere Zeit das MARC-Format bleiben. Die NeuentwicklungBIBFRAME,angestoßen von der Library of Congress, ist von derEinsatzreifenoch weit entfernt und niemand wagt derzeit eine Prognose, wann estatsächlich MARC ablösen könnte. Selbst wennes in einigen Jahren dazukommt, muß das noch nicht bedeuten, daßLokalsysteme auchintern mit grundsätzlich anderen, heute noch nicht vorhandenenStrukturen arbeiten müßten, die man mit Systemen wie allegro nicht mehr handhaben könnte. Auf jeden Fall wäre allegro dann nichtdas einzige System, das obsolet würde, sondern esbefände sich in zahlreicher Gesellschaft. Neue Systeme auf derneuen Basis werden natürlich kommen, aber erst nachdem sich dieneuen Normen hinreichend stabilisiert haben, also in etwa 5 - 10Jahren. Vorher auf etwas anderes umzusteigen macht daher wenig Sinn:Man hätte nur eine weitere Zwischenlösung vor einemspäter unvermeidlichen Umstieg.   Gibt eskostengünstige Alternativen, auf die man umsteigenkönnte? Indieser Frage sind die allegro-Entwickler befangen undaußerdemwenig kompetent, weil sie die Zeit nicht haben, andere Systeme zubegutachten. Leider gibt es keine Marktübersicht oderwenigstensverläßliche Erfahrungsberichte über andereSysteme ausdem OpenSource-Bereich, auch nicht über kommerzielle Systeme."OpenSource", so muß gesagt werden, ist nicht gleichbedeutendmitkostenlos, sondern i.d.R. hat man damit höherenPersonalaufwand imVergleich zu kommerzieller Software. Dies müßte manin einenVergleich einbeziehen. Uns sind gegenwärtig keinevergleichendenUntersuchungen diesbezüglich bekannt.   Wo findet manschnell und günstig Hilfe? Im Mailforum! Wer nochnicht Mitglied ist, kann sich sofort anmelden: sunny5.biblio.etc.tu-bs.de/mailman/listinfo/allegro . Jederzeit kann man dort Fragen aller Art loswerden, und seit vielenJahren sind die Mitglieder hochzufrieden mit der schnellen Hilfe, aufdie man für so gut wie jedes Problem zählen kann.DiesesForum wird auch nach 2015 weiterbestehen!   Gibt esunabhängigen Support für größereVorhaben? Ja, zur Zeit sind vier freiberufliche EDV-Berater darauf spezialisiertundleisten Installationen, Anpassungen, Problemlösung, Beratung,Schulung, Web-Hosting etc.  Hinweis: Speziellfür Öffentliche Bibliotheken gibt es seit langem einevonBraunschweig unabhängige, aber kompatible Version allegro-ÖB ,weiterentwickelt und betreut von der BüchereizentraleNiedersachsen in Lüneburg .          B. Eversberg ,2014-09-09    
</fragment>
</item>
<item>
<fragment>
      body {color : #000000;background-color : #ffffff;font : 9pt Verdana;        padding : 0px;}table.head {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;border : 2px solid #0f0f0f;}table.head2 {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;}table {color : #000000;font : 10pt Verdana;vertical-align : middle;}table.fix {color : #000000;font : 10pt Courier;vertical-align : middle;}table.form {border : 1px solid #0f0f0f;color : #000000;font : 10pt Verdana;vertical-align : middle;}td {font : 8pt Verdana;vertical-align : top;}input {border : 1px solid #0f0f0f;color : #000000;background-color : #ffffff;margin : 5px;font : 10pt Verdana;font-size : 100%;padding : 2px 2px 2px 5px;vertical-align : middle;}input.button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}input.main {border : 3px solid #ff0000;margin : 5px;font : 10pt Verdana;font-size : 120%;padding : 2px 2px 2px 5px;vertical-align : middle;}input:hover {background-color : #ffeeee;}input:focus {background-color : #ffeeee;}form {border : 1px solid #ffffff;background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 0px;}form.edit {background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 5px;}.submit {border : 2px solid #0f0f0f;font-size : 100%;font-weight : bold;}a:link {color : #0000B8;text-decoration : none;}a:visited {color : #ee8888;text-decoration : none;}a:hover {color : #ee00ff;text-decoration : none;        background-color : #ffffff; }a:active {color : #ee0000;background-color : #ffff99;}#INF {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Ext {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Reg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Erg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}/* FreiRaum-Boxen, mitte, links rechts */#FRE {  position: absolute;  top:30%;  left:40%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRr {/* position: wird von QUAD4 geerbt! wichtig! */}#FRR {    position:absolute;    bottom:0;    right:0;  border: 1px solid #8888fa;  background-color:#fafad0;}#FRl {position:relative;}#FRL {    position:absolute;    bottom:0;    right:0;  border: 1px solid #8888fa;  background-color:#fafafa;}/* Dropdown Menu *//* source: http://matthewjamestaylor.com/blog/centered-dropdown-menus.html, adapted *//* Das Menue selbst ist in a35-pc-menu.php angelegt *//* Main menu settings */#a35menu {clear:both;float:left;margin:0;padding:0;width:100%;font-family:Verdana, Geneva, sans-serif; /* Menu font */font-size:1em; /* Menu text size */z-index:1000; /* Menue ueberlagert dann den Seiteninhalt */position:left;}/* Top menu items */#a35menu ul {margin:0;padding:0;list-style:none;float:left;position:relative;right:100px;}#a35menu ul li {margin:0 0 0 1px;padding:0;float:left;position:relative;left:50%;top:0px;background:#fafa80; /* gelb; wirkt aber nur bei leerer Menuzeile */}#a35menu ul li a {display:block;margin:0;padding:.6em .5em .6em;font-size:1em;line-height:1em;background:#ffffff;text-decoration:none;color:#444;}/*#a35menu ul li:active a,#a35menu ul li.active a {color:#fff;background:#000;}*/#a35menu ul li a:hover, #a35menu ul li a.hover {background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}#a35menu ul li:hover a,#a35menu ul li.hover a { /* This line is required for IE 6 and below */background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}/* Submenu items */#a35menu ul ul {display:none; /* Sub menus are hidden by default */position:absolute;top:2em;left:0;float:left;right:auto; /*resets the right:50% on the parent ul */width:10em; /* width of the drop-down menus */}#a35menu ul ul li {left:auto;  /*resets the left:50% on the parent li */margin:0; /* Reset the 1px margin from the top menu */clear:left;float:left;width:100%;}#a35menu ul ul li a,#a35menu ul li.active li a,#a35menu ul li:hover ul li a,#a35menu ul li.hover ul li a { /* This line is required for IE 6 and below */font-size:.8em;font-weight:normal; /* resets the bold set for the top level menu items */background:#ffffff;color:#444;border-bottom:1px solid #ddd; /* sub menu item horizontal lines */float:left;width:100%;}#a35menu ul ul li a:hover,#a35menu ul li.active ul li a:hover,#a35menu ul li:hover ul li a:hover,#a35menu ul li.hover ul li a:hover { /* This line is required for IE 6 and below */background:#36f; /* Sub menu items background colour */color:#fff;float:left;}/* Flip the last submenu so it stays within the page */#a35menu ul ul.last {left:auto; /* reset left:0; value *///right:0; /* Set right value instead */}#a35menu ul ul.last li {float:right;position:relative;//right:.8em;}/* Make the sub menus appear on hover */#a35menu ul li:hover ul,#a35menu ul li.hover ul { /* This line is required for IE 6 and below */display:block; /* Show the sub menus */}     RDA Beispiele                       RDA Beispiele (u.a. aus "Basiswissen RDA" (Wiesenmüller-Horny) mit Daten aus GBV, SWB und DNB)   Tablet   Mobile  ?  FKT  Login           Interne Nr.     F5  F7    &lt;  &gt;         Suchen     Wortsuche  Expertensuche  ... schließen  ... wieder öffnen  Volltextsuche  Erg.Menge Download    Bearbeiten     Formular 0  Datensatz vom GBV abrufen  Eigene Formulare    Ansicht     Mehr / Weniger (F12)  Anzeige mit Feldbezeichnungen  Info zur Datenbank  Startbild    Sitzung     Login  Login-Menu  Kalender  Aktueller Kalender    Hilfe     RDA-Funktionen  Funktionstasten-Hilfe  Hilfsfenster zu  Zur Oberfläche  Zum Suchen        . . .  &lt;  &gt;                           +  &lt;  &gt;             Alphab. Liste: ... und zwar: \ RDA-Index \ Alle Wörter \ Personen \ Titelanfang \ Titelwörter \ Schlagwörter \ Verlage, Orte, Jahre \ Serien/Zeitschr.titel \ Nummern, z.B. ISBN \ RDA-Beispielnr.: z.B. hw13-01 \ MARC-Feldnummern \ Pica-Feldnummern \ RDA-Stichwörter \                                
</fragment>
</item>
<item>
<fragment>
&gt;  Oberfläche allegro-C                                            Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Dokumentationen   Veröffentlichungen   allegro news bis 2002   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig          Oberfläche allegro-C                                             [i] zuletzt aktualisiert:         26.08.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;      a35 : Plattformunabhängige Browser-Oberfläche für allegro-Datenbanken                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                a35 - Plattformunabhängige Browser-Oberfläche für allegro-Datenbanken - Struktur, Arbeitsweise, Dateien -    Gesamte Doku als PDF ... OPAC als Demo               Inhalt   - Vorwort -  - Voraussetzungen -  - Design-Konzept -  - Content Bereich -  - Technisches Konzept -  - Parameterdateien -  - Berechtigungen -  - Grafikdateien -   Anhänge    A1 "Interne Links" in a35: Konstruktion  A2 avanti - Allgemeine Fälle von "internen Links"  A3 Spezialfälle für interne Links  A4 Sonderfall in Formularen: Datumswahl              [i] zuletzt aktualisiert:         19.12.2013 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;   allegro- a35 Datenbanken für Standard Desktop u. Tablets                                               Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                 allegro- a35 Beispiel Datenbanken  optimiert für Standard Desktop und Tablets           Katalog  bolero  Veget  LV  Vieweg  Raabe  GND  Hob  KIVK  Gipfelbuch    Aktueller allegro-Online-Katalog der Universitätsbibliothek Braunschweig        Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Beispiel eines OPACs für Klassik       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Literaturdatenbank Vegetationsökologie Mitteleuropa Prof.Dr. Dietmar Brandes       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Verzeichnis Lehrveranstaltungen Technische Universität Braunschweig 2005 - 2013       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Vieweg Brief-Archiv       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Wilhelm-Raabe-Bibliographie       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      GND - Gemeinsame Normdatei - Projekt der Deutschen Nationalbibliothek       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Bestand der Kinderbuchsammlung der UB Braunschweig, einschl. der "Sammlung Hobrecker"       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Kirchlicher Verbundkatalog       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche      Beispiel eines Gipfeltourenbuch       Professional Variante  Zur Datenerfassung, Sondierung und Datenerzeugung     User Variante  Für den normalen Nutzer / Katalogrecherche     Mobile Variante  Für unterwegs auf dem Smartphone / Katalogrecherche        Die Präsentation der Datenbanken sind mit HTML5,  JS sowie Flexrealisiert. Diese Seite und die dazugehörigen Links zu den a35 Beispieldatenbanken setzen JavaScript voraus.      [i] zuletzt aktualisiert:         10.06.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;       /* BeginOAWidget_Instance_2146022: #PrototypeFishEye */#PrototypeFishEye.fishEye{height:105px;border:0px solid #000000;padding:10px;text-align:center;background-color:#FFFFFF;margin-top:0px;margin-bottom:0px;}#PrototypeFishEye.fishEye img{width:50px;height:50px;margin-top:50px;margin-bottom:100px;}/* EndOAWidget_Instance_2146022 */    a35 Datenbanken integriert in ein Corporate Design                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                 allegro- a35 Datenbanken der UB Braunschweig                    Beispiele für a35 als Web-Kataloge mit HTML5             Demo    a35 Demo Datenbank      Katalog    Aktueller allegro -Online-Katalog der UB Braunschweig      bolero    Beispiel mit etwas anderer Oberfläche      Veget    Aufsatzdatenbank der Fachwissenschaftler          (Vegetationsökologie)      LV    Lehrveranstaltungs-Übersicht TU Braunschweig      Vieweg    Vieweg Brief-Archiv      Raabe    Wilhelm Raabe Bibliographie      GND    GND - Gemeinsame Normdatei - Projekt der Deutschen Nationalbibliothek      KIVK    KIVK - Kirchlicher Verbundkatalog      Kinderbücher    Bestand der Kinderbuchsammlung der UB Braunschweig, einschl. der "Sammlung Hobrecker"      Gipfelbuch    Beispiel eines Gipfeltourenbuch       Diese Datenbanken sind alle mit HTML5, CSS, JS sowie Flexrealisiert. Diese Seite und die dazugehörigen Links zu den a35 Beispieldatenbanken setzen JavaScript vorraus.       [i] zuletzt aktualisiert:         01.08.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;    a35 - Demo OPAC UB Braunschweig                                           Impressum         Startseite    allegro-C von A-Z   a35 Datenbanken    Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Startseite a35    Datei    Volltextsuche   Hilfe   Zur Oberfläche   Zum Suchen   Link-Beispiele   Funktionstasten-Hilfe   Dateiübersicht   Ansicht   Mehr/Weniger (F12)   Hilfsfenster zu   Log-Datei:   - Anfang   - Ende   Info zur Datenbank   Sitzung   Login   Login-Menü   Historie löschen   Bearbeiten (Admin)   Globale Ersetzungen   Eingabeformular   Eigene Formulare   UB Braunschweig                 a35 - OPAC der Klassiksammlung bolero   Ihre Suchwörter           body {color : #000000;background-color : #ffffff;font : 9pt Verdana;        padding : 0px;}table.head {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;border : 2px solid #0f0f0f;}table.head2 {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;}table {color : #000000;font : 10pt Verdana;vertical-align : middle;}table.form {border : 1px solid #0f0f0f;color : #000000;font : 10pt Verdana;vertical-align : middle;}td {font : 8pt Verdana;vertical-align : top;}input {border : 1px solid #0f0f0f;color : #000000;background-color : #ffffff;margin : 5px;font : 10pt Verdana;font-size : 100%;padding : 2px 2px 2px 5px;vertical-align : middle;}input.button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}input.main {border : 3px solid #ff0000;margin : 5px;font : 10pt Verdana;font-size : 120%;padding : 2px 2px 2px 5px;vertical-align : middle;}input:hover {background-color : #ffeeee;}input:focus {background-color : #ffeeee;}form {border : 1px solid #ffffff;background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 0px;}form.edit {background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 5px;}.submit {border : 2px solid #0f0f0f;font-size : 100%;font-weight : bold;}a:link {color : #0000ff;;text-decoration : none;}a:visited {color : #ee8888;text-decoration : none;}a:hover {color : #ee00ff;text-decoration : none;        background-color : #ffffff; }a:active {color : #ee0000;background-color : #ffff99;}#INF {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Ext {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Reg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Erg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}/* FreiRaum-Boxen, mitte, links rechts */#FRE {  position: absolute;  resize:both;  top:30%;  left:40%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRL {  position: absolute;  top:60%;  left:2%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRR {  position: absolute;  top:60%;  left:50%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #dddddd;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}/* Dropdown Menu *//* source: http://matthewjamestaylor.com/blog/centered-dropdown-menus.html, adapted *//* Das Menue selbst ist in a35start.php angelegt *//* Main menu settings */#a35menu {clear:both;float:left;margin:0;padding:0;width:100%;font-family:Verdana, Geneva, sans-serif; /* Menu font */font-size:1em; /* Menu text size */z-index:1000; /* Menue ueberlagert dann den Seiteninhalt */position:left;}/* Top menu items */#a35menu ul {margin:0;padding:0;list-style:none;float:left;position:relative;right:100px;}#a35menu ul li {margin:0 0 0 1px;padding:0;float:left;position:relative;left:50%;top:0px;background:#fafa80; /* gelb; wirkt aber nur bei leerer Menuzeile */}#a35menu ul li a {display:block;margin:0;padding:.6em .5em .6em;font-size:1em;line-height:1em;background:#ffffff;text-decoration:none;color:#444;}/*#a35menu ul li:active a,#a35menu ul li.active a {color:#fff;background:#000;}*/#a35menu ul li a:hover, #a35menu ul li a.hover {background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}#a35menu ul li:hover a,#a35menu ul li.hover a { /* This line is required for IE 6 and below */background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}/* Submenu items */#a35menu ul ul {display:none; /* Sub menus are hidden by default */position:absolute;top:2em;left:0;float:left;right:auto; /*resets the right:50% on the parent ul */width:10em; /* width of the drop-down menus */}#a35menu ul ul li {left:auto;  /*resets the left:50% on the parent li */margin:0; /* Reset the 1px margin from the top menu */clear:left;float:left;width:100%;}#a35menu ul ul li a,#a35menu ul li.active li a,#a35menu ul li:hover ul li a,#a35menu ul li.hover ul li a { /* This line is required for IE 6 and below */font-size:.8em;font-weight:normal; /* resets the bold set for the top level menu items */background:#ffffff;color:#444;border-bottom:1px solid #ddd; /* sub menu item horizontal lines */float:left;width:100%;}#a35menu ul ul li a:hover,#a35menu ul li.active ul li a:hover,#a35menu ul li:hover ul li a:hover,#a35menu ul li.hover ul li a:hover { /* This line is required for IE 6 and below */background:#36f; /* Sub menu items background colour */color:#fff;float:left;}/* Flip the last submenu so it stays within the page */#a35menu ul ul.last {left:auto; /* reset left:0; value *///right:0; /* Set right value instead */}#a35menu ul ul.last li {float:right;position:relative;//right:.8em;}/* Make the sub menus appear on hover */#a35menu ul li:hover ul,#a35menu ul li.hover ul { /* This line is required for IE 6 and below */display:block; /* Show the sub menus */}     a35 bolero DEMO                Ergebnislisten  Indexfeld  Datensatz  Menüs und Formulare  Hilfe         Liste zeigen ab Zeile:     +  &lt;  &gt;          Anzeige index: ... der Auswahl: \ Alle Wörter \ Personen \ Komponist: Werktitel \ Nur Titelwörter \ Opusnummer \ Orchester, Klangkörper \ Signatur \            Interne Nummer:    F5  F7  F12   &lt;  &gt;             &lt;  &gt;                                          [i] zuletzt aktualisiert:         30.07.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;    a35 - GND - Gemeinsame Normdatei                                           Impressum         Startseite    allegro-C von A-Z   a35 Datenbanken    Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Startseite a35    Datei    Volltextsuche   Hilfe   Zur Oberfläche   Zum Suchen   Link-Beispiele   Funktionstasten-Hilfe   Dateiübersicht   Ansicht   Mehr/Weniger (F12)   Hilfsfenster zu   Log-Datei:   - Anfang   - Ende   Info zur Datenbank   Sitzung   Login   Login-Menü   Historie löschen   Bearbeiten (Admin)   Globale Ersetzungen   Eingabeformular   Eigene Formulare   UB Braunschweig                 a35 - GND - Gemeinsame Normdatei - Projekt der Deutschen Nationalbibliothek   Ihre Suchwörter           body {color : #000000;background-color : #ffffff;font : 9pt Verdana;        padding : 0px;}table.head {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;border : 2px solid #0f0f0f;}table.head2 {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;}table {color : #000000;font : 10pt Verdana;vertical-align : middle;}table.form {border : 1px solid #0f0f0f;color : #000000;font : 10pt Verdana;vertical-align : middle;}td {font : 8pt Verdana;vertical-align : top;}input {border : 1px solid #0f0f0f;color : #000000;background-color : #ffffff;margin : 5px;font : 10pt Verdana;font-size : 100%;padding : 2px 2px 2px 5px;vertical-align : middle;}input.button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}input.main {border : 3px solid #ff0000;margin : 5px;font : 10pt Verdana;font-size : 120%;padding : 2px 2px 2px 5px;vertical-align : middle;}input:hover {background-color : #ffeeee;}input:focus {background-color : #ffeeee;}form {border : 1px solid #ffffff;background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 0px;}form.edit {background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 5px;}.submit {border : 2px solid #0f0f0f;font-size : 100%;font-weight : bold;}a:link {color : #0000ff;;text-decoration : none;}a:visited {color : #ee8888;text-decoration : none;}a:hover {color : #ee00ff;text-decoration : none;        background-color : #ffffff; }a:active {color : #ee0000;background-color : #ffff99;}#INF {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Ext {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Reg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Erg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}/* FreiRaum-Boxen, mitte, links rechts */#FRE {  position: absolute;  resize:both;  top:30%;  left:40%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRL {  position: absolute;  top:60%;  left:2%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRR {  position: absolute;  top:60%;  left:50%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #dddddd;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}/* Dropdown Menu *//* source: http://matthewjamestaylor.com/blog/centered-dropdown-menus.html, adapted *//* Das Menue selbst ist in a35start.php angelegt *//* Main menu settings */#a35menu {clear:both;float:left;margin:0;padding:0;width:100%;font-family:Verdana, Geneva, sans-serif; /* Menu font */font-size:1em; /* Menu text size */z-index:1000; /* Menue ueberlagert dann den Seiteninhalt */position:left;}/* Top menu items */#a35menu ul {margin:0;padding:0;list-style:none;float:left;position:relative;right:100px;}#a35menu ul li {margin:0 0 0 1px;padding:0;float:left;position:relative;left:50%;top:0px;background:#fafa80; /* gelb; wirkt aber nur bei leerer Menuzeile */}#a35menu ul li a {display:block;margin:0;padding:.6em .5em .6em;font-size:1em;line-height:1em;background:#ffffff;text-decoration:none;color:#444;}/*#a35menu ul li:active a,#a35menu ul li.active a {color:#fff;background:#000;}*/#a35menu ul li a:hover, #a35menu ul li a.hover {background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}#a35menu ul li:hover a,#a35menu ul li.hover a { /* This line is required for IE 6 and below */background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}/* Submenu items */#a35menu ul ul {display:none; /* Sub menus are hidden by default */position:absolute;top:2em;left:0;float:left;right:auto; /*resets the right:50% on the parent ul */width:10em; /* width of the drop-down menus */}#a35menu ul ul li {left:auto;  /*resets the left:50% on the parent li */margin:0; /* Reset the 1px margin from the top menu */clear:left;float:left;width:100%;}#a35menu ul ul li a,#a35menu ul li.active li a,#a35menu ul li:hover ul li a,#a35menu ul li.hover ul li a { /* This line is required for IE 6 and below */font-size:.8em;font-weight:normal; /* resets the bold set for the top level menu items */background:#ffffff;color:#444;border-bottom:1px solid #ddd; /* sub menu item horizontal lines */float:left;width:100%;}#a35menu ul ul li a:hover,#a35menu ul li.active ul li a:hover,#a35menu ul li:hover ul li a:hover,#a35menu ul li.hover ul li a:hover { /* This line is required for IE 6 and below */background:#36f; /* Sub menu items background colour */color:#fff;float:left;}/* Flip the last submenu so it stays within the page */#a35menu ul ul.last {left:auto; /* reset left:0; value *///right:0; /* Set right value instead */}#a35menu ul ul.last li {float:right;position:relative;//right:.8em;}/* Make the sub menus appear on hover */#a35menu ul li:hover ul,#a35menu ul li.hover ul { /* This line is required for IE 6 and below */display:block; /* Show the sub menus */}    GND DEMO                Ergebnislisten  Indexfeld  Datensatz  Menüs und Formulare  Hilfe         Liste zeigen ab Zeile:     +  &lt;  &gt;          Anzeige index: ... der Auswahl: \ Begriffe und Namen \ Alle Wörter \ Wikipedia-Begriffe \            Nr. Index:    F5  F7  F12   &lt;  &gt;             &lt;  &gt;                                          [i] zuletzt aktualisiert:         12.07.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  allegro und Relationale Datenbanken (RDBMS) - Vergleichende Gegenüberstellung                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: allegro und Relationale Datenbanken (RDBMS) - Vergleichende Gegenüberstellung   Regelmäßig werden Fragen  gestellt wie "Was für ein Standard-Datenbanksystem  steckt in allegro ?"  oder "Kann man eine allegro -Datenbank mit SQL abfragen?" Man erlebt in solchen Unterhaltungen leicht, wie der  eine sehr viel von relationalen Datenbanken versteht, von allegro aber ganz wenig, bzw. umgekehrt. Dann wird es mühsam und        Fehleinschätzungen   sind auf beiden Seiten vorprogrammiert. Um diesem Übelstand        abzuhelfen        und das gegenseitige Verstehen zu fördern, wird hier der Versuch        gemacht,        vergleichende Aussagen zu den Konzepten und Eigenschaften der beiden        Datenbankwelten        zu machen, und zwar mit möglichst wenig Fachjargon und mit Blick        mehr        auf die Praxis als auf die Theorie. Diese "Welten" sind von höchst        unterschiedlicher Größe und Bedeutung, das ist klar, doch        darum        geht es hier nicht, schon gar nicht um die immer nur für konkrete        Anwendungen, aber nicht allgemein entscheidbare Frage "Was ist besser?"  Wer aber wegen eines konkreten Projekts vor eben dieser Frage steht,  soll  hier Hilfen zur Einschätzung erhalten. Zudem werden de facto immer        wieder        relationale Daten nach allegro überführt bzw. soll Datenaustausch          in umgekehrter Richtung stattfinden, und auch dabei können einpaar übergreifende Kenntnisse nützen.  Ab Version 25 gibt es  vom System her eine Unterstützung für den Austausch zwischen  den Welten: aresqa . Sicher kann man noch viel  mehr sagen, vermutlich müssen einige der Aussagen weiter  präzisiert  oder modifiziert werden. Jeder Leser ist eingeladen, konstruktive  Kritik  zu üben, damit wir diese Übersicht weiter verbessern  können.  Für den vorliegenden Text ist    Dank zu sagen an Thomas Berger (Bonn), Mathias Manecke (DB Leipzig) und Dr. Annemarie Tews (UB Leipzig) für Beiträge und Diskussionen.  Relationale Datenbank-Management-Systeme (RDBMS) und allegro ,  das sind recht unterschiedliche Gebilde, die man im Grunde nicht leicht  vergleichen kann. Vor allem waren die Entwicklungsziele nicht  dieselben.  RDBMS wurden primär (doch nicht ausschließlich) entwickelt  mit  Blick auf solche Anwendungen, die Berechnungen und Auswertungen  erfordern,  also im weitesten Sinne Faktensammlungen sowie Geschäfts- und  Verwaltungsanwendungen. allegro dagegen zielte von vornherein (aber auch nicht ausschließlich)  auf  strukturierte Textdaten; dazu gehören als Spezialfall  bibliothekarische  Katalogdaten. (Als eine dritte Kategorie könnte man vielleicht die  Internet-Suchmaschinen betrachten wollen, die aber nur für das Retrieval in unstrukturierten Texten geschaffen wurden, nicht für die Verwaltung dieser Texte. Daher kann man sie kaum als Datenbanksysteme bezeichnen,  und nur um solche geht es hier.)  Die nachfolgende Übersicht versucht, für Vertreter      beider Umgebungen verständlich zu sein, stellt hauptsächlich      strukturelle Aspekte gegenüber und beschränkt sich auch in      dieser      Hinsicht auf wenige, für Bibliothekszwecke wichtige Punkte.      Für      eine Einschätzung in konkreten Zusammenhängen wird man      meistens      noch weitere Kriterien berücksichtigen müssen, bis hin zu den      Kosten, die hier außen vor bleiben. (Bibliotheken sind auf's      Ganze      gesehen, und kommerziell betrachtet, nur eine Nische, das darf man      nicht      verkennen.)  Vor Jahren          hat einmal die DFG in ihren Förderrichtlinien          empfohlen, Standard-Datenbanksysteme statt proprietärer          (firmeneigener)          Lösungen zu bevorzugen. De facto hieß das, man solle ein          RDBMS          einsetzen, denn andere umfangreichere und durchgesetzte Standards gab          es          und gibt es noch immer nicht, etwa für sog. "objektorienterte"      Datenbanken.      Die DFG-Empfehlung entsprang nicht einer Erkenntnis, solche Datenbanken      seien      die bestgeeigneten für bibliothekarische Zwecke - und bis heute          hat sich das weder theoretisch noch praktisch erwiesen.          Hinter der Empfehlung stand vielmehr die Hoffnung, dadurch zu          herstellerunabhängigen          Anwendungen kommen zu können. Idealerweise, so die Vorstellung,          sollte          man die Hardware und das Datenbanksystem wechseln können, ohne          viel Aufwand in die Anpassung der Anwendungssoftware stecken zu          müssen.          Diese Hoffnung hat sich noch nirgends überzeugend erfüllt,          die          Abhängigkeit der Anwendungssoftware von den spezifischen          Besonderheiten          einer Datenbankgrundlage ist denn doch immer recht groß: insbes.          hat jedes SQL seine Eigenheiten. Ist der Standard also nur          vermeintlich ein          solcher, oder ein zu schwacher?   Das Entity-Relationship-Modell, die Grundlage der RDBMS-Theorie          und -Praxis, ist ein mathematisch fundiertes Konstrukt. Es sachgerecht          anzuwenden ist eine anspruchsvolle Aufgabe. Dazu gehört die              Erstellung              einer sog. "normalisierten" Tabellenstruktur. Wenn RDBMS häufig              eingesetzt werden, ohne auf ein schlüssiges, gründlich              durchdachtes, theoretisch sauberes ER-Modell aufzusetzen, dann ist das              nicht dem              relationalen Konzept, sondern den Entwicklern anzulasten. Zu fragen              bliebe              also, ob sich bibliothekarische Sachverhalte in einem ER-Modell              wirklich              elegant und effizient abbilden lassen. Diese sehr komplexe Aufgabe ist              wohl noch immer nicht umfassend und allgemeingültig gelöst.              Noch              jeder, der es versuchte, konnte erleben, wie auf diesem Gebiet viel              mehr Teufel in viel mehr Details stecken als man gedacht hätte und              infolgedessen viel mehr Zeit zur Umsetzung gebraucht wird als man              angesetzt              hatte, unerwartet viele Tabellen nötig sind und die              Anwendungsprogramme              deshalb unerwartet groß und kompliziert werden. Es kommt              erschwerend              hinzu: ein theoretisch stimmiges Modell allein reicht nicht aus. Zwar              wird oft ein Modell mit einigen hundert oder ein paar tausend              Datensätzen gut funktionieren, dann aber bei weiterem Anwachsen          "in              die Knie gehen". Es gibt manche Dinge, über die man bei kleineren              Datenmengen              gar nicht nachzudenken braucht, die mit Millionen Daten aber auch auf              stärkster              Hardware nicht mehr zufriedenstellend schnell funktionieren (z.B.          "views"          und vor allem "joins"). Solche Effekte, die dann leicht zu Kompromissen              zwingen, sind bei allegro, so darf man aus Erfahrung sagen,              weniger              gravierend.    Datenstruktur - Zugriff - Datenaustausch - Programmierung - Plattformen - Sicherheit - Leistung        RelationaleDatenbanken  allegro  ( Unterstrichen-kursiveWörter verweisen auf das Glossar der allegro -Begriffe)      Struktur derDaten    ZentralesKonzeptder relationalen Welt ist das Entity-Relationship-Modell (ER-Modell). Dessen Grundlage ist es, die in der Datenbankabzubildenden Sachverhaltein Eigenschaftsgruppen (Entitäten) zu gliedern, wobei jedeAusprägungeiner jeden Entität mit jeder anderen Ausprägung dieser odereiner anderen Entität in Beziehung stehen kann (d.h.jeder Datensatz mit jedem anderen verknüpft sein kann).  Physischist dieses Modell in RDBMS in Tabellenform realisiert. Jede Tabellerepräsentiert eine Entität, jede Zeile (auch "Tupel" genannt)eine Ausprägung der Entität, jede Spalte ("column") eineEigenschaft ("attribute"). Wichtigste Aufgabe bei der Entwicklung einerrelationalenDatenbank- Applikation ist also die Umsetzung des abzubildendenSachverhaltesin ein ER-Modell (Normalisierung nach Codd), um aus diesem dieTabellenstruktur (Codd sagte "relation" statt "table")zu entwickeln. (Ist das nicht sinnvoll möglich, so ist das RDBMSvonvornherein nicht das geeignete Werkzeug!)  Logischgesehenentspricht einer Entität in allegro einem Satztyp .Die Tabelle als Konzept gibt es nicht. In einer Datenbank-DateikönnenSätze aller Typen zugleich ohne strukturelle Zuordnung vorkommen.Ein Datensatz ist ein zusammenhängender, durch SteuerzeichenstrukturierterText. Wodurch der Satztyp bestimmt wird und welche Funktionen undZusammenhängeer hat, ist Sache der Parametrierung ,nicht der Dateistruktur. Relationen können im Prinzip genau sowie bei einemRDBMS durch Bezugnahme auf den Primärschlüssel eines anderenDatensatzes gebildet werden. Eine automatische Integritätsüberwachungfür die Datensätze gibt es nicht. DiePrimärschlüsselwerden durch geeignete Index-Parametrierung gebildet. ÜberprogrammierteValidierung lassen sich auch Elemente derIntegritätsüberwachung(z.B. Verhinderung von Doppeleinträgen, Löschverweigerungfürverknüpfte Sätze) in eine Anwendung einbauen.    EineTabellehat keine bestimmte Ordnung. Selektierte Teilmengen können aberper SQL nach jedem Attribut (Tabellenspalte) sowie nach Kombinationen vonAttributengeordnet werden. Ein Index dient nicht der geordnetenSicht aufdie Daten, sondern der beschleunigten Selektion bei größerenTabellen. Der Index selbst wird nicht sichtbar. Will man das erreichen,ist dafür eine eigene Tabelle zu machen. Neben realen kann es auch virtuelle Tabellengeben, sog." Views ". Die Software zeigt dann genau diejenigen Dinge, diefür eine Funktion oder von einem Nutzer gebraucht werden, doch es gibtdafür keine wirkliche Tabelle.  EineDatenbank-Dateihat keine bestimmte Ordnung. Geordneter Überblick wird durch Indexieren ermöglicht (s.u.), wobei die Register durchgeblättert und zur Bildung von Ergebnismengen benutzt werdenkönnen. Ergebnismengen können nach mehreren Kriterien auf- und abwärts sortiertangezeigtwerden. Ein eigenes Sortierprogramm kann Ordnungen herstellen (offline,für Reports und Listen), die sich nicht unmittelbar ausFeldinhaltenoder aus den Registern ergeben. Die Indexierung ist das zentraleElementzur Präsentation der Daten in geordneter Form . DanebenkönnenErgebnismengen nach Elementen der Kurzanzeige, aber auch nach jedemFeldinhaltgeordnet werden ("View"-Technik).    JedeZeileeiner Tabelle kann man als Datensatz ansehen, jeder Datensatz hat genausoviele Felder ('Attribute') wie die Tabelle Spalten hat, wobeieinzelneleer sein können.  Auch ein leeres Feld braucht jedoch Platz.(Wieviel, hängt von der internen Architektur ab. Manchefüllendie Spalten mit Leerzeichen auf.) Durch Vermeidung von Redundanz(Normalisierung!) kann man andererseits Platz sparen.  JederDatensatzenthält nur die jeweils belegten Felder. Es gibt im Grunde keine leeren, sondern abwesende Felder. Ein leeres Feld tritt im Datensatz garnicht in Erscheinung,belegt also Null Byte. Es gibt Kategoriesysteme mit über 1000Feldern(z.B. Pica: über 1.400), von denen dann viele nur selten belegtsind,da macht das denn doch etwas aus.    Die Strukturder Datensätze (der Tabellenzeilen) ergibt sich sozusagen ausder Kopfzeile der Tabelle, in der steht, was die einzelnen Spaltenbedeutenund was für Eigenschaften sie haben. Moderne Systeme speichern die "Kopfzeilen" aberin besonderenTabellen der Datenbank. Im Datenfeld selbst, das ist ein Unterschied zuallegro,steht kein Feldname oder Kategorienummer, sondern allein die Positionbestimmtdie Bedeutung des Elementes. Jede Tabellenspalte hat einen Namen (daskönnteauch z.B. eine MAB-Kategorienummer sein)und wird in Abfragen undProgrammenimmer über diesen Namen (zusammen mit dem Namen der Tabelle)angesprochen. In SQL dient der Befehl CREATE zur Definition vonTabellen,Views und Indizes.  Eine Konfigurationsdatei (CFG) legt fest, welche Felder es in einer Datenbank geben darf. Dazudientdie "Kategorieliste", die jedem logischen Datenfeld eine Nummer (engl. tag )zuordnet und seine Eigenschaften definiert. Die Reihenfolge dieserNummernhat keine funktionale Bedeutung, die Nummern müssen nichtfortlaufendsein. Zu entscheiden ist, ob es 2-, 3- oder 4-stellige tags sein sollen; nur die erste Stelle soll eine Ziffer sein. In denParameterdateienund in der FLEX- Makrosprache werden diese Nummern (und nicht dieFeldnamen)benutzt, um Felder anzusprechen. Es gibt Kategoriesysteme mit über1500 Kategorien (wobei aber viele Wiederholungsfelder mitgezähltsind). Die Konfiguration legt nicht fest, ob und wie dieFelder indexiert oder angezeigt werden. Das ist dieAufgabe von Parameterdateien.    JedesFeldhat einen Typ (numerisch, Datum, Text, u.a.), Textfelderhabenjeweils eine festgelegte maximale Länge. Vorteil: dietypspezifischenEigenschaften können für Selektion undIntegritätsüberwachungausgenutzt werden. (Soundex-Suche bei Text, Größer-,Kleiner-Vergleichbei Datum, not nul und unique bei Primärschlüssel ...)  JedesFeldenthält Text (automatisch bis zu 3000 Zeichen je Feld), jedochkann jedes Feld auch zum Rechnen verwendet werden. (Neben einer Zahlkanndas Feld dann trotzdem noch beliee andere Angaben enthalten.) BeiderEingabe können programmierbare Validierungen den Inhalthinsichtlichgewünschter Eigenschaften abtesten und ggfls. Fehlermeldungenproduzieren.    Feldersind nichtwiederholbar - das würde den Grundsätzen der Theoriewidersprechen.Sollen z.B. 5 Schlagwörter eingebbar sein, wären dafür 5separateTabellenspalten einzurichten. Soll ein Feld frei wiederholbar sein(Paralleltitel,Mitarbeiter) so ist der "saubere" Weg, die sog. 1. Normalform, es ineine eigene Tabelle auszulagern.Dies spart Speicherplatz und das Feld ist dann auch wirklich "frei"wiederholbar,nicht nur zwei oder sieben oder fünfzigmal. Falls solche Angabenallerdingseine Reihenfolge haben (1. Verfasser vor 2.), oder qualifiziert sind(Personenals Verfasser, Herausgeber  oder Mitarbeiter) oder beides(Herausgebervor 1. Mitarbeiter vor 2. Mitarbeiter), müssen in dieser zusätzlichenTabelle zusätzliche Spalten zum Erhalt der Reihenfolge undFunktionsbezeichnungeneingefügt werden. Für die Anzeige eines Datensatzes müssendiese über Tabellen verstreuten Angaben zusammengesetzt und demAnwenderpräsentiert werden. Nach einer Veränderung müssen dieAngabenwieder auf alle betroffenen Tabellen verteilt werden. Der Datensatzexistiertdann nur als logische Einheit, seine Teile sind verstreut. Eine halbwegs funktionsreiche bibliothekarischeAnwendungkommt schnell auf Dutzende bis Hunderte von verschiedenen Tabellen undHilfstabellen, für die dann Suchanfragen und Views programmiertwerdenmüssen. Auf die Leistung und die Durchführbarkeit vonÄnderungen wirkt sich dies nachteilig aus.   JedesFeld ist beliewiederholbar , falls man dies nicht in der CFG ausdrücklichverbietet. In den meisten allegro -Anwendungen sindmehrfachauftretende  Angaben in sogenannten Wiederholkategorien abgelegt:Hinter der Kategorienummer wird ein Folgezeichen "hochgezählt":2,3,4,..., A,B,C, ..., a,b,c, ... Wenn nötig, kann man auf diese Art auf eineetwa 200fache Wiederholung kommen, die Reihenfolge bleibt dabeierhalten(sie wird durch die Ordnung der Folgezeichen bestimmt). Die Funktion z.B. von Personen kann je nachAnwendungauch an Kategorienummern gebunden sein (alle Herausgeber kommen dannvorallen Mitarbeitern), in anderen ist die Funktionsbezeichnung oder einKürzeldafür in den Daten selbst enthalten, angehängt oder in einemTeilfeld. Die Reihenfolge ist dann stets die der Eingabe, dafüristman freier in der Vergabe von Funktionsbezeichnungen. Hat man hiereinenundurchdachten Entwurf gemacht, kann das nachträgliche Ändernschwierig werden. Ein allegro-Datensatz kann nicht mehr als 500Indexeinträgeerzeugen und darf auch nicht größer als 20.000 Byte sein.Füreinen Datensatz 200 Schlagworte und 200 beteiligte Personen(sollschon vorgekommen sein) und diverse Stichworte ausFreitextbeschreibungenund Dutzende von Parallelsignaturen, die alle recherchierbar seinsollen,bringen das System an oder über seine Grenzen.    Sollein neuesFeld eingeführt oder die maximale Länge eines Textfeldesvergrößert werden, hat man u.U. die gesamte Tabelle zureorganisieren(geht nicht im laufenden Betrieb), bei neueren Systemen nichtunbedingt. Die eigentliche Arbeit bei der EinführungneuerFelder ist aber die Festlegung der damit verbundenen Funktionen. DasneueAttribut hat ja einen Zweck; diesen gilt es in veränderteAnzeigemasken,Suchfunktionen,  Ausgaberegeln usw. umzusetzen. Der Aufwandfür die Reorganisation der Tabelle ist in Bezug auf denGesamtaufwandzu vernachlässigen.  DasEinführeneines neuen Feldes geschieht durch eine Eintragung in derKategorielisteder CFG-Datei .(Das geht jederzeit, auch im laufenden Betrieb.) Von da an kann jederDatensatz, auch jeder schonvorhandenene, dieses Feld zusätzlich erhalten, ohne dafüreine Datei reorganisieren zu müssen. Um das neue Feld auchindexiert und angezeigt zu bekommen, ist es in die zuständigenParameterdateieneinzubauen. Für die Erfassung ist das neue Feld in ein Formularoderdie "Abfrageliste" einzufügen, evtl. ist eine programmierteValidierungzu parametrieren (für die Eingabeüberprüfung).    Felder('Attribute')dürfen in sich strukturiert sein, jedoch wird so etwas von derTheorieund z.B. von SQL nicht unterstützt (denn Attribute sollen"atomar"sein , unteilbar also). Dafür hätte man eigeneAnwendungsprogramme zuschreiben. Z.B. könnte man 5 Schlagwörter auch in eineTabellenspaltehintereinander schreiben (vorausgesetzt, man hat die maximaleLängehoch genug eingestellt), aber mit SQL kann man dann nicht dieSchlagwörtereinzeln indexieren. Es können (redundante) zusätzlicheTabellendafür angelegt werden, um das Suchen zu unterstützen.  Felderkönnenin sich belie strukturiert sein, normalerweise werden dieTeilfelderdurch Steuerzeichen wie $a, $b usw. identifiziert (typisch für MARC-Formate ),doch es reicht auch eine konsistente Interpunktion. Die Parametrierung bietet vieleMöglichkeiten fürden Umgang mit Teilfeldern und anders strukturierten Feldinhalten,ebensodie Verfahren der Eingabe und Bearbeitung. Attribute sind alsokeineswegsunteilbar sondern lassen sich in jeder sinnvollen Weise zerlegen. Insbesondere können Teilfelder individuellindexiertwerden.    InmodernerenDatenbanken kann man oft " Objekte ", also Textdokumente, PDF-Dateien, Video- undSoundclips, Graphiken,komplexe Tabellenkalkulationen einbeziehen und anzeigen, abspielen oderbearbeiten. Dies ist vergleichbar mit "Plugins" in Internet- Browsern,die im Browserfenster bzw. sogar nur Ausschnitten davon agieren.  DieOrganisationsolcher Objekte ist dem Anwender selbst überlassen. In geeignetenKategorien des  Datenformats können allerdings Links aufdiese Objekte hinterlegt werden, über sogenannte " Flips "  unterstützt allegro dann den Aufruf einer Anwendung fürdie Anzeige etc. der Objekte. Dies ist vergleichbar  mit denHelper-Applikationenin Internet-Browsern, die installiert und bekanntgegeben werden.    Beziehungenzwischen Tabellen werden durch IdNummernoderandere Schlüssel dargestellt. Wenn z.B. Tabelle A in Spalte 5 eineNummerhat, die innerhalb A eindeutig ist, können sich andere Tabellenaufdiese Nummer beziehen, d.h. in Tabelle B kann z.B. Spalte 7 Nummernenthalten, die in A5 vorkommen müssen. So werden auch Bestandteilezusammengehalten,die zu einem logischen Satz gehören, wenn dieser physisch aufmehrereTabellen verteilt ist (s.o.). In einem View können genau dieElementeerscheinen, die für den Betrachter wichtig sind, d.h. keineIdNummernu.dgl., sondern Klartexte.  Beziehungenzwischen Datensätzen werden durchIdNummernoder andere Schlüssel dargestellt. Das Prinzip ist logisch gesehendasselbe wie in relationalen Datenbanken. Für die Anzeige von Datensätzen und fürdie Indexierung gibt es außerdem eingebaute Mechanismen, die eineIdNummer durch einen Klartext ersetzen. Die scheinbare "Flachheit" derDateien wird dadurch in ein potentiell komplexes Beziehungsgeflechtverwandelt,die Organisation der Dateien selbst und die Austausch- undBearbeitungsvorgängebleiben aber immer unkompliziert.    Fürdenschnellen Zugriff und für geordnetes Browsing kann jede SpaltejederTabelle indexiert werden. Es wird jeweils der gesamte Feldinhaltindexiert. Eine Zerlegung des Feldinhalts z.B. für eineStichwortindexierunggibt es normalerweise nicht, dazu müssen zusätzlicheProgrammegeschrieben oder Extra-Tabellen angelegt werden, in jedem Fall einrechthoher Aufwand.  Ein Index  kann in SQL nicht direktangezeigt unddurchgeblättert werden, sondern nur über Views. Ein Index hateine andere Funktion als bei allegro ! (s.o.) Modernere Datenbanken kennen auch Spalten, indenen dieEinträge variable Länge als Text haben und indexierbarsind. (Die variablen Textfelder von dBase waren nichtindexierbar.)  Bei MySQL gibt es eine Volltext-Indexierung, dieauf ausgewählte Felder angewendet werden kann. Ein sichtbaresRegister ist auch damit nicht verbunden. Mehrere Spalten können einen gemeinsamenIndex bilden.(Wenn man mehrere Spalten für Namen oder Schlagwörter proSatzhat, wäre das sonst ein großes Problem.)     Fürdenschnellen Zugriff und für geordnetes Browsing kann jedes Datenfeldoder Teilfeld indexiert werden. Die Indexdatei einer Datenbank, eineB*-Baumstruktur,kann bis zu 11 Register umfassen. Die Parametrierung ermöglicht jede Art der Manipulation des Feldinhaltes sowie eineMehrfachindexierungeines Feldes und auch das Zerlegen in belieer Weise(Stichwortindex!).Bei einem String-Index (Titel) können Nichtsortierwörter wieArtikel am Anfang von der Ordnung ausgeschlossen werden.  In Registern kann man blättern , sogartrunkieren,und direkt Ergebnismengen bilden (mit Operatoren UND, ODER, NICHT).Registerausschnittekann man kopieren. In Registern können Verweisungen erscheinen,diebei Anwahl zu einem anderen Registerabschnitt hinführen. Mehrere oder auch alle Felder können imselben Registerindexiert werden. Jedes Feld oder Teilfeld kann in unterschiedlicherFormin mehreren Registern indexiert werden. Innerhalb eines Registers können durchbelieePräfixe mehrere Abteilungen (logische Register) gebildet werden.DieZahl 11 ist also keine Grenze. Register 11 kann aber nur mit bestimmtenPrivilegien benutzt werden (Datenschutz). Anzeige und Sortierung desIndex sind dennoch trennbar, denn Sortierhilfen (Reduzierung aufKleinschreibung,Einfügen von Leerschritten ...) können auch verborgen werden.In Client- Server-Anwendungen kann man noch mehr tun, um Verwirrung zuvermeiden.    ZusammengesetzteSchlüssel (aus verschiedenen Spalten)sindmeistens  möglich (also nicht unbedingtplattformunabhängig).Wenn ja, ist zu fragen, was passiert, wenn  z.B. das erste vonzweiFeldern nicht besetzt ist. D.h. die Frage ist, ob es Möglichkeitender Ausnahmebehandlung gibt.  Belieezusammengesetzte Schlüssel sind möglich. Die Parametrierungkannsinnvolle Behandlungen von Fällen vorsehen, wo einzelne Teile desSchlüssels im Datensatz nicht vorkommen. Ein allegro -Registerist, im Vergleich gesehen, eher so etwas wie ein "View", eine virtuelleTabelle also. (Der Index wird in Realzeit aktualisiert)    HierarchischeDatensätze  gibt es nicht, siekönnennur als Teilmengen von Tabellen dargestellt werden. D.h. sie werdennichtdurch Relationen zwischen mehreren Tabellen, sondern durch RelationeinerTabelle zu sich selbst dargestellt. Je nach Architektur sindverschiedeneStrategien zur Lösung der  satzübergreifendenSuche (sog. Schiller-Räuber-Problem) realisierbar.  Esgibt mehrstufige hierarchischeSätze , aber auch eine Abbildung von Hierarchien durch Satzverknüpfungen (heute die bevorzugte Methode). Dafür kann auch einesatzübergreifendeSuche mittels Parametrierung eingerichtet werden (sog."Schiller-Räuber-Problem").      Zugriffsfragen    Auchohne Indexkann (mit Hilfe des Befehls SELECT von SQL) auf alles zugegriffenwerden.Kleinere Datenbanken (unter 10.000 Sätze, nur wenige sindgrößer,auf's Ganze gesehen) werden oft ohne Index betrieben! BeigrößerenDatenbanken dauert dies jedoch für den Normalbetrieb zu lange,besondersbei geordneter Anzeige und bei den beliebten "Joins" (Verbindung vonTabellenüber gemeinsame Attribute).  OhneIndex kannmittels Volltextsuche zugegriffen werden. DieDatenbankgrößeist hier ebenfalls kritisch. Ca. 30 Minuten für 1 MioDatensätzesind realistisch. Es wird praktisch keine Datenbank ohne Indexbetrieben,auch sehr kleine nicht, denn der Index ist integraler Teil desKonzepts.Die Indexzugriffe sind auch bei mehr als 1 Mio Sätzen noch sehrschnell."Join"-Funktionen werden logisch gesehen über den Index bzw.überSatzverknüpfungen realisiert.    Fastjede Artvon Abfrage und Auswertung kann mit Hilfe des SQL-Befehls SELECT programmiertwerden, bis hin zur Ordnung und Gruppierung von Ergebnismengen.  Zugegriffenwird i.d.R. über die Register , mit logischenKombinationen und Restriktionen können Ergebnismengeneingeschränktwerden. Erstellung komplexer Listen mit spezifischer Ordnung undGruppierungoder Auswertung erfordert Kenntnisse der Parametrierung(Exportsprache).Die Windows- Programme erleichtern die Listensretellung sehr starkdurchdie neue  " View-Technik " (V20a).    TypischeAnfragen an eine relationale Datenbank: "Bitte alle Angaben zu XYZ!" (Wobei XYZtypischerweiserelativ kurz ist, etwa ein Name oder eine Bezeichnung, und seine genaueSchreibweise meistens bekannt.) "Wieviel Umsatz machten die Außendienstlerim letztenQuartal?" "Welche Produkte waren im Vorjahr dieRenner?" "Bei welchen Lieferanten kaufen wir ammeisten?" "Welche Rechnungen des Vormonats sind noch offen?Wasist deren Summe?" Der Umgang mit Zahlen, das wird daraus klar, istäußerstwichtig. Mit der Sprache SQL kann man solche Anfragen formulieren undAntworten in der gewünschten Form erhalten (geeigneterDatenbankentwurfvorausgesetzt). In Bibliotheken sind Fragen solchen Typs z.B. indenGeschäftsgängen Ausleihe und Erwerbung interessant, kaum imKatalogwesen.  TypischeAnfragenan eine allegro -Datenbank: "Bitte alle Angaben zu XYZ!" (Wobei XYZ oftziemlichlang ist und seine genaue Schreibweise häufig nicht bekannt.) "Ist eine deutsche Ausgabe von 'The agony and theecstasy'vorhanden?" (Wobei  oft unbekannt ist, wie der deutsche Titellautet(hier 'Michelangelo').) "Welche Werke von Tschaikowsky sind da?" (Und manerwarteteine vollständige und nach Werktiteln geordnete Liste, obwohl esüber30 Schreibweisen des Namens gibt und auch die Werktitel immer wiederandersgeschrieben werden.) "Was gibt's zum Thema 'Drogensucht'?" (Egal, obdieses Wort im Titel vorkommt oder z.B. 'Rauschgiftsucht' etc., auchenglischeTitel sind erwünscht, auch Arbeiten über Alkoholismus - odersolche eben gerade nicht.) Diese Fragen machen eins deutlich: Man brauchtsichtbare Register zum Browsingund auch solche Dinge wie Einheitstitel und Normdaten fürNamen und Schlagwörter.      Datenaustausch    DieAusgabevon Daten in der jeweils benötigten Form ist Sache der Anwendungsprogrammierung .SQL selber hat dazu nur geringe Mittel, es liefert nicht viel mehr alsTabellenzeilen mit einem Trennzeichen (meist TAB) zwischen den Feldern,ein sog. "CSV-File". Sehr erleichtert  wird das Erstellen vonListenaber durch Reportgeneratoren. Flexible, leicht erstellbare Reports sindder wichtigste Zweck vieler RDBMS-Lösungen. Sie bilden einewichtigeKomponente von "Management-Informationssystemen". Datensätze imMAB-Formatauszugeben ist dagegen eine ganz andersartige Aufgabe.  Esexistierteine Exportsprache (eine eigens entwickelte Programmiersprache), mit der man Daten in fastbelieer Aufbereitung ausgeben kann (z.B. auch in MAB oder MARCoderin der Form einer CSV-Datei, wie ein RDBMS es einlesen kann). AusGründender Effizienz (z.B. hohe Geschwindigkeit beim Indexieren) ist dieSprachesehr kompakt und daher nicht leicht zu erlernen.  Zwar kann manvielseitigeModule schaffen, und es gibt solche für verschiedene Typen vonListen,aber so etwas wie einen universellen Reportgenerator gibt es nochnicht.Reports sind in den meisten allegro -Anwendungen eherNebenprodukte.Oft reichen die Register oder die Kurzlisten, wenn sie geschicktgestaltetsind.    DieUmwandlungvon Fremddaten ist gleichfalls durch Anwendungsprogramme zulösen,SQL kann nur eine fertig vorbereitete Struktur verarbeiten (Felder mitTrennzeichen, CSV-Files also). Oft wird die Umwandlung mit eigenenPerl-Programmen o.a.erledigt.  Esexistierteine Datenmanipulationssprache , (sog. " Importsprache ")mit der man Fremddaten fast belieer Struktur in die eigene Strukturumwandeln kann, bevor man sie mit dem DOS-Programm UPDATE oder demWindows-Programm a99 in die Datenbank einmischt. Auch CSV-Files kann man leicht importieren,denn sie haben eine immer gleiche Anzahl von Trennzeichen, das reichtalsStruktur aus. Das Vorbereiten der Daten kann aber auch mit Perlo.ä.geschehen. Ab V25 kann der Austausch in beiden Richtungen dank aresqa in vielen Fällen ganz ohneParametrierung auskommen.       Programmierung    SQLkann inandere Programmiersprachen (z.B. auch Perl oder PHP) eingebettetwerden, insbes.für Web-Anwendungen.  Nebendenautonomen ("monolithischen") Zugriffsprogrammen (DOS, UNIX, Windows)gibtes für alle Plattformen den avanti -Server, dessenAbfragesprachein andere Sprachen (z.B. PHP oder Perl, für Web-Anwendungen)eingebettet werdenkann.    EinRDBMS kann nur in einer Anwendungsumgebung (geschriebenz.B. in C, VisualBasic oder einer anderen geeigneten Sprache) arbeiten. Es hatkeine für Anwendungen unmittelbar geeigneteBenutzungsoberfläche.Es gibt jedoch mächtige Entwicklungssysteme, mit denenmaßgeschneiderte(meistens maskenorientierte) Anwendungen ohne viel Programmierunginteraktiverstellt werden können. Die Übertragbarkeit auf ein anderesRDBMSist dann aber wieder in Frage gestellt, auch die Optimalitätfürgroße Datenmengen ist nicht unbedingt gegeben. Wenn es aber umad-hoc-Schnellschüssefür begrenzte Zwecke geht, hat man dafür hervorragendeWerkzeuge.  allegro enthältalle Mittel, eine Anwendung komplett zu gestalten, bis hin zu einermehrsprachigenOberfläche. Im Prinzip braucht man also keine Programmiersprachezu können.Zur normalen Benutzung einer Datenbank (Katalogisieren, OPAC) brauchtmannichts zu programmieren.  Einbindung in Perl, PHP oder andereSprachen(z.B. auch Delphi) ist aber gleichfalls möglich, etwa fürWeb-Anwendungen.Die wichtigsten Mittel sind die Exportsprache zur Gestaltung allerAnzeigenund Ausgaben sowie die FLEX-Makrosprache zur Programmierung vonAbläufen(Windows). Das Sortiment der allegro -eigenenSprachen fürExport, Import, Konfigurierung, Formulare und FLEXe ist allerdings auchnicht gerade sehr leicht zu erlernen. Es gibt Hilfen für denschnellenAufbau einfacher Anwendungen, doch jenseits davon braucht manlängereEinarbeitung.    EinRDBMS arbeitetbei Mehrplatzbetrieb in der Regel als Client/Server-System .Anwendungsprogramme"unterhalten" sich also mit dem Server und greifen nicht selber direktauf die Datenbank zu. Besonders für Web-Anwendungen ist dieClient/Server-Architekturgeradezu zwingend.  Esgibt sowohl monolithischeProgramme (unter DOS, Windows, UNIX), die selbständiglesendund schreibend (mehrplatzfähig) auf die Datenbank zugreifen, alsaucheinen Datenbankserver ( avanti ), für den manbelieeClient-Programme schreiben kann, auch für's Web. In lokalen Netzenwird fast nur mit den monolithischen Programmen gearbeitet (weil amschnellsten,und man braucht keinen Server zu betreiben). Auch das Einmischen vonneuen Datenkann im laufenden Betrieb durch monolithische Programme geschehen.    Mitsogenannten ODBC-Schnittstellen ,oder auch den Perl-DBM-Modulen wird versucht, Anwendungen eine"generische"relationale Datenbank vorzuspiegeln. Zum Beispiel sind mit und fürMicrosoft Access (kein Client/Server) entwickelte Anwendungen dann ohneÄnderung auch mit dem Microsoft SQL-Serverfunktionsfähig. Auch bibliothekarische Software unterstütztstellenweisemehrere relationale Datenbanken: "Bibliotheca Win" etwa das CenturaRDBMS(vormals Gupta) als Low-Cost-Variante oder Oracle alsHigh-Cost-Alternative. In der Windows-Welt gibt es über dasCOM-Konzept(Component Object Model) die Möglichkeit, aus anderen Programmenheraus miteinem unsichtbaren Microsoft Access (z.B. lizenzierte Runtime-Version)oder einer anderen Datenbanksoftware über SQL-Befehle Datenbankenzu verwalten.  Client/Server-Anwendungenkönnen über TCP/IP den avanti -Datenbankserver in dessen Sprache ansteuern oder aber per sog. FLEX ein aufderselbenMaschine laufendes Windows- allegro ( a99 ). Dies ist eineFernsteuerungsmethodevergleichbar mit der Fernsteuerung von Anwendungen über VisualBasic,hier aber mit einer allegro -eigenen Sprache. Diese MethodikfürWindows-Anwendungen ist noch sehr neu und breitet sich zur Zeit erstunterExperten aus. Es wurden damit bereits Erwerbungs- und Ausleihfunktionenrealisiert, aber auch eine neue Web-Schnittstelle (" RuckZuck ").    Das Trigger -Konzeptermöglicht es, Programme zu schreiben, die immer dann automatischablaufen, wenn sich bestimmte Veränderungen ereignen. So kann mankomplexe Bedingungsprüfungen und nachfolgende Aktionenprogrammieren.   Mit Hilfe des PV-FLEX(Programmierte Validierung) kann man logisch gesehen dasselbe füreine allegro -Datenbankrealisieren. Bei jedem Speichervorgang wird dann ein Makroausgeführt, welches vor oder nach dem Speichern des Satzes jedegewünschte Prüfung und/oder Aktion durchführen kann.       Plattformen    EtlicheRDBMShaben Versionen für UNIX, Linux und Windows. Aktuelle VersionenfürDOS gibt es wohl nicht mehr, zumindest nicht für SQL-Systeme.(dBaseIII war zwar relational, hatte aber kein echtes SQL und war nurbegrenztmehrplatzfähig.) Ob zwischen den Plattformen funktionaleUnterschiede bestehen und ob Datenbanken unmittelbar kopiert werdenkönnen, ist man jeweils zu prüfen.  allegro existiertfür DOS, Windows (ab '95), Linux und UNIX (Solaris).Datenbanken können ohne Änderung zwischen den Plattformenkopiertoder auch via Samba zugleich von zwei Plattformen aus benutzt werden.Auchsehr alte PCs können immer noch als DOS-OPAC-Terminals dienen,währendzugleich neuere Geräte unter Win'95 usw. zugreifen.      Sicherheitsfragen    JedeSchreib-Transaktion sollte auf ganz bestimmte Weise abgesichert sein,und zwar müssen diesog. ACID -Bedingungen eingehalten werden:  A tomicity: Aktion wird ganz oder gar nichtausgeführt  C onsistency: Zustand nach der Trans. sollwieder"integer" sein  I solation: das Ergebnis soll so sein, alsliefezugleich kein anderer Vorgang. Dazu müssen alle Vorgänge"serialisierbar"sein (d.h. nicht echt parallel).  D urability: Ergebnis soll hinterher sofortdauerhaftin der Datenbank stehen (nicht zuerst nur in einem Cache o.dgl.)  DieACID-Bedingungenwerden durch geeignete Maßnahmen erreicht. Insbesonderegehörtdazu das Sperren auf Satzebene bzw. im Index bereichsweise und wonötigauch in anderen Dateien (Adressentabelle). Vor dem Speichernkönnen programmierteValidierungen die Integrität prüfen. Die Satzsperre ist nie eine Lesesperre, d.h.Sätze,an denen gearbeitet wird, können im OPAC oder von anderenBearbeiternjederzeit gelesen werden. Bleibt eine Satzsperre etwa durch Absturz einesPC bestehen,kann sie leicht aufgehoben werden. Eine Hilfsfunktion kann solcheSätzefinden.    AlleTransaktionenwerden in einem " Logbuch " aufgezeichnet, das im Falle einesZusammenbruchsoder Systemfehlers für "Rollback" und "Recovery" sorgen kann.  AlleSpeichervorgängewerden in der Reihenfolge des Ablaufs (serialisiert) in einer LOG-Datei aufgezeichnet (die auf einer anderen Platte liegen kann). Diese kannauchzur regelmäßigen Aktualisierung einer Schattendatenbankdienen,aber primär wird sie gebraucht, um aus einer Sicherungskopie derDatenbankwieder den Zustand unmittelbar vor einem Zusammenbruch zurekonstruieren. Zu sichern braucht man im Prinzip nur dieNutzdaten, alle anderenDateien (Index, Kurztiteldatei etc.) sind daraus rekonstruierbar.VölligerNeuaufbau kann z.B. bei 1 Mio. Datensätzen in unter 8 Stundenablaufen.      Leistungsbedarf    Generellbrauchengroße, komplizierte Datenbanken große, schnelle Maschinenmitviel Arbeitsspeicher, um hohe Leistung zu erzielen. SQL-Systemekönnenz.B. bei Massenänderungen in einzelnen Tabellenspalten sehrschnellsein, denn oft wird dabei die gesamte Tabelle in den Arbeitsspeichergeladen.  allegro -Datenbankenmit Millionen Sätzen laufen immer noch mit guter Leistung aufnormalen Novell-oder Win-Servern und fordern weder für Client noch Fileserverextremviel Arbeitsspeicher. Auch die Anforderungen an die Rechenleistung sindeher gering. Das Updating größerer Mengen von Sätzenistaber zeitkritisch, weil jeder Satz dabei mehrere Zugriffeerfordert. Da kommen schnell mal 1 oder 2 Sekunden pro Satz zusammen.    Der Speicherbedarfje Datensatz ist nicht bei jedem System gleich, er hängt vorallemdavon ab, ob Tabellenspalten zur maximalen Länge mit Leerzeichenaufgefülltwerden oder nicht, und vom Bedarf der Indexdateien. Selbst wenn aberbiszu 5K je Satz gebraucht werden, wird das bei heutigen Plattenpreisennichtmehr als Problem empfunden. Und im Vergleich zu Volltexten vonBüchernbrauchen Katalogdaten selbstverständlich in jedem Fall sehr wenigPlatz.  TypischeKatalogdatensätzebrauchen im Schnitt unter 1000 Byte, einschließlich derIndexdateiund der sonstigen Zusatzdateien. In den Sätzen gibt es keineLeerräume,und der Index wird mit einer Komprimierungstechnik klein gehalten. Von Vorteil ist dies, wenn eine Datenbank auf CD-ROM veröffentlicht werden soll (Maximum 640 MB). Es gibt Beispiele mitüber 2 Mio. Datensätzen auf einer CD.      Wer bis hierher gelesen hat, kann dieFragen des ersten Satzes leichtbeantworten: "Keins" bzw. "Nein". Die zugrundeliegenden Vorstellungen,was denn eine Datenbank für Eigenschaften haben und was sieleistensoll, unterscheiden sich einfach zu stark. Manche Typen vonSQL-Abfragenwird man mit Hilfe der FLEX-Technik und der Parametrierung nachbildenkönnen,nicht jedoch die gesamte Bandbreite der SQL-Funktionen.Schließlichist SQL ausdrücklich für RDBMS geschaffen worden, allegro aber hat aus guten Gründen ein anderes Konzept. Die Erwartung,beidekönnten weitgehend kompatibel gemacht werden, ist alsounrealistisch.(Umgekehrt könnte man mit SQL auch nicht alles nachbilden, was manmit allegro machen kann. Z.B. das Blättern in Registernund die hierarchischen Satzstrukturen.)   Diese Übersicht macht hinreichend die Stärken undSchwächen beider Datenbankkonzepte deutlich. Hätte eines derbeiden keine Schwächen, würdees entweder allegro nicht geben, oder aber die UB Braunschweigwäreinzwischen die reichste Bibliothek der Welt. Aber Scherz beiseite: durchaus denkbar sind hybride Anwendungen, diesich der Vorteile beider Systeme bedienen. Warum nicht z.B.Katalogisierungund OPAC mit allegro , Erwerbung und Ausleihe mit einem RDBMS.Beidekönnen über ihre Schnittstellen sowohl die andere Datenbankbefragenals auch ihr Auskünfte geben! Denkanstöße in dieserRichtungkann der hier vorliegende Vergleich möglicherweise geben.  Vergleichweise noch weitaus selteneranzutreffen und in der Standardisierungnoch nicht so weit fortgeschritten sind ObjektorientierteDatenbanksysteme (OODB) . Zu deren Grundkonzept hat allegro eineviel größere Ähnlichkeit als zum RDBMS-Konzept.     P.S.Gefunden im Archiv von "slashdot" (für solche Leser, denen dieKomplexität von Bibliotheksanwendungen noch nicht rechteinleuchtet):   Things a library system needs  by buss_error (142273) on Tuesday August 22, 2000, @04:34PM (#836100) (http://www.apnic.net/ | Last Journal: Thursday June 13, @11:02AM) # Be able to read any of three or four dozen MARC "standards" # Search on any word (but the stop dictionary for words such as the and to of ect.) for a word in any one of over 1K places in the marc record. # Be able to handle more than one library, # be able to store books in different locations within the library, # do user tracking by overdue, notes on the user, automatically import from other databases or text files, have any one of several options for the user such as loan period (but checks the holding to see if the standard period is longer or shorter, or if the fine for overdue is less or more), be able to block a user, # be able to block a user based on what library they are a user for, much much more, # be able to route books between libraries, # be able to route books to outside vendors such as binders, restorers, storage, ect.ect.ect. # be able to find out who checked out a book last, # be able to change the default loan period. # Maintain statistics on the book such as size, no. pages, language, print size, ISBN, LCCN, how many times used in the library, checked out, inventoried, price, "extras" such as clear cover, a place for notes for the whole library system and another place for each library, ability to search on the note, title author, publisher, copyright date, date purchased, dewey, LCN cataloging or some other system, age limits for checking out. # Keep track of budget and invoices, orders, barcodes, much much more. # Ability to keep track of when the next magizne is due, when the subscription runs out, where the old copies vs. new copies are, index the mags., # Print reports on just about anything so throw a report generator at it. And if you want more, there is about five hundred pages of basic requirements in any book on library science. Add to that you have to know who a user is and if they are authorized to do any particular function, (Some can check out, but not in, others can add a note but not edit the book, some can edit books but not at any library except where they are assigned) you get the picture. Off hand, I'd say that a good library system is about four hundred times more difficult than writing Linux. I know. I do Unix admin and Library systems for a living. Trust me, this is not simple. I do think it very worthwhile though.       [i] zuletzt aktualisiert:         20.04.2011 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;    Anleitung zur Benutzung von alcarta                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   a30 - RIA für allegro   Hauptprogramm  a99   OPAC Programm alcarta   allegro-C Installation   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                Anleitung zur Benutzung von alcarta         alcarta istdas Online-Katalog-Programm des allegro -Systems fürWindows (ab Win'95).  Es ist zugleich ein"Viewer" für allegro -Datenbanken.    Die    Hauptfunktionen  Die    Menü´s    1 Das Hauptfenster  2 Der Index 3 Suchen mit logischen Kombinationen  4 Suchbefehlszeile : Expertensuche  5 Ergebnismengen  6 History List  7 Neues Lesezeichen  8 Rückwärts / Vorwärts in der Ergebnismenge  9 Drucken  10 Tür zur Welt  11 Hilfe zur Datenbank  Datei  Bearbeiten Ansicht  Finden  Export  Option  Füllhorn  ?     Anleitung zur Benutzung von alcarta als pdf-Datei     [i] zuletzt aktualisiert:         27.04.2011 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
&gt;    Web - Anbindung RuckZuck                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig          Web - Anbindung RuckZuck         Version a99 :Die billigste Lösung    Version PHP :Die einfachste Lösung       Installation  WWW-Anbindung Schritt für Schritt      Was ist das?    DownloadDemo-Gesamtpaket    Wie geht das?         Versiona99: Die billigste Lösung  Diese Version kommt ohne den avanti -Server aus. Die Rolle einesServers übernimmt das Windows-Programm a99 ,als Skriptsprache fungiert FLEX. Die aktuellste, ausführlichste Fassung dieser Beschreibung istimDemo-Gesamtpaketenthalten: Im Schreibfeld des Programms a99 geben Sieein: hruckzuck . Nicht immer hat man die Zeit, das Geld, die Erfahrung - oder alleszusammen- um eine Web-Schnittstelle nach allen Regeln der Kunst fürdieeigeneDatenbank zu machen. Nicht immer ist der Aufwand notwendig, den man mit avanti und mit ACWWW25 oder "populo" treiben muß. Deshalb gibt eseineSchnittstellefür Schnellschüsse: RuckZuck . DieseAlternative kommtsogarohne Skriptsprache aus (Perl, Python, PHP, JavaScript), nur ganznormalesHTMList nötig. Es wird hiermit der Versuch gemacht, einmöglichstvielseitigesRepertoire von Funktionen (einschl. Schreibzugriff) vorgefertigtbereitzustellen,wobei die Anforderungen an das System und die Notwendigkeit vonAnpassungenauf ein Minimum #BE1E3Cuziert sind. Lokalen Anpassungen sind keine Grenzengesetzt,vor allem mit JavaScript, an der Oberfläche ist nicht viel allegro -Kenntnisnotwendig. Wenn man aber andere als die Standardparameter einsetzt,muß man sich mit der Parametrierung auskennen.   So kann ein Startbildschirm aussehen, wenn man eine mitRuckZuckangebundeneDatenbank anwählt: (Dies ist nur ein Bild, kein funktionsfähiger Katalog)              OPACder UBBraunschweig  UniversitätsbibliothekBraunschweig - Pockelsstr. 13- D-38106 Braunschweig - Tel. ++49 531 391 5026             Schnellsuche          Titelwort:   (Einzelnes Wort!)    Personenname:   (Nachname, Vorname)      Suchen Registerlisten Beide Angaben werden automatisch trunkiert. Wenn Sie in beide Felder etwas eintragen, wird mit UNDverknüpft     Detail-Suche   (Wenn die Schnellsuche nicht geeignet ist,wählen Sie"Detail-Suche")     Was ist RuckZuck?   Seit langem gibt es die allegro -WWW-Schnittstelle .Schon an die 100 Web-Kataloge sind damit am Netz.  Sie haben eine allegro -Datenbank (oder eine andere,ausder man eine machen könnte), die ins Inter- oderIntranet soll?  Nein : --&gt; Ende  Ja : Welche dieser Aussagen geltenfür Sie:   Sie haben zu wenig Geld    Sie haben zu wenig Zeit    Sie haben zu wenig Ahnung von der WWW-Programmierung,insbes. vonPerl,Python, PHP    Ihre Datenbank soll nur für begrenzte Zeit odereinenbegrenztenKreis verfügbar gemacht werden, vielleicht gar nurfür eineeinzelnePerson am anderen Ende des Internet : d.h. hoher Aufwand lohnt nicht.   Nichts davon trifft zu: --&gt; Ende . Denn dann verwenden Sie avanti auf einerUNIX-oder Linux-Anlage und Sie richten mit Hilfsmitteln wie z.B. ThomasBergers "populo"-Paket einen maßgeschneidertenQualitätsdienst ein, mit hoher Betriebssicherheit, dermonatelangohneAufsicht und ohne Eingriff laufen kann. Damit verglichen ist "RuckZuck"mit a99 vielleicht eine90%-Lösung - doch manchmalbrauchtman ja gar nicht mehr!  Wenn eine oder mehrere dieser Aussagen für Siezutreffen , istdie RuckZuck-Methode eine Überlegung wert. Oder auch dann,wennschnellein Provisorium gebraucht wird, damit man die Dauerlösung danninRuheausarbeiten kann.  Ab 31.10.2001 gibt eseine noch leichterzu realisierendeLösung, die aber den avanti -Servererfordert: RuckZuck mit PHP . Und was ist "RuckZuck" nun wirklich? Es ist ein Fertigpaket für dasBereitstellen einer"allegro"-Datenbankim Inter- oder Intranet. Es sollte mit jedem Kategorienschema, also mit jeder"allegro"-Datenbankfunktionieren. Es enthält nur die wichtigsten Funktionen, diejederbraucht, aber sorgfältig durchdacht und offen fürErweiterungen.Die Standarddateien werden ohne grafische Elemente geliefert, dieEinbindungeigener Grafiken, insbes. Logos oder GIF-Dateien für Links wie"NächsteSeite", "Neue Suche" usw., ist für HTML-Kenner sehr einfach.Neudeutsch:man kann leicht seine eigene "Corporate Identity" integrieren.  RuckZuck besteht aus ganz wenigen Dateien und bleibt damitsehrübersichtlich.Alle Dateien sind voll kommentiert, die Stellen für notwendigeEingriffesind markiert, daher braucht man nicht alles zu verstehen, was daabläuft.  Erforderlich:   Ein Rechner mit Win'XP oder Vista. Er muß amInternet hängen. Dazu braucht er keinen eigenenNamen,nur eine IP-Nummer. Eine solche hat jeder PC, der z.B. in einemHochschulnetzsteht.  Das Programm a99  Das Hilfsprogramm cgi.exe  Die Datei opac.htm  das Paket ruckzuck.lzh , diesesenthält Dateien,die manfür jede Datenbank auf ein eigenes Verzeichnis kopiert.(Nichtauf das allegro-Programmverzeichnis, auch nicht auf ein Verzeichnis desWeb-Servers!)  Ein Webserver. Sehr zu empfehlen ist das XAMPP -Paket,dasneben dem Apache-Webserver auch PHP enthält. Installieren SieApache nicht als Dienstprogramm, sondern als ganz normales Programm!Man startet es dann jeweils mit dem XAMPP Control. ("Dienst" geht auch,ist aber nicht nötig. Wenn man das will, muß man unter Start/ Systemsteuerung / Verwaltung / Dienste  auf "Apache"rechtsklicken, dann Eigenschaften / Anmelden  und einen Hakensetzen bei "Datenaustausch zwischen Dienst und Desktop zulassen")   Alles ist auf demselben PC zu installieren! Wenn das nicht der Fallist, können Webserver und a99nicht über cgi.exe kommunizieren.Die Datenbank kann aber im LAN auf einem anderen Fileserver (z.B. auchNovell)liegen. Zur Installation der Basissoftare gibt es eine Schritt-für-Schritt-Anleitung .  Ruckzuck wird per FTP bereitgestellt. Esistein Paket, das außer Apache alles enthält, wasgebrauchtwird,und das nach der Installation (per "InstallShield", wie unter Windowsüblich)sofort lauffähig ist.  Für Unix oder Linux existiert RuckZuck nicht,dafürempfiehltsich der avanti -Server. Vonmehreren Lösungen aufdieserBasis ist die PHP-Version vonRuckZuck dieeinfachste.  Wie startet man RuckZuck?    Webserver starten  Standard: Apache mit dem XAMPP Control starten  a99 starten  Standard: auf c:\opac den Befehl c:\allegro\a99.exe demo geben Über die präparierte Seite HTML-Eingangsseite(OPAC.HTM  mit lokaler Anpassung) kann jetzt der Zugrifflosgehen. An der Datenbank kann zugleich von anderen Fenstern aus normalgearbeitetwerden,entweder mit den DOS-Programmen oder a99. Das Fenster von a99 kann man u.a. benutzen, um sich die abgerufenenErgebnismengenanzuschauen (Alt+e, dann sieht man die Liste). Es entsteht ein Protokoll RZ.LOG auf dem CGI-Verzeichnis desWeb-Servers.Dieses kann man jederzeit gefahrlos löschen. Darin stehen diewesentlichenFLEX-Befehle, die zu einem Job gehören.    Wie geht das?    Funktionsweise der RuckZuck-Schnittstelle  Als Server dient a99.exe, das Windows-Hauptprogramm des allegro -Systems,die Anfragen werden ihm als externe FLEXe übergeben. (Ein FLEXisteineArt Makro, das man sowohl interaktiv in a99 ausführen, aberauchvonaußen dem Programm übergeben kann,gewissermaßen zurFernsteuerung.)Es wird keine Skriptsprache benutzt, auch nicht Java. So wird installiert, wenn man eine eigene Datenbankzugänglichmachen will:   In den eigenen Indexparametern (Standard: CAT.API) solltemansymbolischeNamen für die Register und die Restriktionen haben (z.B. PERfürdas Personenregister etc.) siehe Handbuch S. 176.  Die Datei OPAC.HTM kopiert man auf dasDokumentenverzeichnis desWebservers.Bei Apache ist das normalerweise c:\xampp\htdocs. In OPAC.HTM muß man evtl. an wenigen Stelleneingreifen.Dreimal muß der Verzeichnisname eingetragen werden, wo a99läuft(siehe4., Default ist C:\OPAC.) Die URL dieser Datei teilt man dann den betroffenen Personen mit. DieseDateiist der Zugang und zugleich so etwas wie die INI-Datei fürIhrenWeb-Katalog.Daher enthält sie den Pfad, wo a99 läuft.  Das ProgrammCGI.EXEmuß auf das CGI-Verzeichnis des Web-Servers. Bei einerStandard-Installationvon Apache ist das ...\xampp\cgi-bin. CGI.EXE wird bei Bedarf vomWebserveraufgerufen, wie jedes normale CGI-Programm.   Man legt ein Verzeichnis für die Schnittstelle an,z.B.C:\OPAC(günstig ist ein nicht zu langer Name, denn er muss bei jederTransaktionmit durchgereicht werden). Der Name dieses Verz. muss in OPAC.HTMstehen (siehe2.). Wenn Sie es einmal verlagern: nur OPAC.HTM entsprechendändern.Auf C:\OPAC entpackt man ruckzuck.lzh: die FLEXe, Parameter undHTM-Dateistücke,aus denen die Schnittstelle besteht. Hier muss auch eine Datei xyz.iniangelegtwerden. Darin stehen Name und Pfad der Datenbank etc. Mit "a99 xyz"startetman a99 dann auf diesem Verzeichnis (nicht woanders). Man stellt esdann soein, dass irgendein Titelsatz in der Anzeige ist. Nun wartet es aufArbeit...  In den .FLX-Dateien und HTM-Teilen sind Stellen fürAnpassungenmit XXXmarkiert.  Für weitere Datenbanken legt man weitereVerzeichnisse an(Kopien von c:\opac), die jeweils eine induviduelle .INI fürdenStartvon a99 brauchen. D.h. es muß für jede Datenbank eineigenes a99aufdem zugehörigen Schnittstellenverzeichnis gestartet werden. ImHinblickauf Systemressourcen ist das unkritisch: jedes laufende a99 belegthöchstens2.5MB Arbeitsspeicher und braucht nur dann Rechenleistung, wenn geradeeineAnfrage bearbeitet wird. Ändernde Eingriffe sindvoraussichtlichnurnötig in der Datei FIND-S.FLX  (kommentiert), die ausOPAC.HTM aufgerufenwird. Außerdem in GETEDIT.FLX und WRITE.FLX sowie D-EDIT.APR,wennman Schreibzugriffe erlauben will. Für die Einstellung derSortierstelleauch FIND-D.FLX.   Wer nicht mit dem Standardschema A.CFG arbeitet:Für dieeigeneDatenbank muß eine Datei D-KHTM.cPR angelegtwerden (wobei c der eigene Konfigurationsbuchstabe ist, z.B. P fürPica), sowie eine D-EDIT.cPR ,wenn manSchreibzugriffanbieten will. Eine Datei D-H0.APR kann auf D-H0.cPR kopiert werden, sie wird füreinige Hilfsfunktionengebraucht.   Schnelle Lösung: Man kopiert D-H0.APR zusätzlichauf D-KHTM.cPR .Dann bekommt man nureine Anzeigeim Internformat. Außerdem:  P-HTM.APT auf P-HTM.cPTkopieren.  Aufwendige Lösung: Man erstellt D-KHTM.cPR aus deri.d.R. vorhandenen D-1.cPR ,oder D-KRTF.cPR  indem mandieseEinstellungen darin vornimmt:  zl=80  ze=10  zm=0  zb=" "  ab=""  as=""  td-utf8 diese Zeile am besten ans Ende der Datei! (Codetabelle ASCII -&gt;Unicode) Wenn man keine  D-UTF8.cPT hat, kopiert man D-UTF8.APT aufdiesenNamen. Im allgemeinen wird es dann schon klappen. Das ErscheinungsbildderDatensätze läßt sich durch Bearbeitung der D-KHTM.cPR nochbeliebig verbessern. In dieHilfsparameter D-H0.APR wird mannormalerweise nicht eingreifenmüssen.   Die Funktionsweise   Für die Übergabe von Nutzerdaten werdenganz normaleHTML-Formulareverwendet. Diese werden an ein kleines CGI-Programm übergeben,CGI.EXE.Es ist in C geschrieben und daher viel schneller als z.B. Perl.  CGI.EXE wandelt die Formulardaten um, verbindet sie miteinemvorgefertigtenFLEX und übergibt diesen an a99.  Der FLEX veranlasst a99, eine Ausgabe in HTML zu erzeugen,diedurchCGI unmittelbar an den Nutzer übergeben wird. Auch hierkönnen vorgefertigteTeile zum Einsatz kommen, z.B. HTML-Kopfdateien.   Nutzer:     CGI . . . . . . . .. .. . . . . . . . CGI  HTML-Seite                          HTML              Nutzer:  mit        ---&gt; FLEX ---&gt; a99 ---&gt; Ausgabe      --&gt; neue    --&gt; Anfang  Formular                                               HTML-Seite  Es gibt eine Anzahl von vorgefertigten FLEXen mit wichtigenGrundfunktionen,die auf diesem Wege aktiviert werden können. Diese sindjeweilsausführlichkommentiert. Insbesondere ist markiert, wo man Veränderungenvornehmenkann oder muß. Man braucht nur eine feste HTML-Seite, die für den Einstieg.Dieanderenwerden immer ad-hoc von den FLEXen erstellt. Übersicht: Was sieht/macht derNutzer --&gt; was wird dannausgelöst  START: z.B.   OPAC.HTM --&gt; FIND-S.FLX AusführungeinerSuche  Ausgabe: Ergebnisliste oder Registerausschnitt  oder  --&gt; DETAIL.FLX produziert Formular fürkombinierteSuche  Ausgabe: Das Eingabeformular   Eingabeformular fürkombinierteSuche  --&gt; FIND-D.FLX Neue Sucheausführen   Ausgabe: Ergebnisliste oder Registerausschnitt   Ergebnisliste  --&gt; GETREC.FLX  holt einen einzelnen Satz  Ausgabe: Satzanzeige  --&gt; FIND-D.FLX  veränderte Sucheausführen -&gt;andereErgebnisliste  --&gt; DETAIL.FLX  Start einer neuen Suche   Registerausschnitt  --&gt; FIND-D.FLX  zu einer Registerzeilegehörige Sätze   Ausgabe: Ergebnisliste oder Satzanzeige  --&gt; PAGE.FLX    eine Seite vor oderzurück   Ausgabe: Registerausschnitt  --&gt; DETAIL.FLX  Start einer Neuen Suche   Satzanzeige  --&gt; DETAIL.FLX  Start einer Neuen Suche  --&gt; GETEDIT.FLX Satz zum Bearbeitenbereitstellen   Ausgabe: Bearbeitungsformular   Bearbeitungsformular  --&gt; WRITE.FLX Satzspeichern,entw. als Korrektur oder Neusatz  Eingreifen mußman bei eigenen (nicht demStandardentsprechenden) Datenbanken in die rotgeschriebenenDateien , denn darin gibt es datenbankabhängigeTeile. Manfindetdie Stellen leicht, denn es steht immer XXX und ein Kommentarüberdenzu ändernden Stellen.  Liste der FLEXe  Diese FLEXe werden als Grundpaket bereitgestellt. Sie erzeugen jeweilseineHTML-Seite als Ausgabe. Sie benutzen jeweils eine (meistens)gleichnamige.HTM-Datei als Kopf. Hier kann man lokale Design-Elemente einbringen,z.B.ein eigenes Logo statt "ruckzuck.gif" (Tip: kopiert man das eigene aufdiesenNamen, hat man weiter nichts zu tun) und Links zu eigenenSeiten.Indiesen Kopfdateien kann man aber auch JavaScript-Funktionenunterbringen.In die FLEXe eingebunden sind die Seiten mit dem Befehl writeF filename. DieHTM-Köpfe enthalten kein"...",denn dieser Abschnitt wird schon von CGI erstellt und enthältnureinen mit der internen Nummer des Jobs.  Liste der FLEXe mit zugehörigen htm-Kopfdateien(werdenautomatischeingebunden):  FIND-S.FLX wird von der Startseite OPAC.HTMgestartet   find.htm  DETAIL.FLX kann von OPAC.HTM aufgerufenwerden,und durch den Link  detail.htm   "Neue Suche" von anderenStellen  Holt sich die Registernamen automatisch  FIND-D.FLX Start aus DETAIL.FLX und ausPAGE.FLX   find.htm     Erg.Menge(wenn mehr als 1 Satz),sonstSatzanzeige, ODER Anzeige eines  Registerabschnitts  PAGE.FLX Ruft sich selber auf mit[Eine Seitehöher] / [Eine Seite weiter]  page.htm     Zeigt einenRegisterabschnitt,ruft FIND-D.FLXauf, wenn  eine Zeile angeklickt wird.  GETREC.FLX Aufruf aus FIND-D.FLX, wenn eineinzelnerSatz gezeigt werden soll  getrec.htm    Startet GETEDIT.FLX,wenngewünscht   GETEDIT.FLX Start ausGETREC.FLX  getedit.htm  Legt einen Satz zum Bearbeiten vor. Mit JavaScript-Beispiel zur  Eingabekontrolle  WRITE.FLX Start aus GETEDIT.FLX  getrec.htm   Schreibt den Datensatzzurück,wahlweiseals neuen Satz oder Korrektur   Weitere Hinweisefür CGI-kundige Leser   Das Programm CGI.EXE kann sowohl POST wie auchGET-Aufträgeentgegennehmen,d.h. man kann Aufträge über Formulare oderüber Linkserzeugen. In einem Auftrag müssen bestimmte Dinge enthalten sein:  VuwD= Namedes Verz., wo a99 laeuft(workingDirectory)  flex= Nameeines FLEXes (derauf dem Arbeitsverzeichnis liegen muß)  Vuxy= ... beliebig viele#u-Variablen; werden angelegt, bevor der FLEXanläuft   optional können folgende Variablenauftreten  (nur beiSchreibaufträgensinnvoll, s. WRITE.FLX):  Vnnn= ... beliebigviele Kategorien  Rnum= ... interne Nummer deszu bearbeitenden Satzes. Dann wird dieserSatzzuerst geladen, bevor der FLEX anläuft und bevor die V-Befehleausgeführtwerden, d.h. die in den anderen Variablen mitgelieferten Kategorienwerdenin den Satz eingeordnet, bevor der eigentliche FLEX beginnt.  Text= ... Inhalteines TEXTAREA-Feldes in einem Eingabeformular; Verwendung inGETEDIT.FLX,siehe dort.  Die Variablen Vuxy werden also dem zu startenden FLEXüberreicht,d.h. CGI.EXE fabriziert einen neuen FLEX (und löscht ihnhinterhersofortwieder) Dieser temporäre FLEX enthält am Anfang dieSetzungder#uxy-Variablen etc. (s.o.) und am Ende deren Löschung. Manverwendedaher nicht den Befehl "end", sondern statt dessen "jump exit", denndieSprungmarke :exit wird ebenfalls erzeugt. D.h. CGI erstellt einen"Sandwich"-FLEX:   Ladendes Satzes (wenn Rnum gegeben)    Setzungender #uxy  Inhalt desText-Feldes  (d.h.Einfügen der darin enth. Kategorien in den Datensatz)   der FLEX aus derCGI-Variablen flex=...   :exit   Loeschungender #u-Variablen   Der Name des temporären FLEX enthält u.a.die Uhrzeit inSekunden,daher ist keine Kollision zweier Aufträge zubefürchten.  CGI sendet diesen Namen an a99 und wartet, bis dieAusgabedateifertigist (d.h. von a99 das Signal zurückkommt, es sei alleserledigt).Keinesder Programme muß also ständig die Platteüberwachen oderdergleichen,sondern die Kommunikation geschieht überWindows-Systemmeldungen.  Als Exportparameter wird per default D-KHTM.cPRbenutzt.  Ansonsten wird der Output des FLEXes an CGI.EXEabegeben und von diesem an den Web-Server zurückgereicht, d.h.man muß in seinem FLEX denkomplettenHTML-Ausgabetext fabrizieren. Das kann abwechselnd durch "write"- und"export"-Befehlepassieren. Bei "write" hat man ja die Möglichkeit, ganzeFertigteile,d.h. Dateien "name.htm", mit wriFname.htm  auszugeben.  Übrigens kann auf dem Rechner, auf dem der Webserver,a99 undCGIlaufen, durchaus ganz normal gearbeitet werden. Z.B. kann man daraufNetscapestarten und den Katalog selber benutzen, indem man dieAdresse   http://127.0.0.1/opac/opac.htm  aufruft.  Tips Sollen einige Nutzer Schreibrechte haben, andere aber nicht: zweiEingangsseitenund zwei Startverzeichnisse anlegen, a99 zweimal starten (auf jedem derVerzeichnisse).In der INI-Datei für die Nutzer ohne Schreibrecht kann man zurSicherheiteintragen:  access=0.  In GETREC.FLX und FIND-D.FLXnimmt mandiekommentierten Zeilen heraus, die den Link "Bearbeiten" erzeugen. Den Zugang zu der Eingangsseite mit Schreibrecht kann manzusätzlichdurch Passwort absichern. Auf einem weiteren Verzeichnis kann man ein drittes a99 starten, umdamitohne Störung durch die Web-Zugriffe selber an der Datenbankarbeitenzu können. Hier sollte dann access=4 in der INI-Datei stehen,damit manalles machen kann.   Hinweis für allegro -kundigeLeser  Die Parameterdatei D-H0.APR besorgteinigeStandardaufgaben wie das Produzieren von Registerauszuegen undSELECT-Listenfür die Registerauswahl. Sie wird über den Befehl"export" benutzt.So wird vermieden, daß man die Anzeigeparameter D-KHTM.APRauch nochmitdiesen Sonderaufgaben befrachten bzw. daß man in vorhandeneAnzeigeparameter,die man für "avanti" schon gemacht hat, die etwaskompliziertenHilfsprozedurenauch noch einbauen muß. Das spart u.U. viel Zeit. Ausnutzen kann man in eigenen FLEXen evtl. zwei weitereNutzervariablen:#urH und #urA. Diese enthalten jeweils den Namen des Host bzw. dieAdresse,von der aus der FLEX gekommen ist.  allegro -Anwender wissen: nichts istunverrückbarfestgeschraubt,(fast) alles lässt sich irgendwie variieren oder dieEntwicklungsabteilungmacht, wenn begründete Vorschläge kommen, eineProgrammverbesserung.Das gilt auch für RuckZuck. SchreibenSie uns!    VersionPHP: Die einfachste Lösung  (braucht den  avanti -Server)  Diese gibt es erst abNovember 2001. Im März 2003 wurde umgestelltauf Unicode . Das Besondere an der SkriptsprachePHP ist, daß HTML-Dateien und Skripte eine Einheit bilden. Perl-undPython-Skriptesind dagegen eigene Programme, die auf einem anderen Verzeichnis liegenmüssenals die HTML-Dateien. Aus diesem Grund kommt diePHP-Standardlösung miteinem Minimum an Dateien aus: nur halb so viele wie bei der a99 -Lösung!Die FLEX-Makros werden dabei nämlich zum integriertenBestandteileinerPHP-Datei, sind also keine eigenen Dateien. Hinweise zum Installieren des avanti -Servers unddes Webserversincl.PHP entnehme man den entsprechenden Dokumentationen !  Empfehlung: Eine ausführlichere Beschreibung kann man im Programm a99abrufen(auch im Demo-Programm ):im Schreibfeld gibt man ein h phpac   Ziel war, die Funktionendes a99 -RuckZuckkomplett zu realisieren,mit einigen wenigen Verbesserungen. Das sollte mit einem Minimum an Dateien erreicht werden. Damit hat man eineüberschaubareBasis, die in jeder Richtung ausgebaut werden kann.  Das PHP-Paketläuft auf Windows,Linux und Solaris, als Webserver wurden Apache und Xitami getestet.  Die nötigenDateien findet manin phpac.exe .Startet man dieses Programm auf einem PC, entstehen dreiUnterverzeichnisse: PHP mit den PHP-Dateien, PARAM mit denParameterdateien, DOKU mit den Beschreibungstexten.   Wohin mit denDateien?  PHP-Dateien --&gt;ein Unterverz. amHTM-Verz. des Webservers (Meistens: "htdocs" bei Apache, "webpages" bei Xitami) APR-Dateien --&gt; DbDir  (umbenennen in .xPR , wenn manmit x.CFGarbeitet)  Startseite ist INDEX.HTModerDETAIL.PHP (einstellbar in av_ini.php). Hat man mehrere Datenbanken anzubinden, kopiert man die Dateien jeweilsaufein eigenes Unterverzeichnis und modifiziert zunächst dieDateiAV_INI.PHP,evt. auch noch andere (vor allem INDEX.HTM, GETREC.PHP und WRITE.PHP).Diese ist sozusagen dieINI-Datei für den Zugang zu einer Datenbank. In AV_INI.PHP liegen die Variablen mit Anpassungsbedarf (alleskommentiert): Server-IP, Datenbankname, Username, Passwort und ein paar wenigeweitereAngaben, wie $Startpage, $Reg1name .... Außerdem zwei wichtige Grundfunktionen: dasÜbergeben einesJobsund das Ausgeben der Ergebnisse.  PHP-Dateien (die rot geschriebenen mußman anpassen)   AV_INI.PHP Einstellungen für die betreffendeDatenbank  INDEX.HTM Startseite schlicht (Angebot: Link zuDETAIL.PHP), nach Eingabe startet:   DETAIL.PHP   Startseite fuer Detailsuche,ruft auf:  FIND.PHP      Ausführen einerDetailsuche,startet PAGE oder RSET:  PAGE.PHP        AnzeigeeinesRegisterabschnitts, startet:  RSET.PHP        AnzeigeeinerErgebnismenge, startet:  GREC.PHP          Anzeigen eines Datensatzes, startet:  EDREC.PHP Bereitstellen eines Satzes zum Editieren, startet:  WRITE.PHP Speichern des bearbeiteten Satzes  AV_PAGE.PHP   Kernfunktion fürPAGE.PHP  AV_RSET.PHP   ... fuer RSET.PHP  AV_GREC.PHP   ... fuer GREC.PHP ENTRANCE.HTM  Einloggen für die Bearbeitungsfunktion.Passwort wirdals Cookie aufbewahrt.   Die Dateien mit demPräfix AV_sind unselbständig, sie werdenvon anderen Dateien nachgeladen,  Hinsichtlich derSchreibfunktionenmuss man auch in GREC.PHP und WRITE.PHPeingreifen. Die Stellen sind markiert durch xxx. Es geht um dieKategorien,die in eigenen Edit-Feldern angeboten werden sollen.  Parameterdateien  Kopieren auf DbDir oderProgDir (woavanti gestartet wird):  d-html.apr    Datensatzanzeigefür HTML, angelehnt an D-1.APR  muss für andere CFG eigens erstellt werden!  Dafuer als Hilfe, sozusagen als Strickmuster:  d-simpel.apr   Geeignet, wenn es keineSatzverknüpfungengibt  d-kompl.apr    ... wenn es welche gibt   Diese zwei machen eine Anzeige mit Tabellenstruktur,  die man leicht ausbauen kann (NEU)  h-php.apr     Hilfsfunktionen,z.B. Aufbereitung Registerabschnitt  universell fuer jede CFG verwendbar  h-edit.apr     Satz bereitstellenzumEditieren  geringe Anpassungen nötig (kommentiert)  d-utf8.apt         Codiertabelle ASCII -&gt; ANSI  o.apt         Codiertabelle ASCII -&gt; ANSI ucodes.txt      Listevon u-Befehlenfür Unicode .Anzuhängenandie Indexparameter.     ... und auf ProgDir\HELP zumBetrachten in a99:  phpac.rtf      DokumentationderGrundstruktur von PHP-Dateien   Einbindung ineigene Prozeduren  Dazu eignensich vor allem dreiDateien:  page.php Anzeige einesRegisterabschnitts mitBlättern   z.B.:  page.php?urG=PER&amp;urS=shakesp  Default:  urG=|1 und urS=a, also Stelle a im Register 1  rset.php Bildung und Anzeige einerErgebnismengemit Blättern  z.B.:  rset.php?ufC=PER+shakesp%3F  grec.php Holen und Zeigen eines Satzes  z.B.:  grec.php?urN=12345   // Zeige SatzNr. 12345  oder   grec.php?urG=NUM&amp;urS=12345678  Die eigentlichenFunktionen sindausgelagert in die Dateien av_page.php,av_rset.php und av_grec.php Dadurch bleibt die Anwendung übersichtlich. Für die eigene Gestaltung muss man sich nur die oben genanntendrei Dateienvornehmen, die av-Dateien sind darin eingebunden mit "include".  Die wichtigenVariablennamenstehen in Beziehung zu internen Variablen(#u-Variable) von "avanti" und sind daher immer von der Form uxYmiteinem Kleinbuchstaben x und einem Grossbuchstaben Y (um moeglichstnicht inKonflikt zu geraten mit internen Variablen z.B. von Anzeigeparametern).  Die wichtigsten sind:  urG  Registerbezeichnung, z.B. PER  urS  Register-Startpunkt, z.B.  shakesp   ufC   find command,z.B.  PER+shakesp%3F   urN   record number(interne Satznummer)  urO   Ordnungsmodus,Default a0 (in RSET.PHP)   Wie allgemeinüblich, müssenAufruf-Variablen, vor allem urS,codiert werden, also Leerzeichen durch + ersetzt, ? durch %3F usw.       [i] zuletzt aktualisiert:         18.04.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  .Stil11 {color: #000000}  allegro Export-Parameter                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Dokumentationen   Veröffentlichungen   allegro news bis 2002   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig             allegro Export-Parameter / Grundlagen und Grundregeln         Hinweis:  Die Hyperlinks in diesem Dokument funktionieren nur,wenn man die Datei im JanaS-Browser öffnet. Falls Sie gerade einen anderen Browser benutzen, geben Sie in a99 diesen Befehl:   janas expar.htm        Wenn das nicht klappt, kopiert man sie zuerst (über Menü "Datei / Speichern als...") auf c:\allegro\html\expar.htm .  Hierwird versucht, eine Einfachst-Einführung der wichtigstenGrundgedanken zu geben. Um welche Dateien  es geht, steht ganz unten.  DasAusgeben von Daten, auch Exportieren genannt, gehört beijedem Datenbanksystem zu den wichtigsten Aufgaben. Denn keineDatenbank ist eine in sich abgeschlossene Welt, jede muß immermal Daten herausrücken können. allegro hatdafür eine eigene Sprache, die Exportsprache , mit der mandas Ausgeben von Daten in allen Einzelheiten so programmieren kann,wie es in einer konkreten Situation gebraucht wird. Wenn man Daten überdas Exportmenü des Windows-Programms ausgeben läßt (oder mit F4 beimDOS-Programm), wird dafür in Wirklichkeit fast immer eine Parameterdateigebraucht. Hier wollen wir zeigen, was das eigentlich ist.   ImPrinzip steht alles im Handbuchkapitel10 , das mit einerausführlichen Erklärung des Konzepts beginnt. (Tip: in a99 eingeben: h ac10)Mancher Leserfindet es trotzdem unverdaulich - wir wissen das. Deshalb dieserText, der das Kapitel zwar nicht ersetzt, aber hoffentlich besser lesbar macht.   Hinweis: Seit es die FLEX-Makrosprache  gibt, kann man in a99/alcarta und avanti auch mit dem FLEX-Befehl write ,also ohne Exportsprache, Daten ausgeben. Aber man kann nicht alles damit machen, z.B. die Titelanzeige kann man damit nicht gestalten:dafür braucht man eine Parameterdatei, die sog."Anzeigeparameter". Im Normalfall ist das die mitgelieferteDatei D-WRTF.APR .   ZurSache nun. Gespeicherte allegro -Daten sehen immer so aus: ( Wichtig fürNicht-allegro-Kenner : Datenfelder werden nicht mit Namenbenannt, sondern mit Nummern)          # 00 875208 #20 All's well that ends well #40 Shakespeare, William #41 Fraser, Russell #74 Cambridge #75 Cambridge Univ. Pr. #76 1985 #77 XIII, 154 S. #85 ¬The¬ New Cambridge Shakespeare #87 0-521-22150-1 #90 Sh-2692        Diegespeicherten Datenelemente oder Felder beginnen, wieman sieht,  mit # und einer Nummer: Die erlaubten Nummern undihre Bedeutung stehen in einer Konfigurationsdatei; beim Standardmodellist das die Datei $ A .CFG, man sprichtauch von der A -Konfiguration oder vom A -Schema (--&gt; Dokumentation ). DerBuchstabe A tritt dann auch in den Namenserweiterungen aller Export- undImport-Parameterdateien auf - wenn man einen Namen wie D-WRTF. A PR oder CAT. A PIsieht, weiß man: das sind Parameterdateien für das A -Schema. (Mehr dazu weiter unten.) WennSie wollen, können Sie jetzt gleich mal reinschauen  inIhre CFG. Die erlaubten Nummern können Sie aber auch mit Alt+y sehen (im Programm a99), dann erscheinen sie links im Auswahlfeld. ( Anm.: Das$ im Namen $A.CFG geht zurück auf den Versionswechsel von V12 zuV13, siehe Handbuch Anh.A.5. Wenn es $A.CFG und A.CFG beide gibt,nehmen die Programme die $A.CFG, d.h. die A.CFG hat dann keineWirkung. (Trotzdem: alte CFGs, also V12 oder früher,funktionieren auch noch mit V25.)  Wenn man oft Daten eingibt,sind einem die Nummern ja schnell geläufig. Wenn Daten aber fürEndbenutzer angezeigt werden müssen oder wenn man irgendwelcheListen zu erstellen hat oder Ausgabedateien, dann soll dabei keine numerierten Daten erscheinen, sondern z.B. eine Anzeige wiediese: (vergleichen Sie das mit dem, was oben steht)        Signatur: 2650-2692  Shakespeare, William:  All's well that ends well / William Shakespeare; Russell Fraser [Hrsg.]. Cambridge : Cambridge Univ. Pr., 1985. - XIII, 154 S.  (The New Cambridge Shakespeare) ISBN 0-521-22150-1        Alsoetwas gänzlich anderes! Wiekann man das erreichen? Mit einer Export-Parameterdatei . Das ist eine schlichte ASCII-Textdatei,und darin muß die Vorschrift für das Programm stehen, wases mit den Datenfeldern machen soll - damit herauskommt, was manwirklich sehen will. Damit das herauskommt, wasman hier sieht, müßte man eine recht komplizierteParameterdatei schreiben. Zum Glück gibt es die schon: sie heißt D-WRTF.APR und wird von a99 und alcarta verwendet, um die Datenanzuzeigen. Die Datei D-WRTF.APR wäre aber als Einstieg, alserstes Beispiel, viel zu lang und zu schwierig.  Siewollen jetzt sicher wissen: wie sieht die einfachste möglicheParameterdatei aus? Was muß da drinstehen, damit etwasSinnvolles passiert? So sieht sie aus (nur drei Zeichen - noch kleiner geht'swirklichnicht!) :       #20         Dadurchwird dem Programm gesagt : Gibden Inhalt von Feld #20 aus .  DasErgebnis wäre (bei dem oben gezeigten Satz):       All's well that ends well         Mehrnicht! Die Grundidee der Exportparameter ist also sehreinfach, wir nennen sie mal Grundregel 0 :         Grundregel 0 :    EineParameterdatei enthält die Liste der Felder, deren Inhalte exportiertwerden sollen.      Minimum ist ein einziges Feld, sieheoben.Sollennur Verfasser und Titel herauskommen, sähe die Liste so aus:        #40  #20        Unddas hier käme heraus:       Shakespeare, WilliamAll's well thatends well         Dennman hat ja nicht gesagt, was zwischen den beiden Feldinhaltenstehen soll - der Computer kann sich das nicht selber ausdenken, alsoschreibt er nichts dazwischen. Man muß zwar die Feldnummernals Liste untereinander schreiben, das ist die Grundregel, aberdadurchwerden nicht automatisch zwei Ausgabezeilen gemacht. Das könnteman so veranlassen:        #40 #20 C         DasC wirkt hier als Steuerzeichen und löst eine neue Zeile aus –und zwar vor der #20 und nur ,wenn diese auch belegt ist! Dann siehtdas Ergebnis so aus:       Shakespeare, William All's well that ends well        Damit haben wir zweieinleuchtende Grundregeln:     Nummern der gewünschten Felderuntereinander schreiben     EinC hinter die Feldnummer schreiben, wenn deren Inhalt auf eine neueZeile soll     unddamit kann man schon ziemlich weit kommen: man kann alle gewünschtenDatenfelder in jeder gewünschten Reihenfolge ausgebenlassen. Nochmal der Hinweis: wenn das betreffende Feld (oben die#20) nicht belegt ist, wird keine neue Zeile gemacht, d.h. die Anweisung #20 C wird ganz ignoriert.   Mit diesemWissen kann man auch schon eine kompliziertere Parameterdateieinigermaßen verstehen: man findet darin nämlich immereine Liste von Feldnummern, die jeweils auf eigener Zeile stehen undmit dem Zeichen # beginnen. So sieht immer der Hauptteil einer Parameterdateiaus.  Dienächste Grundregel, eine sehr wichtige und sehr einfache, ist diese:    Zeilen,die mit Leerzeichen anfangen, werden nicht verarbeitet.     Esist damit ganz leicht , Kommentare ineine Parameterdatei zu schreiben: nur ein Leerzeichen an den Anfangder Zeile, oder zwei, und schon kümmert das Programm sich nichtdarum. Sehr leicht kann man also auch Zeilen unwirksam machen, dieman gerade nicht braucht, aber später vielleicht wieder. Schauenwir uns dieses Beispiel an:       #20 #40 C #76 C        Manerhält als Ausgabe:        All's well that ends well 1985        denn die Zeile  #40 C  wirdnicht verarbeitet, weil sie mit einem Leerzeichen beginnt. Undnoch eine wichtige, etwas überraschende Regel:    Stehenin einer Zeile zwei oder mehr Leerzeichen hintereinander, wird der Restder Zeile nicht verarbeitet.      Dadurchkann man ganz leicht Kommentare in eine Befehlszeile hineinschreiben,nicht nur zwischen die Befehlszeilen. Wenn man also schriebe:       #20   Das ist der Titel #40 C  Verfasser #76 C   Erscheinungsjahr        dannkäme dasselbe heraus wie oben, denn vor den Bezeichnungen "Dasist der Titel" usw. steht jeweils mehr als einLeerzeichen. An diese Regel muß man sich etwas gewöhnen,zugegeben: manchmal macht man aus Versehen zwei Leerzeichen undwundert sich, daß nicht das passiert, was man wollte. Aberabschwächend kommt hinzu: Zwischen Anführungszeichengilt diese Regel nicht . Warum? Das sehen wir gleich:  Nun weiter. Man will oft nicht nur dieFeldinhalte exportieren, sondern noch gewisse Zusätze, z.B. soetwas:       Titel : All's well that ends well Verf. : Shakespeare, William Jahr  : 1985        Dannmüßte man schreiben:       #20 p"Titel : " #40 C p"Verf. : " #76 C p"Jahr  : "        Dabeibedeutet z.B. die zweite Zeile: Nimm den Inhalt von #40, beginne aberzuerst eine neue Zeile und setze  Verf.:  anden Anfang.  Daskleine p ist ein Manipulationsbefehl ,davon gibt es noch viele andere. Das p bedeutet "prefix" undbewirkt, daß eine Zeichenfolge VOR den Feldttext gesetzt wird,in diesem Fall eben " Verf.: " DieZeichenfolge muß hinter dem p innerhalb "..." stehen.Genauso gibt es ein "postfix", um etwas HINTER denFeldinhalt zu schreiben: dazu dient das große P. Wenn Feld#40 nicht belegt ist, kommt statt dessen keine Leerzeile und auch " Verf. : " erscheintnicht. Also: Manipulationsbefehle werden nur ausgeführt, wenndas betreffende Feld auch vorhanden ist. Sonst wird die gesamteZeilenicht ausgeführt.  Nebenbei: Hinter "Jahr" stehen zwei Leerzeichen! Das macht abernichts, denn zwischen Anführungszeichen hat das keine Wirkung,siehe oben. Jetzt wird auch klar, warum in den Parametern jedes Feld auf eigenerZeile angegeben werden muß. Das liegt an dieser Regel:    Auf jedes Feldkönnen beliebig viele Manipulationsbefehle angewendet werden, die denFeldtext verändern, bevor er ausgegeben wird.  Die Befehle müssen neben der Feldnummer alle in derselben Zeilestehen und werden hintereinander von links nach rechts ausgeführt. Wenndas Feld nicht belegt ist, werden die Befehle nicht ausgeführt, es kommt sofort dienächste Zeile dran.    Achtung: Zwischenzwei Manipulationsbefehlen, das ergibt sich aus Regel 4, muß genau ein Leerzeichen stehen! Sind es zwei oder mehr, entfälltder Rest! Daran muß man sich gewöhnen, deshalb wird's hiernochmal gesagt.  Jetzt erkennt man, daß komplizierteraussehende Befehle, wie z.B. dieser hier  #85C b" ; " p"Bandnummer: " P"."   soschlimm gar nicht sind - man muß nur die Bedeutung derManipulationsbefehle kennen. Und die kann man nachschlagen:Systemhandbuch, Kap. 10.2.6.3 .(S. 194ff, Tabelle der M-Befehle)  Jetzteine kleine Aufgabe! Was kommt bei unserem Beispiel-Datensatz heraus,wenn in den Parametern steht:       #40 b", " #40 e", " p" " #20 p": " P"."        Richtig,das Ergebnis sieht so aus (Vor- und Nachname umgedreht):       William Shakespeare: All's well thatends well.        MitKommentaren wird die Sache klarer:       #40 b", "       Inhalt von #40, aber nur den Teil hinter ", " ausgeben #40 e", " p " "  Nun den Teil vor ", " nehmen, mit einem Leerz. davor #20 p": " P"."   Den Titel mit ":" davor anhängen, Punkt dahinter        Die nächste Grundregelist auch wieder überraschend:     Statt mit # kanneine Befehlszeile auch mit ! anfangen. Der Unterschied zwischenbeiden ist, daß zwei verschiedene Tabellen für die Umcodierung derZeichen existieren können. Diese Tabellen werden definiert miteigenen Befehlszeilen, die mit p anfangen für die # -Zeilen bzw. mit q fürdie ! -Zeilen.     Mitden p- und q-Befehlen kann man jedem einzelnen Zeichen einen anderenCode zuordnen oder sogar eine ganze Zeichenfolge, die dann bei derAusgabe automatisch statt des Zeichens ausgegeben wird. Das sieht z.B. so aus:  p ä"ae"  Jedesä wird dann automatisch durch ae ersetzt, aber nur in den mit #beginnenden Zeilen. Wenn es in den mit ! beginnenden Zeilen auch sosein soll, aber AE statt ae, muß man noch eine Zeile ergänzen:  q ä"AE"  Beschriebenist das im Kapitel 10.2.4.1 .  Damitman nicht lange Listen solcher Befehle jedesmal in eineParameterdatei mit hineinschreiben muß, kann man solche Listenauch in externen Dateien unterbringen und diese Dateien mithinzuladen lassen. Dafür gibt es den Befehl t . Dawäre z.B. die Datei ad-utf.apt ,sie enthält die Tabelle der Umcodierungen vom internenASCII-Code in den Unicode-Standard  UTF8.Wenn man in seine Exportparameter hineinschreibt:  tad-tf8  dannwird die Tabelle ad-utf.apt hinzugeladen und dadurch aktiviert. Eineandere Standardtabelle ist ad-aw.apt :sie wandelt den internen ASCII-Code in den Windows-Code um. MinimalesBeispiel:       #20 #40 C  tad-aw       Titelund Verfasser werden dann in Windows-Codierung ausgegeben. Wo mußso ein t-Befehl stehen? Das ist egal, denn er hat nichts mit einembestimmten Feld zu tun – es sei denn, es stehen in der hinzuzunehmendenDatei nicht nurCodierungsbefehle, sondern auch Exportzeilen, die mit # oder !beginnen. Es gilt Grundregel 7:     EineParameterdatei wird einmal geladen und beliebig oft ausgeführt.   Nur die eigentlichen Exportbefehle, die mit #oder ! beginnenden Zeilen, müssen deshalb in der erwünschtenReihenfolge stehen, alle anderen Befehle können an beliebigenStellen stehen.      FürProgrammierer: Nur die Zeilen mit # und ! werden wie ein Programmabgearbeitet, von oben nach unten also (es können aber Sprüngeeingebaut werden), die anderen Zeilen werden nur beim Einlesen derParameter verarbeitet (siehe Regel 7), um bestimmte interneEinstellungen vorzunehmen (d.h. Variablen zu belegen). Das Einlesenpassiert nach Regel 7 nur einmal (und nicht immer wieder für jedenDatensatz), anschließend werden dann nur die Zeilen mit # und !für jeden zu exportierenden Satz abgearbeitet, die anderenZeilen nicht. Das hat zur Folge: wenn ein Basisparameterzweimal oder öfter angegeben ist, z.B. der Wert  zl=... , dannwird nur der letzte wirksam. Im Handbuch finden Sie genaueBeschreibungen, wie ein Datensatz als Ganzes beim Export abgearbeitetwird (Kap. 10.2.6), und dann besonders, wie eine einzelne Befehlszeileausgeführt wird (10.2.6.1). Wenn's mal komplizierter wird, können dieseBeschreibungen sehr helfen...  Jetztkommt die vorletzte Grundregel. Es gibt eine Anzahl von Basisparametern .Diese sind dafür da, bestimmte Werte zu setzen oder Schaltereinzustellen, die das Verhalten des Exports beeinflussen. Da kommteiniges zusammen, aber meistens muß man nur wenige dieserBefehle geben. Denn:    Fürjeden Basisparameter gibt es einen Standardwert, der automatischgenommen wird. Diese Default-Werte sind immer in sinnvoller Weisegewählt, damit man sie nicht jedesmal alle selber setzen muß. [Handbuch Kap. 10.1-5: die Basisparametern bilden 5 Gruppenund haben 2-buchstabige Namen, wobei jede Gruppe einen bestimmtenAnfangsbuchstaben hat.]     Beispiel: Oft ist die Ausgabe eine Textdatei. Dabei macht das Programm danneinen automatischen Zeilenumbruch. Es muß dazu wissen, wievieleZeichen maximal in eine Zeile sollen. Als Standard nimmt es 56 an -das war früher mal bei Katalogkarten sinnvoll. Wenn das Programmkeinen Zeilenumbruch selber machen soll, weil das die nachfolgendeSoftware übernimmt, etwa ein Textprogramm, dann setztman  zl=0  Esist nötig, an den Stellen, wo unbedingt eine neue Zeile beginnensoll, die dafür nötigen Codes selber einzubauen, z.B. dieCodes 13 10 für eine TXT-Ausgabe, oder ""für eine HTML-Ausgabe. Auch dafür gibt es einenBasisparameter:  ze=""  DieserBefehl würde immer dann die Zeichenfolge    ausgeben,wenn der Manipulationsbefehl  C  vorkommt.  Grundregel 9 ist vielleicht auch unerwartet:    Indexierungist auch Export! Die Index-Einträge, die aus einem Datensatzhervorgehen, werden ebenfalls mithilfe der Exportsprache erzeugt.    Beispiel: Die Parameterdatei CAT.API ,die Sie wahrscheinlich verwenden, ist ein besonders großes undkompliziertes Exemplar einer Index-Parameterdatei. Ein viel einfacheresBeispiel ist die Prototyp-Datei INDX.API ,in der alle Elemente kommentiert sind. Man kann sie als Musterverwenden, wenn man eine neue Datenbankstruktur entwickelt. Denn dazugehört es, daß man neue Indexparameter machen muß. Ebenso neueAnzeigeparameter! Leichter durchschau- und änderbar, weil moderner undbesser strukturiert, ist auch BANK.NPI, die Parameterdatei für dasNeutralformat N.CFG. Typisch ist beim Indexieren, daß aus einem Datensatz eine Vielzahl vonIndexeinträgen hervorgeht: Namen, Titelwörter, Titelanfänge, ... Jederdavon wird als ein eigener Ausgabesatz betrachtet! Besonders wichtigsinddafür die sog. ak -Befehle. Sielegen fest, aus welchen Datenfeldern Registereinträge zu machen sind.So ein Befehl sieht so aus:  ak=20" "+E und das bedeutet: Nimm das Feld #20, zerlege es an jedem Leerzeichen(d.h. Zerlegung in Wörter!) und gehe mit jedem so entstehenden Wort zuder Sprungmarke #-E. Erst dort entsteht dann der Indexeintrag! Beidieser Sprungmarke kommt das Wort in derVariablen #u1 an (das ist grundsätzlich so bei einem ak-Befehl), undbei der Sprungmarke könnte dann z.B. stehen:  #-E  !u1 p"|3"  #+# Das bedeutet: Codiere das Wort (welches in dem Moment in der Variablen#u1 steckt) mithilfe der q-Befehle um und ordne das Ergebnis dann insRegister 3 ein. Wenn z.B.  in #u1 gerade das Wort "Größe" steht,weil es im Titel vorkommt, wird durch die Umcodierung daraus "groesse",und dies kommt ins Register. Für jedes einzelne Titelwort wird dieserVorgang gemacht, genau das ist die Aufgabe des ak-Befehls.  Historische Anmerkung: ak-Befehle wurden zuerst für den Kartendruck erfunden. Dabei sollten zueinem Datensatz mehrere Karten mit unterschiedlichen Überschriften("Köpfen") herauskommen, zum Einordnen an verschiedenen Stellen desAlphabets. Man brauchte also ein Mittel, um diejenigen Felder zubestimmen, aus denen Kartenköpfe hervorgehen sollten: ak bedeutetedabei nichts anderes als "Aufnahme-Kopf". Stellt man sich dieIndexparameter als Kartenüberschriften ohne Karten vor, wird dieübertragene Bedeutung sofort klar.   Elementeohne Wenn und Aber   "Hmm,"fragen Sie jetzt: "Wenn aber Verf.:  herauskommensoll, und zwar auch dann, wenn #40 nicht belegt ist? Kann man keineTextelemente zwischen den Feldtexten ausgeben, und zwar immer ,auch wenn die Felder nicht belegt sind? Die Manipulationsbefehle, sowurde ja gesagt, wirken nur dann, wenn die damit manipulierten Felderauch belegt sind!" Dafür gibt es den Text-Ausgabebefehl  #t{ ... }  ,wobei zwischen { ... } eine Steuerzeichenkette  stehenmuß: die kann aus beliebigem Text bestehen einschließlichSteuerzeichen, normaler Text immer zwischen "..." oder'...'. Hier ein Beispiel  #t{C "Schlagwörter:" C 9 }  Damitwird erreicht, daß an der betreffenden Stelle zuerst eine neueZeile begonnen wird, dann " Schlagwörter: "hingeschrieben und dann nochmals eine neue Zeile, dann der Code 9 (=TAB-Zeichen). Man muß solche Befehle natürlich an denrichtigen Stellen einfügen zwischen die normalen Ausgabezeilen,also zwischen die Zeilen mit # und !, damit das Gewünschte ander richtigen Stelle herauskommt. AberVorsicht: Was in solchenZeilen steht, das wird nicht umcodiert (anders als die Datenfelder),sondern unverändert soausgegeben, wie es dasteht. Bei Umlauten und anderen Sonderzeichenmuß man darauf achten und ggfls. den richtigen Editor nehmen,um die Parameterdatei zu bearbeiten.  -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-   Jetzthaben Sie die Grundlagen schon verstanden! Damit wird es Ihnen nunnicht schwerfallen, den Anfangsteil  desKapitels 10 zu lesen. Denn es gibt noch eine Menge andere Befehle,die alle ihren Sinn haben. Das Exportwesen ist ein weites Feld, daherkann es nicht simpel sein. Dazu gehört nicht zuletzt auch dieIndexierung, wie wir nun gesehen haben. Denn auch die Registereinträgesind ja Dinge, dieaus den Datensätzen heraus durch irgendwelche Umformungenentstehen, und diese Umformungen sind es, die man mit derExportsprache machen kann. Exportparameter sind sehr kompakt unddeshalb wenig intuitiv. Sie arbeiten dafür aber extrem schnell,und das ist besonders für das Indexieren sehr wichtig. Mit XML und XSLTz.B.wären solche Leistungen nicht annähernd erreichbar.   Beispielezum Ausprobieren Alserstes etwas größeres Beispiel empfehlen wir eine Datei d-simp.apr ,die für eine einfache, katalogkartenähnliche Anzeigegeeignet ist. Mit den Kenntnissen aus dieser Einführung und dendarinstehenden Kommentaren werden Sie das meiste oder alles verstehenund dann sogar weiter ausbauen können! Sie können dieseParameter auf Ihre Platte kopieren und dann sogar sofortaktivieren ,um zu sehen, was sie produzieren. (Um manuell zu aktivieren, imSchreibfeld eingeben: x disp p d-simp ) Als zweites Beispiel kommt dieProtoyp-Datei für Bildschirmanzeige D-0.APR  inFrage. Auch diese kann man sofortausprobieren .  Rezept: Wenn man irgendeine Par ameterdatei fürdie Anzeige ausprobieren will, dann im Menü „Ansicht“mit dem Punkt „Anzeigeparameter wechseln“. Man wähltdie gewünschte Datei dann aus der erscheinenden Liste aus, wobeiman zwischen den Verzeichnissen auch umschalten kann: dieParameterdatei könnte im eigenen Datenverzeichnis, aber auch imProgrammverzeichnis liegen!  Andere Methode: um die Dateixyz.apr auszuprobieren, dieses eingeben: x disp p xyz . Und dannausgewählte Sätze anzeigen lassen, damit man die Wirkungsieht. Aber nicht bei jeder .APR-Datei kommt in der Anzeige etwasGescheites heraus! (Dieselbe Testmethode geht beim DOS-PRESTO mit F2 F2und dann Auswahl der Datei: + davorsetzen und Enter.)   Export ausprobieren Um nun wirklich Daten in eine Datei zu exportieren, müssen dieExportparameter nicht für die Anzeige, sondern für den Export geladenwerden. Das geschieht über das Menü "Export / Andere Exportparameter"oder per FLEX. Hier das Muster, wie man einen Export per FLEXvorbereitet und durchführt: (die roten Namen ersetzt man durch die dereigenen Dateien)   xport p d-simp // Exportparameter d-simp.apr laden  open x ausgabe.txt //Ausgabe soll in die Datei  ausgabe.txt  dowset              // Ergebnismenge ausgeben  closex              // Datei wieder schließen   Fürdas vertiefende Studium Im Handbuch, Kap. 10.4, werden 10Prototypen von Exportparameterdateien erwähnt, alle kommentiert, fürunterschiedliche Aufgaben.  Hinweis: Viele Anwender arbeiten nur mit den Komfortmethoden des Exportmenüs. Fast alle diese Methoden benutzen irgendwelcheParameterdateien, ohne daß der Anwender es wissen muß,denn FLEX kümmert sich darum, sie im rechten Moment einzusetzen!  -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-   Nochdrei drängende Fragen werden Ihnen jetzt auf der Zunge liegen:   Womüssen sich die Parameterdateien befinden?  Antwort: Aufdem Datenverzeichnis (wo die Datenbank liegt) oder auf demProgrammverzeichnis (wo a99.exe und die anderen Programme liegen). Schlaumeier fragen sofort: Wenn es aber zwei verschiedene gibtmit demselben Namen, die eine hier und die andere dort? Dann wirdimmer die genommen, die auf dem Daten verzeichnis liegt. Vorteil: Parameter, die für mehrere Datenbanken gelten,brauchen nur einmal zu existieren, aber es kann immer noch fürdie eine oder andere Datenbank eine geänderte Version geben, unddie muß dann auch bei der betr. Datenbank liegen - ist dasnicht logisch?  Empfehlung: Wenn Sie eine der mitgeliefertenParameterdateien für Ihre Zwecke verändern (z.B. dieD-WRTF.APR), dann kopieren Sie die veränderte auf IhrDatenverzeichnis. So kann es bei einem Update nicht passieren, daßIhre Privatversion wieder durch eine neue Standardversionüberschrieben wird.   Wiekann man sie bearbeiten? Da es sich um ASCII-Dateien handelt,eignet sich Word nicht dafür. Am besten ist dermitgelieferte Texteditor X.EXE. Der ist sehr leicht zu benutzen,keinen anderen kann man schneller lernen, die wichtigsten Handgriffelernt man in zweiMinuten !Er läuft unter allen Windows-Versionen, ist allerdings einDOS-Programm, und wer gegen so etwas eine Aversion hat, kann WinVi  nehmen,ein sehr gutes Freeware-Programm. Eine Alternative zu X ist auch derMicrosoft-Editor edit . Alternative im Windows-System: Man bearbeitet direkt imAnzeigefenster von a99 ! GebenSie z.B. ein: hi-1.apr . Dann sehen Sie die Datei i-1.apr ,können sie bearbeiten und mit Alt+s  wieder speichern. AnderesBeispiel: h d-w0.apr , die oben erwähnte einfache Anzeigeparameterdatei. Ändern,speichern(am besten unter anderem Namen), ausprobieren über Menü "Ansicht /Anzeigeparameter wechseln".   ...und wie müssen sie heißen?  Die Namen darf man sichaussuchen, die Namenserweiterung (Dateityp) jedoch nicht. Sehr wichtig:  Kurze Namen: höchstens 8 Zeichen, nurKleinbuchstaben, keine Leerzeichen, Umlaute oder andereSonderzeichen (Längere Namen funktionieren nur mit den Windows-Programmen.) Der (verpflichtende) Dateityp (Namenserweiterung) ergibt sich aus zweiDingen:     Die verwendete Konfigurationsdatei .Normalerweise ist das  $ A .CFG oder A .CFG . Dererste Buchstabe des Typs muß dann  A  sein.Wenn die Datenbank mit einer  N .CFG  arbeitet,muß es  N  sein,usw.    Der Zweck der Parameter. Dagibt es drei Möglichkeiten:    PR  EchterExport . Der Typ ist dann also  . A PR  Beispiele:  D-1. A PR : DieStandard-Anzeigeparameter für das DOS-ProgrammPRESTO I-1. A PR : Damitkann man Daten im internen Format ausgeben lassen. Es entsteht einesog. Grunddatei mit den richtigen Steuerzeichen. Man kann sieanschließend in eine andere Datenbank einspeisen (mit  update.exe  (s.Kap.9) oder  index.exe  (s.Kap.7)) D-WRTF. A PR : DieStandard-Anzeigeparameter für das Windows-Programm a99   PT Nachlade-Tabelle ,d.h. eine Datei, die mit t-Befehl in andere Parameter eingebundenwird. Der Typ ist dann  .APT  Beispiele:  I. A PT  : Tabellefür die Umcodierung von Zeichen für das Indexieren(Einbindung in CAT.API) SWL1. A PT  : Tabellemit Stoppwörtern für das Indexieren (Einbindung inCAT.API)  D. A PT  : Tabellefür die Umcodierung DOS -&gt; Windows (Einbindung z.B. inD-WRTF.APR)  PI I ndex-Parameter ,d.h. die Vorschriften zur Bildung der Registereinträge. Der Typdafür ist .API  Beispiel:  CAT. A PI  : Indexparameterfür die Register des Standardsystems  Tip: Geben Sie F7 (in PRESTO oder a99), dann sehen Sie, was cat.api  macht:Diese Parameter werden dann ausgeführt und man sieht alsErgebnis die Registereinträge, die zum aktuellen Datensatzgehören.  Achtung: Die Dateinamen sind hier mit Großbuchstaben geschrieben. BeiDOS und Windows ist das egal!  Bei Unix und Linux ist es nichtegal. Da ist es zwingend notwendig ,sämtliche Namen, die mitallegro zu tun haben, immer und in jeder Situation vollständig klein zu schreiben. Nur so vermeidet man zeitraubenden Ärgermit nicht gefundenen Dateien... Vorsicht: Wenn man Dateien mitFTP oder Samba zwischen Win, Linux, Novell oder UNIX kopiert oder inArchivdateien packt, kann espassieren, daß die Namen mit Großbuchstaben ankommen oderabgeschnitten werden; dann muß man sie erst wieder korrekt umbenennen. Der eigentlicheName, der Teil vor dem Punkt also, ist frei. Es wird empfohlen, sichdafür an ein paar Konventionen zu halten, die im Handbuch, Kap.10.0  beschrieben sind.Damit behält man leichter den Überblick. Wir achten darauf, alleStandarddateien in Kleinbuchstaben auszuliefern sowie nur Namen mitmaximal 8 Zeichen zu verwenden.      [i] zuletzt aktualisiert:         14.10.2014 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
    MAB1 + MAB2 Dokumentation     MAB1 + MAB2    MAB-KurzübersichtenDer Deutschen Bibliothek    Alle Tags sind hier in einer fortlaufenden Folge zu finden, obwohl MABaus fünf getrennten Formaten besteht. In der Spalte "Typ" steht, zuwelchem Format ein Feld gehört, wenn es nicht zum Format "MAB-Titel"gehört. Das sind im einzelnen  S = Schlagwortnormdatei, G = GemeinsameKörperschaftsnamensdatei, P = Personennamendatei, und L = Lokaldaten. Ein * wurde hinter die nur in MAB1 definierten Tags gesetzt, in derKonkordanz findet man dann, ob es in MAB2 noch existiert und wie es dortheißt. Die Indikatoren sind in dieser Tabelle nicht alle zu sehen,sondern nur dann, wenn die betreffenden MAB-Felder in anderen Formateneigene Felder haben. Die Konkordanz zu jedem Feld enthält auch alleIndikatoren - klicken Sie auf die Kategorienummer, dann kommt die Konkordanz. Zuerst kommen die Positionen des festen Vorspanns, der "Satzkennung". Dieser hat bei MAB2 im Gegensatz zu MAB1 (192 Byte) nur noch 24 Byte.Etliche Codes wurden verlagert in die Kategorien 030 etc. Eine inhaltlicheBedeutung für den Datensatz haben nur noch die Positionen 5 und 23!    Tag  Typ  Inhalt  Englisch   '  5  Satzstatus Record status  ' 23  Satztyp Record type  ' 23*  Dateikennzeichen Record type  ' 33- 38*-&gt;004  Erstellungsdatum der Austauscheinheit Date entered on file  ' 39- 49*  IdentNummer des Datensatzes   ' 59*-&gt;030' 2  Zeichenvorrat Character Sets Present  ' 60*  Zeichencode   ' 61*  Satzinhalt / Datenart Kind of record  ' 62*  Satztyp / Haupt-, Unter- ...   ' 64- 74*  Kennzeichen der katalogisierenden Institution Cataloging Source  ' 75- 80*-&gt;002  Datum der Ersterfassung Date entered on file  ' 81- 86*-&gt;003  Datum der letzten Korrektur Date of latest transaction  ' 93*  Transliterationscode Modified record  ' 94*  Regeln für die Sacherschließung   ' 95*  Regeln für die Formalerschließung Descriptive cataloging form  ' 96*-&gt;066' 0 G Typ der Körperschaft   ' 96-108*  ISBN International Standard Book Number  ' 98-103*-&gt;036 S Ländercode Geographic Area Code  '110*  Datenträger, physikalische Form Type of record  '111*  Bearbeitungsstatus Encoding level  '112*  CIP-Aufnahme Encoding level  '113*  Erscheinungsform Begrenztes Werk Bibliographic level  '114-116*-&gt;051' 1-3  Art und Inhalt Begrenztes Werk Nature of contents  '119*  Hierarchieebene Hierarchy level  '120*  Literaturtyp Target audience; Intellectual level code  '121*  Reprint-Kennzeichen begrenztes Werk Reproduction Note  '122-127* (W5)  Sprachencode Language Code  '128*  Polyglott-Kennzeichen Language Code  '132-135*  Erscheinungsland (DIN/ISO 3166) Place of publication, production, or execution  '136-139*-&gt;050'11-13  Anzahl der physischen Einheiten   '140-141*-&gt;030' 9-10  Fächerstatistik; Deutsche Bibliotheksstatistik   '142  Publikationsstatus   '143*  Erscheinungsfrequenz auf Jahre bezogen Frequency  '144-146*  Erscheinungsweise Frequency  '147*  Regelmäßigkeit Regularity  '148-158*  Besitzende Institution   '159*-&gt;051'6  Amtsdrucksachen-Kennung Begrenzte Werke Government Publication  '160*-&gt;030'11  Haupteintragungstyp Main entry type  '161*  Ordnungssachtitel-Indikator   '162-165*  Erscheinungsjahr in Ansetzungsform Date 1  '166*-&gt;030' 8  Stichwortkennung   '169*  ÖB-Relevanz   '172-182*  IdentNummer des zugehörigen Hauptsatzes Main Series Entry  001-029  Segment IdentNummern, Datums- und Versionsangaben   001  IdentNummer des Datensatzes   002  Datum der Ersterfassung Date entered on file  003  Datum der letzten Korrektur Date of latest transaction  004  Erstellungsdatum der Austauscheinheit Date entered on file  005  Transaktionsdatum Date of latest transaction  006  Versionsnummer Date of latest transaction  010  IdentNummer des direkt übergeordneten Datensatzes Main Series Entry  011  Identnummer der verknüpften Sätze für Pauschalverweisungen und siehe-auch-Hinweise   012 L IdentNummer des Titeldatensatzes   015  Identnummer des Zielsatzes   016  IdentNummer des umgelenkten Satzes   020 (W10)  Identnummer eines gelieferten Datensatzes   021  Identnummer der Primärform   022 (W50)  Identnummer der Sekundärform   023  IdentNummer des zu korrigierenden Satzes   025  Überregionale IdentNummer   025* (W50) L Lokale IdentNummer Local production number  025b  Nationalbibliographische Nummer National Bibliographic Agency Control Number  026 (W30) L Regionale IdentNummer Local production number  027 (W50) L Lokale IdentNummer Local production number  029 (W10)  Sonstige IdentNummer des vorliegenden Datensatzes   030-035  Segment Allgemeine verarbeitungstechnische Angaben   030  Codierte Angaben zum Datensatz   030' 1  Ansetzungsstatus   030' 3  Zeichencode   030' 4  Regeln für die Formalerschließung Descriptive cataloging form  030' 5  Regeln für die Sacherschließung   030' 6  Regeln für Normdatenansetzung   030' 7  Transkription / Transliteration Modified record  030' 8  Stichwortkennung   030' 9-10  Fächerstatistik; Deutsche Bibliotheksstatistik   030'11  Haupteintragungstyp Main entry type  030'12  Ordnungssachtitel-Indikator   031  Angaben zum Redaktionssatz   036-049  Segment Allgemeine codierte Angaben   036 (W5)  Ländercode Place of publication, production, or execution  036 S Ländercode Geographic Area Code  038  Herkunftssprache Language Code  039 (W5)  Zeitcode Time Period of Content  040 N SWD-Notation   040* L SSG-Nummer   041 N Notationsspezifische Codierungen   041* L SSG-Notation   042* (W3) L ZDB-Prioritätszahl   050-064  Segment Veröffentlichungs- und materialspezifische Angaben   050  Datenträger Type of record  050' 2  Papierzustand   050' 3  Mikroform Specific material designation - microform  050' 5-6  Materialtyp Visuelle Materialien Type of visual material  050' 8  Computerdatei   050'11-13  Anzahl der physischen Einheiten   051'4  Literaturtyp Target audience; Intellectual level code  051'6  Amtsdrucksachen-Kennung Begrenzte Werke Government Publication  052  Veröffentlichungsspezifische Angaben zu fortlaufenden Sammelwerken Coded data field: Serials  052' 0  Erscheinungsform Fortlaufendes Sammelwerk Bibliographic level  052' 1-6  Art und Inhalt Fortlaufendes Sammelwerk Nature of contents  052' 7  Publikationsstatus   052' 8-10  Erscheinungsweise Frequency  052'12  Amtsdrucksachen-Kennung Fortlaufende Sammelwerke Government Publication  052'13-14  Frühere Erscheinungsform   053  Nachlässe und Autographen, Codes   057 (W10)  Materialspezifische Codes für Mikroformen Physical description fixed field--MICROFORM  057' 0  Materialart - Mikroform Specific material designation - microform  057' 1  Polarität Polarity  057' 2  Format der Mikroform Dimensions - microform  057' 3  Verkleinerungsfaktor Mikrofilm Reduction ratio; Microform reduction ratio  057' 4-6  Spezifische Verkleinerungsrate Specific Reduction Ratio  057' 7  Farbe Mikroform Colour of microform  057' 8  Emulsion Mikrofilm Emulsion on film  057' 9  Filmgeneration Generation  057'10  Trägermaterial Mikroform Base of film  065-069  Segment Normdatenspezifische Angaben   065 P Normdatenspezifische Angaben zur PND   066 G Normdatenspezifische Angaben zur GKD   066' 0 G Typ der Körperschaft   067 S Normdatenspezifische Angaben zur SWD   068 N Normdatenspezifische Codierungen   070-075  Anwenderspezifische Daten und Codes PHYSICAL DESCRIPTION FIXED FIELD  070  Identifizierungsmerkmale der bearbeitenden Institution Cataloging Source  071 (W2)  Identifizierungsmerkmale der besitzenden Institution   072  Codierte Angaben zur besitzenden Institution   073 L SSG-Nummer   074 L SSG-Notation   075 (W3) L ZDB-Prioritätszahl   076-088  Frei definierbare anwenderspezifische Angaben, Kennzeichen und Codes   080  Zugriffs- und Updateanweisungen   089-090  Segment Bandangaben   089  Bandangaben in Vorlageform Second level and subsequent level title and statement of responsibility information relating to a multipart item  090  Bandangaben in Sortierform Number of volume  090 E Sortierhilfe   091 (W25) E Einzelbandaufführung   1--  Segment Personennamen   100  Name der 1. Person in Ansetzungsform Main Entry--Personal Name  100 (W2) L Signatur Call number  100*  Nicht-standardmäßige Nebeneintragung Verfasser (Nachsatz)   100b  Erste sonstige beteiligte Person Added Entry--Personal Name  100c  sonstige beteiligte Person Added Entry--Personal Name  100e  Interpret, Person   100f  Gefeierte Person Honoree; Festschrift recipient  101 (W50)  Verweisungsformen zum Namen der 1. Person   101a N Pseudonym   102  IdentNummer des Personennamensatzes der 1. Person   103  Körperschaft, bei der die 1. Person beschäftigt ist Affiliation  104,108,112...  Zweiter Verfasser, 3.Verf., 4. beteil.Person... Added Entry--Personal Name  104b  Zweite beteiligte Person Added Entry--Personal Name  105 L Standort Call number  105,109,113...  Verweisungsformen zum Namen der 2. Person Added Entry--Personal Name  106  IdentNummer des Personennamensatzes der 2. Person   107 L Zusätzliche Signatur Call number  110 L Exemplarzahl Call number  115 L Akzessionsnummer Accession number  120 L Buchungsnummer Call number  120-&gt;820 P Personennamens-Ansetzungsform nach einem weiteren Regelwerk   123 L Eigentümer   125 (W10) L Bemerkungen zu den titel- und exemplarbezogenen Lokaldaten   130 (W50) L Bibliographische Angaben zum vorliegenden Exemplar Copy and Version Identification Note  132 (W7) L Alte Drucke   135 L Buchbinderische Zählung zur bibliographischen Bandzählung Call number  2--  Segment Körperschaftsnamen   200--329* L Segment Zusammenfassende Bestandsangaben   200-204* L 1. Bestandsblock   200  Name der 1. Körperschaft in Ansetzungsform Main Entry--Corporate Name  200 (W) L Zusammenfassende Bestandsangaben   200* L Einleitender Text zur Bestandsangabe des 1. Bestandsblocks   200b/c  Sekundärkörperschaft Added Entry--Corporate Name  200e  Körperschaft als Interpret; Orchester; Musikgruppe   201 (W20)  Verweisungsformen zum Namen der 1. Körperschaft   201* L Zusammenfassende Bestandsangabe des 1. Bestandsblocks   202  IdentNummer des Namenssatzes der 1. Körperschaft   202* L Lückenangabe zum 1. Bestandsblock   203* L Kommentar zum 1. Bestandsblock   204  Name der 2. Körperschaft in Ansetzungsform Main Entry--Corporate Name  204* L Lokaldaten zum 1. Bestandsblock   205-209* L 2. Bestandsblock   205  Verweisungsformen zum Namen der 2. Körperschaft Main Entry--Corporate Name  205* L Zusammenfassende Bestandsangabe des 2. Bestandsblocks holdings statement  206  IdentNummer des Namenssatzes der 2. Körperschaft   210-214* L 3. Bestandsblock   210 L Normierte Bestandsangaben   3--  Segment Sachtitel   300  Sammlungsvermerk Collective Uniform Title  304  Einheitssachtitel - Nebeneintragung Added Entry--Uniform Title  310  Hauptsachtitel in Ansetzungsform   325-329* L 26. Bestandsblock   331  Hauptsachtitel in Vorlageform oder Mischform   333  Zu ergänzende Urheber zum HST   334  Allgemeine Materialbenennung General material designation  335  Zusätze zum Hauptsachtitel Remainder of title  340  Erster PST in Ansetzungsform Added Entry--Uncontrolled Related/Analytical Title  341  Erster PST in Vorlageform oder Mischform Added Entry--Uncontrolled Related/Analytical Title  342  Zu ergänzende Urheber zum 1. Parallelsachtitel   343  Zusätze zum ersten PST   344-355  Parallelsachtitel 2-4   345  Zweiter PST in Vorlageform   359  Verfasserangabe Statement of responsibility  360 (W10)  Unterreihen Subseries  361  Beigefügte Werke   365  Zusätze zur gesamten Vorlage Remainder of title  369  Verfasserangabe zur gesamten Vorlage   370 (W50)  Weitere Sachtitel Added entry - Uncontrolled related/analytical title  376 (W10)  Normierte Zeitschriftentitel Abbreviated Key Title  376b  CODEN Coden Designation  376c  Normierter Zeitschriftentitel, Key title Key Title  400-437  Segment Veröffentlichungsvermerk, Umfang, Beigaben Publication, Distribution, etc.  400  Ausgabebezeichnung in normierter Form Edition Statement  403  Ausgabebezeichnung in Vorlageform Edition Statement  405  Erscheinungsverlauf Dates of Publication and/or Volume Designation  406  Normierter Erscheinungsverlauf Dates of Publication and/or Volume Designation  407  Kartographische Materialien: Mathematische Angaben Cartographic Mathematical Data  410  Orte des 1. Verlegers, Druckers usw. Place of publication  410a  Druckort Place of printing  410b  Vertriebsort Publication, Distribution, etc.  410c  Auslieferungsort Publication, Distribution, etc.  411  Adresse des 1. Verlegers, Druckers usw. Source for Acquisition/Subscription Address [obs.]  412  Name des 1. Verlegers, Druckers usw. Publisher  412a  Drucker Printer  415  Orte des 2. Verlegers, Druckers usw. Place of 2nd publisher  416  Adresse des 2. Verlegers, Druckers usw. Source for Acquisition/Subscription Address [obs.]  417  Name des 2. Verlegers, Druckers usw. Publisher  417a  Zweiter Drucker Printer  418  Angaben zu weiteren und/oder früheren Verlegern, Druckern etc.   420  Zusammenfassende und offene Aufführung von Teilen   425 (W2)  Erscheinungsjahr in Vorlageform date of publication  426  Datumsangaben date of publication  427  Zusammenfassende Bestandsangabe Textual holdings  429  Bestandslücken   431  Zusammenfassende Register   432  Zusammenfassende und offene Bandaufführung   433  Umfangsangabe extent  433a  Zusammenfassung der Bände   434 (W10)  Illustrationsangabe / Technische Angaben zu Tonträgern Illustrations  435  Formatangabe Dimensions  437  Angabe von Begleitmaterialien Accompanying material  451--496  Segment Gesamttitelangaben Host Item Entry  451-456  1. Gesamtheit Host Item Entry  451  1. Gesamttitel in Vorlageform Series Statement  452 (W20)  Standardnummern des Gesamttitels ISSN of series  453  IdentNummer des Gesamttitels   454  1. Gesamttitel in Ansetzungsform   455  Bandangabe   456  Bandangabe in Sortierform (Serie)   461-466  2. Gesamtheit Host Item Entry  461  2. Gesamttitel in Vorlageform Series Statement/Added Entry--Title  462 (W20)  Standardnummern des 2. Gesamttitels ISSN of series  463  IdentNummer des 2. Gesamttitels   464  2. Gesamttitel in Ansetzungsform   465  Bandangabe zur 2. Gesamtheit   466  Bandangabe zur 2. Serie in Sortierform   471-476  3. Gesamtheit Host Item Entry  481-486  4. Gesamtheit Host Item Entry  491-496  5. Gesamtheit Host Item Entry  500-538  Segment Fußnoten   501  Sammelfeld für unaufgegliederte Fußoten General Note  502  Einheitssachtitel eines beigef. oder kommentierten Werkes With Note  503  Deutsche Übers. d. HST bzw. Hinweis auf musikalische Form Translation of Title By Cataloging Agency  504  Angabe von Paralleltiteln   505  Angabe von Nebentiteln   507  Angaben zum HST und zu den Zusätzen   508  Angabe zur Quelle der Aufnahme   509  Vermerke zur Verfasserangabe Issuing Body Note  510  Angaben zur Ausgabebezeichnung Remainder of edition statement  511  Angaben zum Erscheinungsvermerk Publication, distribution, etc. note  512  Angaben zum Kollationsvermerk bzw. zur physischen Beschreibung Physical description note  513  Änderungen im Impressum   515  Ergänzungen zur Gesamttitelangabe Series note  516 (W10)  Angaben über Schrift, Sprache und Vollständigkeit der Vorlage und musikalische Notation Language Note  517 (W10)  Angaben zum Inhalt Formatted Contents Note  518 (W10)  Angabe der Namen von Interpreten bzw. weitere Angaben zur Interpretation Participant or Performer Note  519  Hochschulschriftenvermerk Dissertation Note  522 (W10)  Teilungsvermerk bei fortl. Sammelwerken   523  Angaben über Erscheinungsweise und Erscheinungsdauer   524  Hinweise auf unselbständig enthaltene Werke Supplement Note  525  Herkunftsangaben   526 (W20)  Titel von Rezensierten Werken   527 (W50)  Hinweise auf parallele Ausgaben Issued With Entry  528 (W20)  Titel von Rezensionen   529 (W50)  Titel von fortlaufenden Beilagen Issued With Entry  530 (W50)  Titel von Bezugswerken Issued With Entry  531 (W50)  Hinweise auf frühere Ausgaben und Bände Former Title or Title Variations  532 (W50)  Hinweise auf frühere und spätere sowie zeitweise gültige Titel Former Title or Title Variations  533 (W50)  Hinweise auf spätere Ausgaben und Bände Succeeding Entry  534 (W50)  Titelkonkordanzen   535  Anzahl von Exemplaren   536  Voraussichtlicher Erscheinungstermin Projected Publication Date  537  Redaktionelle Bemerkungen   538  Angabe der Vervielfältigungsart   539* (W5)  Verknüpfungen zu Pauschalverweisungen   540-589  Segment Standardnummern   540 (W30)  Internationale Standardbuchnummer International Standard Book Number  541  Internationale Standardnummer für Musikalien International Standard Music Number  542 (W10)  Internationale Standardnummer für fortlaufende Sammelwerke International Standard Serial Number  543  Internationale Standardnummer für Reports (ISRN)   544 (W10)  Lokale Signatur Local call numbers  546  Postvertriebskennzeichen Postal Registration Number  550 (W50)  Amtliche Druckschriftennummer Gpo Item Number  551 (W10)  Verlags-, Produktions- und Bestellnummer Publisher Number for Music  552  Persistent Identifiers Publisher Number for Music  554  Hochschulschriftennummer   556 (W10)  Reportnummer Report Number  562 (W10)  Patentnummer   564 (W10)  Normnummer   566  Firmenschriftennummer   568 (W10)  Nationalbibliographienummer der CIP-Aufnahme   570  Nationalbibliographienummer der falschen Aufnahme   572* (W10)  Sonstige IdentNummer des vorliegenden Datensatzes   572z  ZDB-Nummer   574  Nationalbibliographienummer   576  Pflichtablieferungs-Nummer Copyright or legal deposit number  578 L Fingerprint Fingerprint identifier  580 (W10)  Sonstige Standardnummern CONTROL NUMBER  590-599  Segment Herkunft unselbständig erschienener Werke   590  Hauptsachtitel und ggf. zu ergänzende Urheber der Quelle   591  Verfasserangabe der Quelle   592  Abteilung / Unterreihe der Quelle   593  Ausgabebezeichnung der Quelle in Vorlageform   594  Erscheinungsort der Quelle   595  Erscheinungsjahr der Quelle   596 (W20)  Bandzählung, Jahreszählung, Heftzählung, Umfangs- und Illustrationsangabe der Quelle   597  Gesamttitel der Quelle   598  Fußnote der Quelle   599 (W20)  Standardnummern der Quelle   600-603 N Segment Pauschalverweisungen und Siehe-auch-Hinweise   600  1. Teil der Verweisung   601  Bemerkungen zum 1. Teil der Verweisung   602  2. Teil der Verweisung   603  Bemerkungen zum 2. Teil der Verweisung   605 (W) S Nichtdeskriptor   606 (W) S Zu verknüpfende Deskriptoren   610-650  Segment Ausgabevermerk Sekundärformen Reproduction Note  610 (W2)  Fußnote zur Sekundärausgabe Reproduction Note  611  Ort[e] des 1. Verlegers, Herstellers usw.   612  Adresse des 1. Verlegers, Herstellers usw.   613  Name des 1. Verlegers   614-616  Ort des 2. Verlegers etc.   617  Urheber 1 der Verfilmung   618  Urheber 2 der Verfilmung   619  Erscheinungsjahr der Sekundärform Date 1  620  Hinweise zur Verfilmung   621-626  1. Gesamttitel der Sekundärform   627-632  2. Gesamttitel der Sekundärform   633  Abweichender Titel der Sekundärform   634  Standardnummern des 1. Gesamttitels der Sekundärform   635 (W10)  ISSN der Sekundärform   636  Sonstige Standardnummer der Sekundärform CONTROL NUMBER  637  Umfangsangabe und physische Beschreibung der Sekundärform Reproduction Note  638  Angabe von Begleitmaterialien zur Sekundärform   640  Ausgabebezeichnung der Sekundärform in Vorlageform Reproduction Note  642  Verfilmte Bände   644  Signatur der Sekundärform Local call numbers  645  Ergänzende Angaben zur Sekundärform   646  Besitznachweis für die Verfilmungsvorlage Location of Originals/Duplicates Note  647  Besitznachweis für den Sekundärausgaben-Master   651-659  Segment Ausgabevermerk Computerdateien   651  Fußnote zur Computerdatei Type of Computer File or Data Note  652  Spezifische Materialbenennung und Dateityp   653  Physische Beschreibung der Computerdatei auf Datenträger   654  Systemvoraussetzungen für die Computerdatei System Details Access to Computer Files  655 (W)  Elektronische Adresse und Zugriffsart für eine Computerdatei im Fernzugriff [auch in GKD] Electronic Location and Access  659  Ergänzende Bemerkungen zur Computerdatei Type of Computer File or Data Note  661-669  Segment Ausgabevermerk Nachlässe und Autographen   661  Angaben zum Text der Unterlage   662 L Angaben zum Äußeren der Unterlage Binding information  663  Bezugswerke   664  Provenienz Provenance Note  669 (W3)  Redaktionelle Bemerkungen zur Unterlage   670-675  Segment Zusätzliche Suchkriterien   670 (W10)  Sachtitel in abweichender Orthographie Acronym or Shortened Title [obs.]  671 (W)  Andersschriftliche Darstellung Alternate Graphic Representation  672 (W10)  Autorenname in normierter Form   673 (W10)  Ort in normierter Form   674 (W10)  Veranstaltungsjahr / Erscheinungsjahr des Origials   675 (W50)  Stichwörter in abweichender Orthographie Augmented Title [obs.]  68-  Segment Angaben zu Musikmaterialien   680 (W)  Werkverzeichnis   681 (W)  Detaillierte Angaben zum Werk bzw zu den Werkteilen   683  Angaben zur Besetzung   7--  Segment Sacherschließung   700 (W50)  Notationen eines Klassifikationssystems Universal Decimal Classification Number  700  Sachgruppen der Deutschen Bibliothek Subject Category Code  700b  DDC Dewey Decimal Call Number  700c  LC Library of Congress Call Number  700p  SSD Subject Category Code  700z  ZDB-Notation   705 (W)  DDC analytisch Universal Decimal Classification Number  710 (W50)  Schlagwörter und Schlagwortketten Subject heading  710  Schlagwörter der DB bis 1985   710a (W50)  Sachschlagwort Subject Added Entry--Topical Term  710b (W50)  Geographisches Schlagwort Subject Added Entry--Geographic Name  710c (W50)  Personenschlagwort als Kettenglied Subject Added Entry--Personal Name  710d (W50)  Körperschaftsschlagwort als Kettenglied Subject Added Entry--Corporate Name  711 (W)  Schlagwörter und Schlagwortketten nach anderen Regelwerken Subject heading  720 (W50)  Stichwort Augmented Title [obs.]  730 (W50)  PRECIS   740c (W50)  Corporate body name used as subject Subject Added Entry--Corporate Name  740f (W50)  Family name used as subject Family name used as subject  740g (W50)  Geographical name used as subject Subject Added Entry--Geographic Name  740n  Werktitel als Schlagwort Title subject heading  740p (W50)  Personal name used as subject Subject Added Entry--Personal Name  740s (W50)  Topical name used as subject Subject Added Entry--Topical Term  740t  Title used as subject Title subject heading  740u  Uncontrolled subject Index Term--Uncontrolled  750  1. Inhaltliche Zusammenfassung Summary, etc. Note  750l  ekz-aktuell vorläufiges Kurzreferat Summary, etc. Note  751  Verfasser der 1. inhaltlichen Zusammenfassung Summary, etc. Note  752  Sprachen der 1. inhaltlichen Zusammenfassung language of abstract  753-755  2. inhaltliche Zusammenfassung Summary, etc. Note  756-758  3. inhaltliche Zusammenfassung Summary, etc. Note  800-829  Segment Nichtstandardmäßige Nebeneintragungen   800  Person der 1. NE   800 (W4) P Name der Person in Ansetzungsform Heading--Personal Name  800 S Hauptschlagwort Heading--Topical Term  800g S Geographischer Name, Stammsatz Heading - Territorial or Geographic name  801 (W50)  Verweisungsform zur Person der 1. NE   801 (W20) G Zusätzliche Angaben zur Ansetzungsform Heading--Corporate Name  801 L Adresse der Institution   801 (W4) P Quelle für die Namensansetzung Heading--Personal Name  801 S Unterschlagwort 1 einer Ansetzungskette   801b G Abkürzung des Körperschaftsnamens   802-805 S Unterschlagwort 2 bis 5 einer Ansetzungskette   802  Körperschaft der 1. NE   802* (W10) G Überörtl. IdentNr d. Körp.;028 IdentNummer von Normdaten   803 (W50)  Verweisungsform zur Körperschaft der 1. NE   803 (W5) N Beschreibung der Notation, Systematikstelle usw.   803 G Übersetzung des Körperschaftsnamens See From Tracing--Corporate Name  804  Einheitssachtitel der 1. NE   805  Daten der Körperschaft Article identifier  806-811  Nichtstandardmäßige NE 2   806  Person der 2. NE   806 (W10) G Überörtliche IdentNummer der übergeordneten Körperschaft   806 L Zusätzliche Sigelangaben   808 (W4, SWD) N Erläuterungen zum Schlagwort Scope note  808 N Erläuterungen, Bemerkungen zu einer Notation, Systematikstelle usw.   809 L Übernommene Bibliotheken   810 G Verweisungsform 1 zum Namen der Körperschaft See From Tracing--Corporate Name  810*-&gt;040 N SWD-Notation   811  Sachtitel der 2. NE   811* S Ländercode für SWD Geographic Area Code  812 G Verweisungsform 2 zum Namen der Körperschaft See From Tracing--Corporate Name  812* S Sprachencode ISO   813 G Zusätzliche Angaben zur 2. Verweisungsform See From Tracing--Corporate Name  814-815/848-849 G Verweisungsformen 3-20 See From Tracing--Corporate Name  814 (W30) N Daten zur Person Dates associated with a name  815 (W30) N Daten zur Person in normierter Form Dates associated with a name  816 (W50) P Werke der Person   817 (W10, SWD, PND)  Körperschaft, zu der eine Person in Beziehung steht Affiliation  820 P Personennamens-Ansetzungsform nach einem weiteren Regelwerk   820 S Alternativform zum Hauptschlagwort   821 S Unterschlagwort zur Alternativform   821-825 S Unterschlagworter zur Alternativform   824-829  Nichtstandardmäßige NE 3   829 S IdentNummer der Pauschalverweisung zur Alternativform   830 (W50) N Verweisungsformen zur Notation, Systematikstelle usw. ;840 Klassenbezeichnung zur Notation, Systematikstelle usw.   830 L Weitere Namensformen der Institution   830 (W50) P Verweisungsform zum Namen der Person See From Tracing--Personal Name  830 (W50) S Äquivalente Bezeichnung; Synonymes Schlagwort See From Tracing--Topical Term  845 (W50) S Oberbegriff zu Individualbezeichnungen   850 G Früherer, zeitweiser oder späterer Körperschaftsname   851 G Zusätzliche Angaben zum 1. früheren... Namen der Körperschaft   852 G IdentNummer des 1. früheren... Namens   853-855/892-894 G 2.-15. früherer ... Name der Körperschaft etc.   860 (W50) P Siehe-auch-Verweisung zum Namen der Person See From Tracing--Personal Name  860 S Verwandtes Schlagwort   870 S Schlagwort für eine frühere Benennung   880 S Schlagwort für eine spätere Benennung   890 P Neue Ansetzungsform bei Änderung des Personennamens See From Tracing--Personal Name  891 P Alte Ansetzungsform bei Änderung des Personennamens See From Tracing--Personal Name  895 (W50) G Zusätzliche Suchwörter   897 (W50) G Weitere Verweisungsformen   9--  Segment RSWK-Schlagwortketten   900 (W10)  IdentNummer der 1. Schlagwortkette   902 (W10)  IdentNummer der 1. Schlagwortkette   902#  Unterschlagwort als Teil einer Schlagwortkette topical subdivision  902c  Körperschaftsschlagwort unter Ortsname als Kettenglied Subject Added Entry--Corporate Name  902f  Formschlagwort   902g  Geographisch-ethnographisches Schlagwort als Kettenglied Subject Added Entry--Geographic Name  902t  Werktitel als Schlagwort Title subject heading  902z  Zeitschlagwort als Kettenglied Time Period of Content  903  Permutationsmuster der 1. Schlagwortkette   904 (W2)  Erläuterungen zur 1. Schlagwortkette   905-909 (W10)  Zweite Schlagwortkette   910-914  3. Schlagwortkette   945-949  10. Schlagwortkette    2005-05-30 Auszug aus der allegro -Formatedatenbank (c)1998 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
&gt;  div.MsoNormal {mso-style-unhide:no;mso-style-qformat:yes;mso-style-parent:"";margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;mso-pagination:widow-orphan;font-size:11.0pt;font-family:"Calibri","sans-serif";mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:minor-bidi;mso-fareast-language:EN-US;}li.MsoNormal {mso-style-unhide:no;mso-style-qformat:yes;mso-style-parent:"";margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;mso-pagination:widow-orphan;font-size:11.0pt;font-family:"Calibri","sans-serif";mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:minor-bidi;mso-fareast-language:EN-US;}p.MsoNormal {mso-style-unhide:no;mso-style-qformat:yes;mso-style-parent:"";margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;mso-pagination:widow-orphan;font-size:11.0pt;font-family:"Calibri","sans-serif";mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:minor-bidi;mso-fareast-language:EN-US;}  MarcEdit zum Datenaustausch eines VuFind-Web-OPAC für allegro-Daten                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: MarcEdit zum Datenaustausch eines VuFind-Web-OPAC für allegro-Daten         Inhalt der Seite  Manbraucht als Werkzeug das Programm MarcEdit.   Das                    ist eine freie Software, die man hier findet:    http://people.oregonstate.edu/~reeset/marcedit/html/downloads.html        Wenn                    man es startet, wählt man aus dem Menü die Funktion MarcMaker:        MarcMaker    Eingaben im Unterfenster:    Input file:  c:\allegro\mdat.txt    Output                    file:  c:\allegro\mdat.mrc    Execute   Dann                    wird die Textdatei mdat.txt in eine echte MARC-Datei mdat.mrc umgewandelt           Validierung  (optional, um MARC-Daten formal zu prüfen)   -----------    Wenn man die entstandenen Daten auf formale                    Fehler überprüfen will:    File / Return to main                    window    MarcEditor  wählen    File / Open  c:\allegro\mdat.mrc    Tools /                    Validate MARC records  /  OK    braucht etwas Zeit, dann kommt    Fehlerfenster    evtl. ist dann die                    Parameterdatei  marctxt.apr  nachzubessern.       Wenn                    die Validierung keine gravierenden Fehler findet, kann man die Gesamtdatenmenge   umwandeln                    (d.h. alle Dateien kat_*.ald):       srch32 -f4 -s#20/#19 -dr:\opac\kat_*.ald                    ...       und                    mit  MarcEdit  die Ergebnisdatei entsprechend in eine                    .mrc-Datei verwandeln.   Diese                    kopiert man auf das Importverzeichnis von VuFind, damit sie indexiert wird.           Export                    auf anderen Wegen   ------------------------   Derselbe                    Export geht auch mit  srch32  statt srch, oder mit:       acon -jsrch -s"#20 / #19"                    -dr:\opac\kat_41.ald -br:\opac\kat -emarctxt/mdat.txt -ka       Oder                    mit a99, "Finden / Volltextsuche / Aktuelle Erg.Menge" , Suchbegriff                    #20 / #19,   usw.           Alternative   -----------   Es                    gibt ein Programm namens  yaz-marcdump  als Teil des                    Z39.50-Pakets YAZ. Damit   Kann                    man angeblich ebenfalls eine MARC-Textdatei in eine echte .mrc-Datei wandeln.   Dies                    wurde aber noch nicht getestet.   Mehr:    http://www.indexdata.com/yaz/doc/yaz-marcdump.html            Erweiterungen   -------------   Mit                    der beschriebenen Methode hat man zunächst einmal nur einen statischen                    Web-OPAC.   Um                    ihn zu "dynamisieren", kann man folgendes tun:       1.                    Regelmäßig erneuern oder durch Zufuhr neuer Daten aktualisieren.       2.                    Ausleih- und andere Daten, die sich in der "lebendigen" Datenbank                    befinden und    sich ständig ändern, über geeignete                    PHP-Skripte einbinden. VuFind kann dann    z.B. die Exemplardaten zu einem Titel, samt                    Ausleihangaben, mit anzeigen, und    zwar auf dem aktuellen Stand.       Zu                    diesen Punkten werden detaillierte Anleitungen noch erarbeitet.       Zum                    Import-Vorgang findet man alles weitere unter    http://vufind.org/wiki/importing_records            Was                    VuFind NICHT kann   ---------------------   Es                    kann eine allegro-Datenbank nicht komplett ersetzen, denn es hat keine                    Datensatz-   Struktur,                    die sich zum direkten Eingeben und Bearbeiten von Daten eignen würde. Eine   VuFind-Datenbank                    besteht nur aus dem sog. "Index", es gibt keine kategorisierten   Datensätze.                    Der "Index" ist mit dem allegro-Index nicht vergleichbar, er hat   einen                    völlig anderen Aufbau. Vor allem kann man in ihm nicht alphabetisch blättern.   Er                    ist optimiert für das schnelle Suchen mit Funktionen, die mit einem allegro-   Index                    nicht möglich sind, z.B. die flexible Phrasensuche und das Ranking.   Der                    VuFind-Index wird mit der Suchmaschinen-Software Solr von Apache gemacht.   Seine                    Funktionen und die Oberfläche werden durch Java-Programme und PHP-Skripte   dargestellt.                    Darunter befinden sich einige Dateien für lokale Einstellungen und   Vorgaben,                    mit denen man seine Besonderheiten einbauen kann.                          [i] zuletzt aktualisiert:         16.12.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  Installation von VuFind V1.2 auf Windows Systemen                                            Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen         Inhalt der Seite     I. Hilfreiche Links &amp; Allgemeine Hinweise     II. VerwendeteSoftware bei allegro-C Beispiel Vufind Web-OPAC     III. Installationsschritte    IV.  Konfiguration    von VuFind    V.  Starten  Sie Ihre VuFind Testinstanz    VI. Importieren    Sie Ihre Daten   VII. Passen    Sie Ihre Vufind Instanz an   VIII. Buchcover und Statusmeldungen   IX. Datenaustausch   X. MarcEdit zum Datenaustausch eines VuFind-Web-OPAC für allegro-Daten               [i] zuletzt aktualisiert:         09.01.2012 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;    allegro-Expertentreffen 2012                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Expertentreffen 2012   Expertentreffen 2009   Expertentreffen 2007   Expertentreffen 2005   Chronik   UB Braunschweig            allegro OpenSource         Einblicke, vorgestellt auf dem Expertentreff 2012    Der erste Einstieg  Einführung ohne Voraussetzung von Vorkenntnissen in C und SVN    Klassenbibliothek  Grundlage  für jeden Zugriff auf allegro-Datenbanken aus C++    OSDP  Einführung  Rahmenwerk  für eigenes Konsolprogramm auf Grundlage der Klassenbibliothek    OSDP Quelltext  Der kommentierte  Programmtext von OSDP : Stellen für eigenen Ausbau klar  markiert    "Quadriga"  Die Werkzeuge  für den Administrator : Quellen der 4 classico-Programme SRCH,  IMPORT, INDEX, QRIX     a99  Übersicht Kondensierte,  kommentierte  Liste der Quelldateien zu a99     a99  Panorama  Die "Illustrierte Anleitung" zu a99 mit Quelltexthinweisen    a99 Browser  "Doxygen"-Datenbank  der Quellen von a99 : Dateien, Klassen, Variablen, Funktionen     a30: FreiRaum-Einstieg  Kein PHP, Kein  JavaScript, nur .txt und .job : Der schnellste Weg zu funktionalen  Web-Datenbanken     Kompilieren unter GNU Vorläufiges Rezept für das Erstellen der notwendigen Hilfsdateien und ausführbaren Programme            [i] zuletzt aktualisiert:         16.07.2012 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
     body {color : #000000;background-color : #ffffff;font : 9pt Verdana;        padding : 0px;}table.head {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;border : 2px solid #0f0f0f;}table.head2 {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;}table {color : #000000;font : 10pt Verdana;vertical-align : middle;}table.form {border : 1px solid #0f0f0f;color : #000000;font : 10pt Verdana;vertical-align : middle;}td {font : 8pt Verdana;vertical-align : top;}input {border : 1px solid #0f0f0f;color : #000000;background-color : #ffffff;margin : 5px;font : 10pt Verdana;font-size : 100%;padding : 2px 2px 2px 5px;vertical-align : middle;}input.button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}input.main {border : 3px solid #ff0000;margin : 5px;font : 10pt Verdana;font-size : 120%;padding : 2px 2px 2px 5px;vertical-align : middle;}input:hover {background-color : #ffeeee;}input:focus {background-color : #ffeeee;}form {border : 1px solid #ffffff;background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 0px;}form.edit {background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 5px;}.submit {border : 2px solid #0f0f0f;font-size : 100%;font-weight : bold;}a:link {color : #0000ff;;text-decoration : none;}a:visited {color : #ee8888;text-decoration : none;}a:hover {color : #ee00ff;text-decoration : none;        background-color : #ffffff; }a:active {color : #ee0000;background-color : #ffff99;}#INF {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Ext {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Reg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Erg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}/* FreiRaum-Boxen, mitte, links rechts */#FRE {  position: absolute;  resize:both;  top:30%;  left:40%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRL {  position: absolute;  top:60%;  left:2%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRR {  position: absolute;  top:60%;  left:50%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #dddddd;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}/* Dropdown Menu *//* source: http://matthewjamestaylor.com/blog/centered-dropdown-menus.html, adapted *//* Das Menue selbst ist in a35start.php angelegt *//* Main menu settings */#a35menu {clear:both;float:left;margin:0;padding:0;width:100%;font-family:Verdana, Geneva, sans-serif; /* Menu font */font-size:1em; /* Menu text size */z-index:1000; /* Menue ueberlagert dann den Seiteninhalt */position:left;}/* Top menu items */#a35menu ul {margin:0;padding:0;list-style:none;float:left;position:relative;right:100px;}#a35menu ul li {margin:0 0 0 1px;padding:0;float:left;position:relative;left:50%;top:0px;background:#fafa80; /* gelb; wirkt aber nur bei leerer Menuzeile */}#a35menu ul li a {display:block;margin:0;padding:.6em .5em .6em;font-size:1em;line-height:1em;background:#ffffff;text-decoration:none;color:#444;}/*#a35menu ul li:active a,#a35menu ul li.active a {color:#fff;background:#000;}*/#a35menu ul li a:hover, #a35menu ul li a.hover {background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}#a35menu ul li:hover a,#a35menu ul li.hover a { /* This line is required for IE 6 and below */background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}/* Submenu items */#a35menu ul ul {display:none; /* Sub menus are hidden by default */position:absolute;top:2em;left:0;float:left;right:auto; /*resets the right:50% on the parent ul */width:10em; /* width of the drop-down menus */}#a35menu ul ul li {left:auto;  /*resets the left:50% on the parent li */margin:0; /* Reset the 1px margin from the top menu */clear:left;float:left;width:100%;}#a35menu ul ul li a,#a35menu ul li.active li a,#a35menu ul li:hover ul li a,#a35menu ul li.hover ul li a { /* This line is required for IE 6 and below */font-size:.8em;font-weight:normal; /* resets the bold set for the top level menu items */background:#ffffff;color:#444;border-bottom:1px solid #ddd; /* sub menu item horizontal lines */float:left;width:100%;}#a35menu ul ul li a:hover,#a35menu ul li.active ul li a:hover,#a35menu ul li:hover ul li a:hover,#a35menu ul li.hover ul li a:hover { /* This line is required for IE 6 and below */background:#36f; /* Sub menu items background colour */color:#fff;float:left;}/* Flip the last submenu so it stays within the page */#a35menu ul ul.last {left:auto; /* reset left:0; value *///right:0; /* Set right value instead */}#a35menu ul ul.last li {float:right;position:relative;//right:.8em;}/* Make the sub menus appear on hover */#a35menu ul li:hover ul,#a35menu ul li.hover ul { /* This line is required for IE 6 and below */display:block; /* Show the sub menus */}     RDA Beispiele      body {background-color: #C5B594;}        Demo Simple Suche   PC  FKT  ?  Login       Indexsuche    Startpunkt: ... aus der Liste: \ RDA-Index \ Alle Wörter \ Personen \ Titelanfang \ Titelwörter \ Schlagwörter \ Verlage, Orte, Jahre \ Serien/Zeitschr.titel \ Nummern, z.B. ISBN \ RDA-Beispielnr.: z.B. hw13-01 \ MARC-Feldnummern \ Pica-Feldnummern \ RDA-Stichwörter \        Ergebnislisten       Liste zeigen ab Zeile:      &lt;  &gt;       Titeldaten     Interne Nummer:    F5  F7    &lt;  &gt;         Extras     &lt;  &gt;        Impressum   Die nachstehenden Informationen enthalten die  gesetzlich   vorgesehenen Pflichtangaben zur Anbieterkennzeichnung, sowie   wichtige   rechtliche Hinweise zur Internetpräsenz der   Universitätsbibliothek   Braunschweig.  Anbieter Anbieter dieser Webpräsenz ist im Rechtssinne die Universitätsbibliothek Braunschweig. Universitätsbibliothek Braunschweig Pockelsstr. 13 38106 Braunschweig Tel.: +49(0)531/391-5011  http://www.biblio.tu-bs.de E-Mail: ub@tu-bs.de                        
</fragment>
</item>
<item>
<fragment>
   Index Datei       a30 [Bsp. d-a30.apr ]   Das  Programm a30 ist erst seit Juli 2009 in Entwicklung (die erste Mitteilung erfolgte in der allegro-Liste).    Es  bietet weniger  Funktionen im Vergleich zu a99 ,  dem Windows-Hauptprogramm des  allegro-Systems, diese Funktionen gehören jedoch zu den  grundlegend wichtigen, für jede Datenbank nützlichen; sie wurden exemplarisch mit viel  Sorgfalt programmiert und sind voll einsatzfähig.    Andererseits  bietet a30  dem Anwender aber Möglichkeiten zu eigenen  Erweiterungen: Praktisch kann er mittels simpler,  selbstgestrickter  Menüs alles realisieren, was sich  mit avanti und seiner Skriptsprache FLEX machen  läßt. Damit  kann er Job-Dateien schreiben, die quasi den einzelnen Feldern des  a30-Programms Daten zusenden. Dies hat Ähnlichkeit mit der AJAX-Technik ,  ist jedoch in der Anwendung noch einfacher: man braucht nur avanti-FLEX , kein JavaScript , kein PHP und sehr wenig HTML , um neue Funktionen zu  realisieren.    Die  Quellcodes von a30  wurden im Nov. 2009 freigegeben, d.h. Anwender können es  als  Rahmen für eigene Entwicklungen nutzen, insbes. zur  Umgestaltung oder Erweiterung der Oberfläche. Über Neuerungen und Erweiterungen wird in der Liste berichtet.    a30 ist der Versuch,  ein überschaubares, gleichwohl flexibles Konzept für den  Aufbau von RIA-Anwendungen auf allegro-Basis bereitzustellen. (Das Programm a99 samt Zubehör ist ab 1998, also seit 10 Jahren,  ständig  weiterentwickelt worden, a30 entstand in wenigen Monaten erst 2009 -  ein vergleichbarer Leistungsumfang ist von daher unrealistisch!)    Ganz          kurz das Wichtigste: a30          wurde mit Adobe            Flex entwickelt und ist deshalb in jedem Browser lauffähig, auch          unter          Linux, Solaris und Mac. Es erfordert keine lokale Installation auf dem          PC  des Endnutzers, denn es ist eine " Rich            Internet Application "            (RIA). a30 arbeitet an der Oberfläche konsequent mit Unicode            (UTF-8), während die Datenbank intern weiterhin auch andere            Codierungen haben kann. Achtung: Es            ist typisch für RIA-Programme, daß der Back-Button des            Browsers nicht benutzt werden sollte! Passiert es aus Versehen,            muß man a30 neu starten. Für potentielle Entwickler wichtig: Um mit den Quellcodes zu            arbeiten, genügt das kostenlose SDK-Paket für Adobe Flex .        
</fragment>
</item>
<item>
<fragment>
&gt;  .monospace {font-family: "Courier New", Courier, monospace;}      a35 : Plattformunabhängige Browser-Oberfläche für allegro-Datenbanken                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                a35 - Plattformunabhängige Browser-Oberfläche für allegro-Datenbanken - Anhang - Sonderfall in Formularen: Datumswahl -               Man  bindet in seinen HTML-Text ein (in dem das Formular steht):     Man  schreibt in dem HTML-Text, der dem Formular vorangeht:    $(function()  {   $( "#Vudp" ).datepicker({  dateFormat: "yymmdd" }); $( "#Vudp" ).datepicker(); });   Und  dann im Formular das input-Feld:  Datum:     Klickt man in dieses input-Feld, erscheint der Datumswähler.  Hat man ein Datum ausgewählt, landet es in der Form yymmdd im input-Feld (z.B. 20130218 ),  und beim Abschicken des Formulars kommt es im Job an in der Variablen #udp .  ALLGEMEINER  TIP ,  wenn JavaScript involviert ist:  Strg+Shift+J : Fehlerkonsole  zeigen lassen  (beim FireFox)   JavaScript-Fehler können damit leicht und schnell  gefunden werden.                         [i] zuletzt aktualisiert:         06.03.2013 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
     body {color : #000000;background-color : #ffffff;font : 9pt Verdana;        padding : 0px;}table.head {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;border : 2px solid #0f0f0f;}table.head2 {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;}table {color : #000000;font : 10pt Verdana;vertical-align : middle;}table.form {border : 1px solid #0f0f0f;color : #000000;font : 10pt Verdana;vertical-align : middle;}td {font : 8pt Verdana;vertical-align : top;}input {border : 1px solid #0f0f0f;color : #000000;background-color : #ffffff;margin : 5px;font : 10pt Verdana;font-size : 100%;padding : 2px 2px 2px 5px;vertical-align : middle;}input.button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}input.main {border : 3px solid #ff0000;margin : 5px;font : 10pt Verdana;font-size : 120%;padding : 2px 2px 2px 5px;vertical-align : middle;}input:hover {background-color : #ffeeee;}input:focus {background-color : #ffeeee;}form {border : 1px solid #ffffff;background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 0px;}form.edit {background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 5px;}.submit {border : 2px solid #0f0f0f;font-size : 100%;font-weight : bold;}a:link {color : #0000ff;;text-decoration : none;}a:visited {color : #ee8888;text-decoration : none;}a:hover {color : #ee00ff;text-decoration : none;        background-color : #ffffff; }a:active {color : #ee0000;background-color : #ffff99;}#INF {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Ext {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Reg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Erg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}/* FreiRaum-Boxen, mitte, links rechts */#FRE {  position: absolute;  resize:both;  top:30%;  left:40%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRL {  position: absolute;  top:60%;  left:2%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRR {  position: absolute;  top:60%;  left:50%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #dddddd;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}/* Dropdown Menu *//* source: http://matthewjamestaylor.com/blog/centered-dropdown-menus.html, adapted *//* Das Menue selbst ist in a35start.php angelegt *//* Main menu settings */#a35menu {clear:both;float:left;margin:0;padding:0;width:100%;font-family:Verdana, Geneva, sans-serif; /* Menu font */font-size:1em; /* Menu text size */z-index:1000; /* Menue ueberlagert dann den Seiteninhalt */position:left;}/* Top menu items */#a35menu ul {margin:0;padding:0;list-style:none;float:left;position:relative;right:100px;}#a35menu ul li {margin:0 0 0 1px;padding:0;float:left;position:relative;left:50%;top:0px;background:#fafa80; /* gelb; wirkt aber nur bei leerer Menuzeile */}#a35menu ul li a {display:block;margin:0;padding:.6em .5em .6em;font-size:1em;line-height:1em;background:#ffffff;text-decoration:none;color:#444;}/*#a35menu ul li:active a,#a35menu ul li.active a {color:#fff;background:#000;}*/#a35menu ul li a:hover, #a35menu ul li a.hover {background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}#a35menu ul li:hover a,#a35menu ul li.hover a { /* This line is required for IE 6 and below */background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}/* Submenu items */#a35menu ul ul {display:none; /* Sub menus are hidden by default */position:absolute;top:2em;left:0;float:left;right:auto; /*resets the right:50% on the parent ul */width:10em; /* width of the drop-down menus */}#a35menu ul ul li {left:auto;  /*resets the left:50% on the parent li */margin:0; /* Reset the 1px margin from the top menu */clear:left;float:left;width:100%;}#a35menu ul ul li a,#a35menu ul li.active li a,#a35menu ul li:hover ul li a,#a35menu ul li.hover ul li a { /* This line is required for IE 6 and below */font-size:.8em;font-weight:normal; /* resets the bold set for the top level menu items */background:#ffffff;color:#444;border-bottom:1px solid #ddd; /* sub menu item horizontal lines */float:left;width:100%;}#a35menu ul ul li a:hover,#a35menu ul li.active ul li a:hover,#a35menu ul li:hover ul li a:hover,#a35menu ul li.hover ul li a:hover { /* This line is required for IE 6 and below */background:#36f; /* Sub menu items background colour */color:#fff;float:left;}/* Flip the last submenu so it stays within the page */#a35menu ul ul.last {left:auto; /* reset left:0; value *///right:0; /* Set right value instead */}#a35menu ul ul.last li {float:right;position:relative;//right:.8em;}/* Make the sub menus appear on hover */#a35menu ul li:hover ul,#a35menu ul li.hover ul { /* This line is required for IE 6 and below */display:block; /* Show the sub menus */}    a35 Gipfeltourenbuch          body {background-color: #C5B594;}                 Ergebnislisten       Liste zeigen ab Zeile:      &lt;  &gt;       Indexfeld    Anzeigeindex: ... aus der Liste: \ Alle Wörter \ Personen \ Titelanfang \ Jahre \        Datensatz         F5  F7    &lt;  &gt;         Menüs und Formulare     &lt;  &gt;        Impressum   Die nachstehenden Informationen enthalten die  gesetzlich   vorgesehenen Pflichtangaben zur Anbieterkennzeichnung, sowie   wichtige   rechtliche Hinweise zur Internetpräsenz der   Universitätsbibliothek   Braunschweig.  Anbieter Anbieter dieser Webpräsenz ist im Rechtssinne die Universitätsbibliothek Braunschweig. Universitätsbibliothek Braunschweig Pockelsstr. 13 38106 Braunschweig Tel.: +49(0)531/391-5011  http://www.biblio.tu-bs.de E-Mail: ub@tu-bs.de    Navigation   google maps für webseite                       
</fragment>
</item>
<item>
<fragment>
&gt;    a35 - Demo OPAC UB Braunschweig                                           Impressum         Startseite    allegro-C von A-Z   a35 Datenbanken    Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Startseite a35    Datei    Volltextsuche   Hilfe   Zur Oberfläche   Zum Suchen   Link-Beispiele   Funktionstasten-Hilfe   Dateiübersicht   Ansicht   Mehr/Weniger (F12)   Hilfsfenster zu   Log-Datei:   - Anfang   - Ende   Info zur Datenbank   Sitzung   Login   Login-Menü   Historie löschen   Bearbeiten (Admin)   Globale Ersetzungen   Eingabeformular   Eigene Formulare   UB Braunschweig                 a35 - Gipfeltourenbuch   Ihre Suchwörter           body {color : #000000;background-color : #ffffff;font : 9pt Verdana;        padding : 0px;}table.head {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;border : 2px solid #0f0f0f;}table.head2 {color : #800000;background-color : #ffffff;line-height : 120%;font : 10pt Verdana;}table {color : #000000;font : 10pt Verdana;vertical-align : middle;}table.form {border : 1px solid #0f0f0f;color : #000000;font : 10pt Verdana;vertical-align : middle;}td {font : 8pt Verdana;vertical-align : top;}input {border : 1px solid #0f0f0f;color : #000000;background-color : #ffffff;margin : 5px;font : 10pt Verdana;font-size : 100%;padding : 2px 2px 2px 5px;vertical-align : middle;}input.button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}button {color : #646464;background-color : #e8e8e8;margin : 2px;font : 10pt Verdana;font-size : 100%;padding:1px 4px 16px 4px;vertical-align : middle;    height : 18px;    -moz-border-radius: 15px;    -webkit-border-radius: 15px;    border-radius: 4px 4px / 4px 4px;    border: 2px solid #a0a0a0;}input.main {border : 3px solid #ff0000;margin : 5px;font : 10pt Verdana;font-size : 120%;padding : 2px 2px 2px 5px;vertical-align : middle;}input:hover {background-color : #ffeeee;}input:focus {background-color : #ffeeee;}form {border : 1px solid #ffffff;background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 0px;}form.edit {background-color : #ffffff;font-size : 10px;line-height : 100%;padding : 5px;}.submit {border : 2px solid #0f0f0f;font-size : 100%;font-weight : bold;}a:link {color : #0000ff;;text-decoration : none;}a:visited {color : #ee8888;text-decoration : none;}a:hover {color : #ee00ff;text-decoration : none;        background-color : #ffffff; }a:active {color : #ee0000;background-color : #ffff99;}#INF {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Ext {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Reg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}#Erg {  bottom:1px;  right:1px;  border: 1px solid #d0d0d0;}/* FreiRaum-Boxen, mitte, links rechts */#FRE {  position: absolute;  resize:both;  top:30%;  left:40%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRL {  position: absolute;  top:60%;  left:2%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #0000ff;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}#FRR {  position: absolute;  top:60%;  left:50%;  border: 1px solid #d0d0d0;  border-radius: 6px;  box-shadow: 1px 2px 4px #dddddd;  /* blauer Schatten */  -moz-border-radius: 6px;  -webkit-border-radius: 6px;  background-color:#eeeeee;}/* Dropdown Menu *//* source: http://matthewjamestaylor.com/blog/centered-dropdown-menus.html, adapted *//* Das Menue selbst ist in a35start.php angelegt *//* Main menu settings */#a35menu {clear:both;float:left;margin:0;padding:0;width:100%;font-family:Verdana, Geneva, sans-serif; /* Menu font */font-size:1em; /* Menu text size */z-index:1000; /* Menue ueberlagert dann den Seiteninhalt */position:left;}/* Top menu items */#a35menu ul {margin:0;padding:0;list-style:none;float:left;position:relative;right:100px;}#a35menu ul li {margin:0 0 0 1px;padding:0;float:left;position:relative;left:50%;top:0px;background:#fafa80; /* gelb; wirkt aber nur bei leerer Menuzeile */}#a35menu ul li a {display:block;margin:0;padding:.6em .5em .6em;font-size:1em;line-height:1em;background:#ffffff;text-decoration:none;color:#444;}/*#a35menu ul li:active a,#a35menu ul li.active a {color:#fff;background:#000;}*/#a35menu ul li a:hover, #a35menu ul li a.hover {background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}#a35menu ul li:hover a,#a35menu ul li.hover a { /* This line is required for IE 6 and below */background:#36f; /* Top menu items background colour */color:#fff;border-bottom:1px solid #03f;}/* Submenu items */#a35menu ul ul {display:none; /* Sub menus are hidden by default */position:absolute;top:2em;left:0;float:left;right:auto; /*resets the right:50% on the parent ul */width:10em; /* width of the drop-down menus */}#a35menu ul ul li {left:auto;  /*resets the left:50% on the parent li */margin:0; /* Reset the 1px margin from the top menu */clear:left;float:left;width:100%;}#a35menu ul ul li a,#a35menu ul li.active li a,#a35menu ul li:hover ul li a,#a35menu ul li.hover ul li a { /* This line is required for IE 6 and below */font-size:.8em;font-weight:normal; /* resets the bold set for the top level menu items */background:#ffffff;color:#444;border-bottom:1px solid #ddd; /* sub menu item horizontal lines */float:left;width:100%;}#a35menu ul ul li a:hover,#a35menu ul li.active ul li a:hover,#a35menu ul li:hover ul li a:hover,#a35menu ul li.hover ul li a:hover { /* This line is required for IE 6 and below */background:#36f; /* Sub menu items background colour */color:#fff;float:left;}/* Flip the last submenu so it stays within the page */#a35menu ul ul.last {left:auto; /* reset left:0; value *///right:0; /* Set right value instead */}#a35menu ul ul.last li {float:right;position:relative;//right:.8em;}/* Make the sub menus appear on hover */#a35menu ul li:hover ul,#a35menu ul li.hover ul { /* This line is required for IE 6 and below */display:block; /* Show the sub menus */}    a35 Gipfeltourenbuch                Ergebnislisten  Indexfeld  Datensatz  Menüs und Formulare  Hilfe         Liste zeigen ab Zeile:     +  &lt;  &gt;          Anzeige index: ... der Auswahl: \ Alle Wörter \ Personen \ Titelanfang \ Jahre \            Nr. Index:    F5  F7  F12   &lt;  &gt;             &lt;  &gt;                                          [i] zuletzt aktualisiert:         12.07.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: UB von A-Z                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig         UB von A-Z         Was vermissen Sie hier?   A  B  C  D  E  F  G  H  I J K  L  M  N  O  P Q R  S  T  U  V  W  Z     A  Adresse der UB  Adressänderung   Aktuell (Kalendarium)  allegro-c  Anfahrt  Anmeldung zurBenutzung  Anschaffungsvorschlag  Ansprechpartner  Arbeitskabinen  Arbeitsplatzfür Sehbehinderte  Arbeitsplätzein der UB  Archiv (TUBraunschweig)  Archiv (Vieweg)  Archivbibliothek der GWV Fachverlage  Aufsatzsuche:online contents  Aufsatzsuche:IBZ  Auftrag derBibliothek  Auskunft  Ausleihe  Ausstellungen  Ausweisverlust      B  Benutzerkontoeinsehen   Benutzungshinweise  Benutzung am Campus Nord  Benutzung vor Ort  Benutzungsantrag (Universitätsarchiv)  Benutzungsantrag (Vieweg-Archive)  Benutzungsausweis  Benutzungsordnung  Bestseller  Bibliographischer Handapparat  Bibliotheksausweis  Bibliotheksprofil  Bildergalerie  BiSON  BraunschweigerDissertationen  Braunschweigergeobotanische Arbeiten  Brunsvigensien          der Universitätsbibliothek Braunschweig  Buchaufstellung imLesesaal   BWG, Veröffentlichungender     C   Campus Nord Campus Nord (UB-Service) -&gt; Benutzung am Campus Nord  Citavi - Literaturverwaltungsprogramm  Chemiebibliothek  CoOL (Fachportale)      D  Datenbanken Dauer der Mitgliedschaft -&gt; Gültigkeit des Benutzungsausweises  DigitaleBibliothek  DIN Normen online  Direktion  Direktlieferdienste/Subito  Dissertation:Merkblatt zur elektronischen Publikation   Dissertationsstelle  Drucken      E  E-Books  E-Learning  E-Mail an die UB  E-Mail-Benachrichtigung  Einführungen Einzelarbeitsplätze -&gt; Arbeitskabinen  Elektronische Zeitschriften  Elektronischer Semesterapparat  Elektronischer Semesterapparat &gt; Allgemeine Information  Elektronischer Semesterapparat &gt; Registrierung  Ende des Benutzungsverhältnisses Erinnerung -&gt; E-Mail-Benachrichtigung  Erste Schritte  Erwerbungsvorschlag  Exmatrikulation      F  Fachportale  Fachreferenten  Fächerübersicht  FAQs - Frequently askedquestions  Fernleihe  Fit für dieInformationsbeschaffung  Flyer/Infoblätter  Förderverein der UB  Formular zur Innenverrechnung  Formulare  Fotogalerie  Frauenliteratur  Fristen  Fristverlängerung (Erläuterung)  Fristverlängerung (Nutzerkonto)  Führungen      G  GBVDatenbanken  Gebühren  Gender Studies  Geschichte der UB  GVKplus  Grafik- undOfficearbeitsplätze  Gruppenarbeitsplätze  Gültigkeit des Benutzungsausweises  GWV Fachverlage, Verlagsarchiv      H  Hilfe   Hobrecker, Kinderbuchsammlung  Hochschularchiv -&gt; Universitätsarchiv         I  Impressum  Infoblätter/Flyer  Informationskompetenz (Projekt)  Information, Zentrale  Innenverrechnung, Formular  Institutsbibliotheken  Internet-PCs  IT-Zentrum        K  Kalendarium der UB  Katalogder UB  Katalog-Tutorial (Suchtipps)  Kinderbuchsammlung  Kontakt  Kopieren  Kurzprofil derUB      L  Lagepläne  Laptops  Lehrbuchsammlung   Leihfristen  Leihfristverlängerung (Erläuterung)  Leihfristverlängerung (Nutzerkonto)  Leihstelle Leihstelle am Campus Nord -&gt; Benutzung am Campus Nord  Leihverkehrsordnung  Lesesaal 1 / Lesesaal 2 / Lesesaal 3 (Lagepläne)  Lesesaalaufstellung  Lesesäle  LiteraturdatenbankVegetationsökologie  Literaturempfehlungen  Literatursuche  Literaturverwaltungsprogramm Citavi      M  Mahngebühren  Microfiche/Mikrofilm :Lesegerät mit Druckmöglichkeit Mitgliedschaft -&gt; Gültigkeit des Benutzungsausweises      N  Nationallizenzen(DFG)  NetLibrary   Neuerwerbungen  Neuigkeiten der UB per E-Mail: UB News  Normen  Normen online  Notebooks  Nutzerkonto      O  Öffnungszeiten  Office- undGrafikarbeitsplätze  Onlinecontents (Aufsatzsuche)  OnlinePublizieren      P  Passwort  Physikbibliothek  Projekt Informationskompetenz  Publikationen der UB  Publizieren,elektronisches  Publikationsserver / Digitale Bibliothek       R Rechenzentrum -&gt; IT-Zentrum  RegionalkatalogBraunschweig  Rückgabe  Rundgang durch die Bibliothek     S  Scanner  Schließfächer / Schließfächer für ein ganzes Semester =&gt;      s. UniFach   Schulen,Angebote für  ScienceDirect  Scifinder Scholar  Scopus, Literaturdatenbank  Sehbehinderte,Arbeitsplatz für  Selbstverbucher  Semesterapparat, elektronischer  Semesterapparat, elektronischer &gt; Allgemeine Information  Semesterapparat, elektronischer &gt; Registrierung  Softwarefür Bibliotheken  SondersammelgebietPharmazie  SpringerLink E-Books  Standorte  Stellenangebote   Studienservice-Center   StudIP   Subito /Direktlieferdienste   Suchtipps (Katalog-Tutorial)      T  Tauschangebote      U  UB Aktuell  UB News  UniFach (Schließfächer für ein Semester mieten)  Universitätsarchiv      V  Vegetationsökologie,Literaturdatenbank zur  Veranstaltungen  Verlängerungder Gültigkeitsdauer des Benutzungsausweises  Verlängerungder Leihfrist (Erläuterung)  Verlängerungder Leihfrist (Nutzerkonto)  Verlag: Die UB als Verlag   Verlagsarchiv der GWV Fachverlage  Verlust desBenutzungsausweises  Veröffentlichungender UB   Vieweg-Archive  Virtual Private Network - VPN  VirtuelleFachbibliothek Pharmazie  Virtueller Rundgang durch dieBibliothek  Vorlesungsdatenbank ab 2005  Vorlesungsverzeichnis der TU  Vormerken / Vormerkungen löschen  VPN (Virtual Private Network)      W  Wegbeschreibung  Weltkrieg1914-1918, Literaturdatenbank zum  WLAN      Z  Zeitschriften, elektronische  Zeitschriftenartikel:online contents  Zeitschriftenartikel:IBZ  ZentraleInformation  Zentralkatalog  ZFM - Zeitschriftenfreihandmagazin        [i] zuletzt aktualisiert:         27.01.2011 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
&gt;   allegro-C - Bibliothekssoftware                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: allegro und das Objektorientierte Datenbankkonzept   Es gibt für sog. Objektorientierte Datenbanken (OODB) zur Zeitnoch keinen Standard wie für RelationaleDatenbanken . Eine 1993 gegründete und von Rick Cattell geleitete ObjectData Management Group (ODMG) hat aber einen Industriestandard ausgearbeitet,an dem sich Datenbanken ausrichten sollen, die sich "objektorientiert"nennen. Dieser Standard, dessen Version3.0 (Januar 2000) auf dem Weg zu einer offiziellen Norm ist, fußtauf dem "Objektmodell". Dieses definiert die grundlegenden Konstrukte,mit denen objektorientierte Datenbanken operieren sollten. Im Folgenden werden die fünf Postulate desObjektmodells vorgestellt und jeweils erläutert, wodurch undin welcher konkreten Weise allegro diese abstrakten Postulateerfüllt.    Die elementaren Bausteine des Objektmodellssind das Objekt und das Literal . Jedes Objekt hat einen eindeutigen Identifizierer .Ein Literal hat keinen Identifizierer.  Die Objekte in einer allegro -Datenbank sinddie Datensätze. Sie bestehen aus Datenfeldern. Jedes Feld kann insich strukturiert sein, normalerweise durch festgelegte Interpunktion oderTeilfeldcodes. Datenfelder (Attribute) in relationalen Datenbanken sinddagegen "atomar", d.h. eine weitere Strukturierung des Feldes wird vomRDBMS nicht unterstützt. Genau das ist bei objektorientierten Datenbankenund bei allegro anders: Literale können komplex strukturierteBytefolgen sein, keineswegs nur Zahlen oder schlichte Zeichenketten, unddas Objekt kann mit Methoden ausgestattet sein, um mit dieser Strukturumzugehen. Dies kann (muss aber nicht) bis hin zu Multimedia-Files alsBestandteil von Objekten gehen, denn letztlich sind auch solche immer strukturierteBytefolgen. Soweit geht das bei allegro nicht, doch der Aufruf vongeeigneten externen Programmen aus dem System heraus macht den Zugriffauch auf solche Dinge möglich. Als Identifizierer sind in allegro beliebige Zeichenkettenmöglich. Sie können vom Nutzer eingebracht werden, das Datenbanksystemkann aber auch eigene Identifizierer von gewünschter Struktur zuteilen. Besonderheiten: Wird auf einen allegro -Datensatznicht durch eine Verknüpfung Bezug genommen, braucht er keinen Identifizierer.Wenn nötig, kann ein Satz aber auch mehr als einen (jeweils eindeutigen)Identifizierer haben.     Objekte und Literale lassen sich in Typen einteilen. Alle Elemente eines gegebenen Typs haben einen gemeinsamen Bereichvon möglichen Zuständen (d.h. dieselbe Menge von möglichen Eigenschaften )und ein gemeinsames Verhalten (d.h. dieselben möglichen Operationen ).Ein konkretes Objekt wird manchmal als Instanz seines Typs bezeichnet.  Der Typ eines allegro-Datensatzes kann durch dieKonfiguration (Felddefinition) und die Parametrierung (das Verhalten z.B.bei Export und Indexierung) in jeder gewünschten Weise charakterisiertwerden. Das Verhalten eines Objekts (Datensatzes) muss man betrachten   Aus der Sicht der Datenbank und des Programmierers: das Speichern,Aktualisieren und Löschen von Sätzen sind Vorgänge, dieals "Methoden" (Funktionen) im Objekt "Datenbank" eingekapselt sind  Aus Nutzersicht: die Exportsprache, eine mächtige Datenmanipulationsprache,gestattet eine Ausgabe von Datensätzen in jeder für Anwendungenbenötigten Form. Die Manipulation wird ausgeführt mittels einerExport-Parameterdatei: diese bildet zur Laufzeit ein Objekt, dem ein Datensatznur übergeben werden muss.  Die Exportsprache ist universell: damit werden alle Manipulationendurchgeführt, die auf Datensatzobjekte anzuwenden sind, von der Bildschirmpräsentationdes Einzelsatzes und der Ergebnismenge bis hin zur Bildung der Registereinträgeim Index der Datenbank. Die Windows-Programme verfügen mit der FLEX-Sprachenoch zusätzlich &amp;uumk;ber eine Ausgabemethodik, die ohne Parametrierungauskommt.    Der Zustand eines Objekts istdadurch definiert, welche Werte es für eine Anzahl von Eigenschaftenbesitzt. Diese Eigenschaften können Attribute des Objekts selbstsein oder aber Verknüpfungen ( relationships ) zu einemoder mehreren anderen Objekten.  Die Werte der Eigenschaften einesObjekts können sich normalerweise jederzeit ändern.  Die "Änderung der Eigenschaften" erfolgt durch manuelleBearbeitung (Nutzerschnittstellen in DOS oder Windows) oder per Programm:Datensätze können von außen mit der FLEX-Methodik, überden avanti -Server oder durch Batchprozesse (Programm UPDATE) aktualisiertwerden. Verknüpfungen kennt allegro in zwei Ausprägungen:   Über einen Identifizierer eines Hauptsatzes könnenbeliebig viele Untersätze mit diesem verknüpft sein. Typischerweisewird diese Technik bei mehrteiligen Veröffentlichungen angewendet.   Der Identifizierer eines "Stammsatzes" kann in beliebig vielenDatensätzen auftreten und dann bei Anzeige, Export oder Indexierungautomatisch den Ersatz des Identifizierers durch einen Klartext bewirken.Diese Methode ist typisch für die Verknüpfung von Schlagwort-und Namensstammsätzen mit Titeldatensätzen.      Das Verhalten eines Objektswird definiert durch die Menge der Operationen , die mit dem oderdurch das Objekt ausgeführt werden können. Operationen könneneine Liste von Eingabe- und Ausgabewerten haben, jeder von einem festgelegtenTyp. Jede Operation kann auch einen Wert von bestimmtem Typ zurückgeben. Die Exportsprache, siehe Punkt 2, ermöglicht es,Operationen beliebiger Art anwendungsspezifisch einzurichten. In den Windows-Programmena99 / alcarta kommt hinzu, dass man mit der Makro-Sprache FLEX auf höhererEbene Aktionen programmieren kann, die zwar auf den Methoden der C++-Klassenaufsetzen, deren genaue Kenntnis aber nicht voraussetzen. Parameterdateien werden jedoch nicht mit dem Satztyp(der abstrakten Klasse) zusammen gespeichert, sondern bilden eine Klassefür sich, also zur Laufzeit eigene Objekte. Potentiell gibt es sehrviele wünschenswerte "Verhaltensweisen" von Datensätzen, geradebei bibliothekarischen Daten! Deshalb ist es viel effizienter und wartungsfreundlicher,wenn man die Klasse "Datensatz" davon entlastet, auch noch alle jemalsbenötigten Unterprogramme für ihr Verhalten in sich aufnehmenzu müssen.    Eine Datenbank speichert Objekteund macht sie für mehrere Nutzer und für Anwendungen zugänglich.  Eine Datenbank beruht auf einem Schema ,definiert in der "Object Definition Language" (ODL) und enthält Instanzender Typen, die das Schema definiert.  allegro ist ein mehrplatzfähiges Datenbanksystem(eine "Einplatzversion" gibt es gar nicht, dennoch kann es problemlos aufeinem Einzel-PC ohne Netz betrieben werden). Eine Datenbank kann zu gleicherZeit sowohl von monolithischen Programmen lokal benutzt werden wie auchin Client/Server-Methodik über Inter- und Intranet. Das Schema einer allegro- Datenbank ist in einer"Konfigurationsdatei" niedergelegt. Diese bildet zur Laufzeit ein eigenesObjekt im Programmsystem, das z.B. dazu dient, ein neu eingegebenes odereingelesenes Datenfeld strukturell zu überprüfen, vor allem hinsichtlichder Wiederholbarkeit des Feldes, der erlaubten Teilfelder oder einigeranderer Eigenschaften. Es sorgt daneben auch für die Generierung vonZeitstempeln und neuen IdentNummern. Anders als die anderen, abstrakten Postulate nimmt Nummer5 Bezug auf eine konkrete Sprachdefinition, die ODL. Diese ist jedoch hersteller-und programmiersprachenunabhängig. Eine allegro- Konfigurationkönnte in ODL formuliert werden. Nicht alle Konstrukte der ODL habenin allegro eine Entsprechung (d.h. nicht jede ODL-Deklaration könntein einer allegro -Konfiguration abgebildet werden), andererseitsgehen die Möglichkeiten aber hier und da über die der ODL hinaus:z.B. kann in ODL ein Attribut, das als Relation deklariert ist, nicht wahlweiseim Datensatz auch mit einer normalen Zeichenkette belegt sein, es mussimmer mit einem Identifizierer des der Relation entsprechenden Typs belegtsein. In allegro ist das anders. Deshalb sind nicht alle Eigenschaften,die ein Attribut haben kann, in der Konfiguration fest eingestellt, sondernkönnen in der Parametrierung für den Index, die Anzeige und dieExporte realisiert werden .  Summa summarum : allegro erfüllt die abstrakten Postulatedes Objektmodells. In diesem Sinne ist es ein OODB. Die Formulierungvon allegro -Datenstrukturen in ODL und von allegro -Datenbankfunktionen(z.B. für Abfragen) in "Object Query Language" (OQL, praktisch eineErweiterung von SQL-92) wäre allerdings nicht einfach. In dem Sinne ist allegro keine OODB. Hierbei ist insbesondere auf den andersartigenAnsatz hinzuweisen, der unter Punkt 4 beschrieben wurde. "Objektorientiert" wird hier als allgemeiner Oberbegriff verstanden;es bedeutet im Sinne einer "reinen Lehre" nicht automatisch ODL+OQL, sowenig wie "relational" automatisch SQL bedeutet oder "Betriebssystem" automatisch"Windows" heißt oder "UNIX". "Objektorientiert" bedeutet auch nicht,dass wirklich Objekte jeder erdenklichen Art innerhalb der Datenbank speicherbarsein müssen. allegro -Datensätze haben eigentlich keinesehr ausgefallenen Eigenschaften, als Objekte betrachtet. Aus der Sichtder relationalen Therie handelt es sich um "semistrukturierte Daten", wofürtypisch ist, dass das Schema viele Elemente enthält, die häufigim Datensatz unbesetzt sind oder mehrfach auftreten können. Beidesist in der relationalen Welt problematisch, in der objektorientierten nicht. Die höheren Sprachkonstrukte, die im avanti -Server bzw.in den Windows-Programmen (FLEX-Makros) implementiert sind, sollten jedoch,wie auch immer man die Sache theoretisch betrachtet, für konkreteAufgaben eine Kommunikation zwischen allegro und OODB (wie auchRDBMS) ermöglichen. Zur Marktsituation  Objektorientierte Datenbanksysteme haben derzeit einen sehr kleinen,ja sogar in relativen Zahlen sinkenden Marktanteil [3]. Die Dominanz derrelationalen Systeme ist wohl unangreifbar. Wichtige Probleme sind diegeringere Belastbarkeit (RDBMS "skalieren" besser) und vor allem das Fehleneiner genormten Sprache, die zumindest das allgegenwärtige SQL umfassenoder emulieren müsste. Anmerkungen zur "objektorientierten Programmierung"  Die neueren allegro -Programme (der avanti -Server und dieWindows-Programme) sind in der objektorientierten Sprache C++ geschrieben.Das allein bedeutet noch nicht, dass allegro deswegen ein OODB wäre,es erleichtert jedoch die Verwirklichung dieser Eigenschaft. Zunächstbedeutet es nur, dass die Grundlage der Programme eine "Klassenbibliothek"ist. Eine "Klasse" ist eine genaue Definition einer Datenstruktur einschließlicheiner Sammlung von Funktionen (eine Art Unterprogramme, auch "Methoden"genannt), die mit dieser Struktur ausgeführt werden können. Es gibt fünf wesentliche Klassen: Konfiguration , Datensatz , Export , Index und Datenbank . Damit kann man in Programmen umgehen, wobei dannder Programmierer nichts Genaues über die interne Funktionsweise derDatenbank wissen muss. Wenn im Programm mit einem Objekt der Klasse "Datensatz"gearbeitet wird, kann man diesem Objekt Befehle erteilen, z.B. ein neuesDatenfeld in sich aufzunehmen oder ein vorhandenes herauszugeben oder zulöschen. Das Objekt "Datensatz" kann seinerseits einem Objekt "Export"übergeben werden, wodurch es dann mittels der dazu gehörigenParameter umgeformt und in eine Datei oder einen Speicherbereich ausgegebenwird. Ein neues oder verändertes Objekt "Datensatz" kann ferner einemObjekt "Datenbank" übergeben werden, um es abspeichern zu lassen oderum einen vorhandenen Datensatz dadurch ersetzen zu lassen. Das Objekt "Datenbank"führt dann alle Operationen aus, die zum Speichern und insbesonderezum Indexieren gehören. Um alles das braucht sich der Programmiererdaher nicht zu kümmern, sondern er kann sich z.B. auf eine funktionaleOberflächengestaltung konzentrieren. Client-Programme könnenfolglich geschrieben werden, ohne Kenntnisse über die interne Arbeitsweiseder Datenbank zu besitzen. Weiter erleichtert wird das Entwickeln von Client-Software durch den avanti -Server,ein seinerseits auf der Basis der Klassenbibliothek geschriebenes Programm.Er kann über TCP/IP, also über Inter- und Intranet, kommunizierenund damit z.B. von außen auch aus Perl- oder Python-Programmen herausangesprochen werden, nicht nur mit C++. Davon machen viele WWW-Anbindungen Gebrauch. Zum Schluss ein Hinweis  Wer sich produktneutral über das Thema "Datenbankarchitektur ausbibliothekarischer Sicht" informieren möchte, kann auf einen Textmit dem Untertitel "Quergedankenüber Datenbanken" zurückgreifen. Literatur:  [1] Harrington, Jan L.: Object-oriented database design clearly explained.- Academic Pr., 2000. - 312 S. - ISBN 0-12-326428-6 [2] The Object Data Standard: ODMG 3.0 / ed. by R.G.G. Cattell and DouglasK. Barry. - Morgan Kaufman 2000. - 280 S. - ISBN 1-558-60647-5 [3] Leavitt, Neal:  Whatever Happened to Object-Oriented Databases?- IEEE Computer, August 2000, p. 16–19.   allegro -Entwicklungsabteilung B. Eversberg (Tel. 0531-391-5026)      [i] zuletzt aktualisiert:         08.04.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  Das Menue Option / Füllhorn / ? - Anleitung zur Benutzung von alcarta                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   a30 - RIA für allegro   Hauptprogramm  a99   OPAC Programm alcarta   allegro-C Installation   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                Anleitung zur Benutzung von alcarta             Das Menü     O ption   · Datenfont Die Schriftart der Ergebnisliste und des  Eingabefeldes  kann hier verändert werden. Empfehlung: LetterGothic oder zur  Not Courier.  · Ergeb.  aufbewahren - Wenn aktiviert: Beim Verlassen des Programms  werden  alle Lesezeichen, die Liste der vorher angezeigten Daten und die  Ergebnismengen  gesichert, so daß bei erneutem Start diese Ergebnisse sofort  wieder  zur Verfügung stehen. Beim Start ist dieser Punkt nicht aktiviert,  wenn man ihn aber einmal aktiviert hat, bleibt er es.  · Eingabeschrift +/i und Anzeigeschrift +/- - Hiermit  ändert man die Schriftgröße im linken Auswahlfeld sowie  Schreibfeld bzw. im großen Anzeigefeld.  · Anzeige breit/schmal - Das Anzeigefeld kann auf die  ganze Breite des Fensters vergrößert werden, wenn man z.B.  einen  Hilfetext besser überblicken will. Auslösung auch mit F11 .  Eigener  Menüpunkt (kann  hier vom Systemverwalter eingerichtet werden: Befehle MyMenu/MyFLEX in  der INI-Datei)   Füll h orn   Dieser eigenwillige Punkt bringt ein eigenes  Menü hervor mit einer Fülle von Funktionen, darunter diese: -- Illustrierte Anleitung zur Benutzung des Programms (das ist dieser Text!) -- Link zum Index der allegro-Homepage -- Umschalten zwischen Englisch und Deutsch  ?   Das  Fragezeichen macht normalerweise dasselbe wie "Füllhorn" [Hinweis:  ein ? im Nenü gibt es bei jedem Windows-Programm, und es ruft  immer die allgemeine Hilfe auf. Die ist im Füllhorn enthalten]                    [i] zuletzt aktualisiert:         08.04.2011 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
h2 {      margin: 120 0 60 0px;      line-height: 1.5;      font-family: Verdana;      text-align: center;   }   h4 {      font-family: Verdana;      text-align: center;      line-height: 1.3;   }   .mono {      font-family : Courier New, Courier, mono;   }  Allegro Internet-Kataloge Step by Step     Allegro Internet-Kataloge Step by Step  Hinweise zur Installation der verschiedenen Schnittstellen unter Windows 2000 / XP Professional Von Christoph Schönberger, DHI London (Stand: 03.06.2005)  Dieser Text ist nur noch geeignet für Perl-Installationen: acwww25 und "populo"       Diese Seite beschreibt Schritt für Schritt die Installation der drei      verbreitetsten Allegro-Internetschnittstellen. Voraussetzung ist ein      Computer mit Windows 2000 Professional oder Windows XP Professional sowie      mit Internetverbindung (für das Herunterladen der erforderlichen      Programme). Die Windows Sprachversion ist deutsch  englisch. Das Laufwerk für die Installation ist  C:  D:  E:  F:  G:  H:  I:  J:  K:  L:  M:  N:  O:  P:  Q:  R:  S:  T:  U:  V:  W:  X:  Y:  Z:     Die Installation und der Test aller Komponenten und      Schnittstellen dauert etwa 2 Stunden (ohne Download). Danach verfügt der      Computer über folgende Programme:  Avanti 2.2.7 Server mit Demodatenbank Apache 2.0.52 Webserver mit mod_perl und PHP 4.3.10 Perl 5.8.6 und folgende Schnittstellen (jeweils mit                   Zugriff auch die Demo-Datenbank):  RuckZuck (PHP) Acwww25 (Perl) Populo (Perl)         Und dies ist die dabei erzeugte Verzeichnisstruktur:      C:\ apache2\ avanti\ database\ avdemo\ perl\ www\ htdocs\ scripts\ acwww25\ populo\ ruckzuck\    [Webserver] [Datenbank Server] [Allegro Datenbanken] [Demodatenbank] [Perl Skriptsprache]  [HTML Dateien] [Perl/PHP-Skripte]              Inhaltsübersicht  1. Avanti 2.2.7   1.1 Bezugsquelle  1.2 Programminstallation  1.3 Test von Avanti  1.4 Dokumentation   2. Apache 2.0 mit Perl 5.8 und PHP   2.1 Bezugsquelle  2.2 Installation  2.3.1 Test von Apache 2  2.3.2 Test von Perl  2.4 Dokumentation   3. Kommunikation der Komponenten   3.1 Test der Kommunikation Avanti           Perl über TCP/IP  3.2 Test der Kommunikation Apache           Perl / mod_perl  3.3 Test der Kommunikation Apache           PHP   4. Installationen der Demo-Datenbank   4.1 Ruckzuck (PHP)   4.1.1 Bezugsquelle  4.1.2 Zielverzeichnisse  4.1.3 Test  4.1.4 Dokumentation   4.2 acwww25 (Dierk Hoeppner)   4.2.1 Bezugsquelle  4.2.2 Zielverzeichnisse  4.2.3 Anpassungen  4.2.4 Test  4.2.5 Dokumentation   4.3 Populo (Thomas Berger)   4.3.1 Bezugsquelle  4.3.2 Zielverzeichnisse  4.3.3 Test  4.3.4 Dokumentation      1. Avanti 2.2.7  1.1 Bezugsquelle  Internet:  http://ftp.allegro-c.de/ac21/avanti  (Benutzername und Passwort sind notwendig) Installationsdatei: avanti-2.2.7-win32-setup.exe (23.11.2004, 667.204 Bytes)  1.2 Programminstallation  Als Administrator (oder mit Administrator-Rechten)        einloggen.   Die Installation durch Doppelklick auf avanti-2.2.7-win32-setup.exe starten, dabei im Dialogfenster C:\Avanti als Zielordner angeben. Wichtig: der Pfadname darf keine Leerzeichen enthalten, deshalb darf man        auf englischen Systemen (... \Program Files\...) auf keinen Fall den Vorgabewert uebernehmen!  Alle anderen Vorgaben können übernommen werden.  Die Datei C:\Avanti\etc\avanti.conf mit einem Texteditor öffnen und die Zeile beginnend mit "directory"        ändern in:  directory = C:/database/avdemo   Im Grundverzeichnis C:\ zwei neue Verzeichnisse C:\www und C:\database erstellen. Den Ordner C:\Avanti\share\Avanti\avdemo als Ganzes nach C:\database verschieben.  Zuletzt den Systemdienst starten:  Start -&gt; Einstellungen -&gt; Systemsteuerung -&gt; Verwaltung -&gt; Dienste Doppelklick auf "Avanti Service",        dann Schaltfläche      "Starten"        drücken.  1.3 Test von Avanti  Start -&gt; Ausführen -&gt; telnet  Telnet Fenster öffnet sich. Dann folgendes eintippen (man kann auch        die folgenden Zeilen in den Hintergrundspeicher kopieren und dann mit        Klick der rechten Maustaste in das Telnet-Fenster einfügen):  set local_echo open localhost 4949 find per shakesp? list internal @ DB=avdemo ID=opac/OPAC AVANTI:EOJ  Eine Reihe von Zahlen wird ausgegeben.   1.4 Dokumentation  Avanti kommt mit einer kleinen Dokumentation im html-Format:   C:\Avanti\share\Avanti\doc\index.html oder:  Start -&gt; Programme -&gt; avanti -&gt; Avanti Dokumentation oder im Internet:   http://www.allegro-c.de/doku/avanti/index.html   2. Apache 2.0 mit Perl 5.8 und PHP  2.1 Bezugsquelle Internet:  http://www.apache.org/dist/perl/win32-bin/  Installationsdatei: Perl-5.8-win32-bin-0.9.exe (28.12.2004, 25.766.067 Bytes) Enthält:  Apache 2.0.52 Perl 5.8.6 PHP 4.3.10   2.2 Installation  Sicherstellen, dass kein anderer Webserver (IIS, Xitami etc.) installiert        ist. Auch Perl sollte noch nicht installiert sein. Selbstentpackendes        Archiv nach Doppelklick ins Grundverzeichnis C:\ expandieren (Änderung des Vorgabewertes im Dialogfenster "Destination        Folder" erforderlich). Verzeichnisse C:\Apache2 und C:\Perl werden automatisch angelegt.        Jetzt wird gefragt, ob wir das Perl/Apache2 Binary konfigurieren wollen.        Hier kann man Hostname und Emailadresse angeben. Um den Vorgang zu vereinfachen        nimmt man am besten das Häkchen aus der Box "Configure CPAN.pm".  Die Installation fährt fort und stellt        wahrscheinlich fest, dass nmake nicht vorhanden ist. Dem Installationsprogram erlauben, nmake zu beziehen (Internetverbindung erforderlich!). Daraufhin lädt Perl        das Werkzeug nmake.exe von        der Microsoft Download Seite herunter. Falls es dabei zu Problemen        kommen sollte, kann man nmake auch manuell beziehen, und zwar von  ftp://ftp.microsoft.com/softlib/mslfiles/nmake15.exe  . Diese Datei muss man dann ins Verzeichnis C:\Perl\bin speichern und durch Doppelklick entpacken.  Der interaktive Installationsprozess fährt fort mit Fragen zur      Konfiguration, die man guten Gewissens mit "Ja" beantworten oder      wegdrücken kann.  Nach Beendigung der automatischen Installation die Pfadangaben in der      Umgebungsvariablen ergänzen:  Start -&gt; Einstellungen -&gt; Systemsteuerung -&gt; System -&gt; Erweitert -&gt; Umgebungsvariablen im Feld      "Systemvariablen"      auf "Path" doppelklicken, dann bei      "Wert der Variablen"      hinten anfügen:  ;C:\Perl\bin;C:\Apache2\bin   und in der Datei C:\Apache2\conf\httpd.conf nach der Zeile beginnend mit "ScriptAlias" folgende Zeilen ergänzen:       # # ----------------------- allegro settings --------------------------- # Paths to allegro scripts and documents # (1) RuckZuck Alias /avdemo/ "C:/www/scripts/ruckzuck/php/" # (2) acwww25 ScriptAlias /acwww25/ "C:/www/scripts/acwww25/httpd/cgi-bin/acwww25/" # (3) Populo ScriptAlias /populo/ "C:/www/scripts/populo/" Alias /popimg/ "C:/www/htdocs/popimg/"  # # Tells Apache where to locate the interpreter for CGI scripts ScriptInterpreterSource registry # ----------------------- /allegro settings --------------------------       Die Perl-Installation muss noch vervollständigt werden, indem man        Windows mitteilt, wo der Perl-Interpreter zu finden ist: z.B. mit der        rechten Maustaste auf eine Datei mit der Endung ".pl" klicken,        aus dem Kontext-Menü      "Eigenschaften"        auswählen, bei      "Öffnen mit" den Knopf "Ändern"         drücken und den Perl-Interpreter eintragen:  C:\Perl\bin\perl.exe   Als nächstes die Datei C:\Apache2\php.ini-recommended nach php.ini im        selben Verzeichnis kopieren. Damit werden sinnvolle PHP-Einstellungen        gewählt.   Der folgende Befehl installiert den Apache Systemdienst:  C:\Apache2\bin\Apache.exe -k install  Den Computer neu starten um die Einstellungen wirksam werden zu lassen        und den Apache Systemdienst in Gang zu setzen.  Im Folgenden sind administrative Rechte nicht        mehr erforderlich.  2.3.1 Test von Apache 2  Einen Internetbrowser starten und die Adresse http://localhost/ oder http://127.0.0.1/ eingeben. Es sollte eine Seite erscheinen, die mit den Worten beginnt:   Es klappt! Der Apache-Webserver ist auf dieser Website installiert!      [...]   2.3.2 Test von Perl  Irgendwo eine Datei hello.pl anlegen, die die folgende Zeile enthält:  print "Hello World!";  Eingabeaufforderung öffnen, ins Verzeichnis wechseln, wo sich diese        Datei befindet, und den folgenden Befehl eintippen:  perl hello.pl  Jetzt sollte eine Zeile erscheinen mit  Hello World!   2.4 Dokumentation  Mit der Installation wurden automatisch auch die Dokumentationen zu Apache,        mod_perl und Perl auf der lokalen Festplatte angelegt. Sie können        in folgenden Verzeichnissen gefunden werden:     Apache  http://localhost/manual/index.html    mod_perl  C:\Apache2\modperl\index.html    Perl  C:\Perl\html\index.html    Alle Dokumentationen, einschließlich derjenigen zu PHP, sind auch        online einsehbar:    Apache  http://httpd.apache.org/docs-2.0/de    mod_perl  http://perl.apache.org/docs/    PHP  http://www.php.net/manual/de/         3. Kommunikation der Komponenten  3.1 Test der Kommunikation Avanti  Perl über        TCP/IP  Hierzu kann ein angepasstes Testskript tcp-ip2.pl dienen (  http://www.ghil.ac.uk/util/tcp-ip2.pl ,        basiert auf dem alten tcp-ip.pl aus dem avanti-w-Paket), das über eine Socket-Verbindung mit Avanti2        kommuniziert. Kommando-Fenster öffnen, ins Verzeichnis wechseln,        wo sich dieses Skript befindet und dann folgenden Aufruf eingeben:  perl tcp-ip2.pl  Die gleiche Ausgabe wie bei 1.3 sollte erscheinen.  3.2 Test der Kommunikation Apache  Perl / mod_perl  Zum Test des Common Gateway Interfaces (CGI-Perl/1.1) in einem      Webbrowser die folgende Adresse eingeben:   http://localhost/cgi-bin/tryit.cgi Die Eingabeaufforderung eines einfachen CGI-Programms sollte im Browserfenster      erscheinen ("A Simple Example").  Zum Test von "mod_perl" in einem Webbrowser die foldende Adresse eingeben:   http://localhost/hello Dadurch wird das Skript C:\Perl\site\lib\Apache2\Apache\Hello.pm aufgerufen und es sollte eine "Hello"-Nachricht mit der aktuellen Uhrzeit im      Browserfenster erscheinen.  3.3 Test der Kommunikation Apache  PHP  Zum Test von PHP in einem Webbrowser die folgende Adresse      eingeben:  http://localhost/hello.php  Es sollte eine umfangreiche Informationsseite erscheinen.   4. Installationen der Demo-Datenbank  4.1 Ruckzuck (PHP)  4.1.1 Bezugsquelle  Internet:  http://ftp.allegro-c.de/aktuelle-version/avanti (Benutzername und Passwort sind notwendig) Installationsdatei: phpac.exe (01.04.2005, 209,956 Byte)  4.1.2 Zielverzeichnisse  Im Verzeichnis C:\www eine neue Unterverzeichnisstruktur C:\www\scripts\ruckzuck erzeugen. Selbstentpackende Datei phpac.exe durch Doppelklick öffnen und nach C:\www\scripts\ruckzuck entpacken.  Dort gibt es jetzt vier neue Unterverzeichnisse:  \avlib \doku \param \php  Die Dateien aus dem Verzeichnis \param in das Verzeichnis C:\database\avdemo kopieren (neueste Version nehmen, wenn Dateien bereits existieren).   4.1.3 Test  Einen Browser öffnen und folgende Adresse eingeben:  http://localhost/avdemo/detail.php Es sollte ein Abfrageformular erscheinen und Recherchen in der Demodatenbank        ermöglichen. Wenn dies nicht der Fall ist, dann bitte überprüfen, ob die Pfadangabe unter Alias /avdemo/ "C:/www/scripts/ruckzuck/php/" in der Konfigurationsdatei C:\Apache2\conf\httpd.conf mit dem tatsächlichen Pfad C:\www\scripts\ruckzuck exakt übereinstimmt.  4.1.4 Dokumentation   http://www.allegro-c.de/ruckzuck.htm#php   http://ftp.allegro-c.de/aktuelle-version/phpac.rtf  (ausführlicher, Login erforderlich) auch enthalten im Installationspaket als Datei ruckzuck.rtf bzw. phpac.rtf .   4.2 acwww25 (Dierk Hoeppner)  4.2.1 Bezugsquelle  Internet: http://ftp.allegro-c.de/pub/anwender (freier Zugang) Installationsdatei: acwww25.exe (29.8.2003, 319.469 Bytes)  4.2.2 Zielverzeichnisse  Im Verzeichnis C:\www\scripts ein neues Unterverzeichnis \acwww25 anlegen. Selbstentpackende Datei acwww25.exe dort hineinlegen und durch Doppelklick entpacken.  Im Verzeichnis C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\lib gibt es zwei Perl-Skripte acwww25.pl und cgi-lib.pl , die zu den anderen Perl-Skripten        ins übergeordnete Verzeichnis C:\www\scripts\acwww25\httpd\cgi-bin\acwww25 verschoben werden sollten.  4.2.3 Anpassungen  Die Perl-Skripte müssen einzeln mit einem Texteditor geöffnet        und angepasst werden. Leider ist dies auch dann notwendig, wenn 'nur'        die Demo-Datenbank aktiviert werden soll.  4.2.3.1  Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\opac\dbinfo.pl  Zeile beginnend mit "$DBPfad" ändern in:  $DBPfad="C:\\database\\avdemo";  4.2.3.2  Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\acwww25.pl  Zeile beginnend mit "$HTMLScriptPfad" ändern in:  $HTMLScriptPfad="/acwww25";  Zeile beginnend mit "$AllegroW3CGIPfad" ändern in:  $AllegroW3CGIPfad = ""; (Funktion wird durch ein ScriptAlias in der Apache Konfiguration übernommen.)  4.2.3.3 Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\acindex.pl  Zeile beginnend mit "$scriptpfad" ändern in:  $scriptpfad = $dbscripte{ $in{'db'}        }."\\";  4.2.3.4 Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\allegro.pl  Zeile beginnend mit "$scriptpfad" ändern in:  $scriptpfad = $dbscripte{ $in{'db'}        }."\\";   4.2.3.5 Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\maske.pl  Zeile beginnend mit "$scriptpfad"        ändern in:  $scriptpfad = $dbscripte{ $in{'db'}        }."\\";  4.2.3.6 Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\regsrch.pl  Zeile beginnend mit "$scriptpfad"        ändern in:  $scriptpfad = $dbscripte{ $in{'db'}        }."\\"; Zeile beginnend mit "open( SORTIERT," ändern in:  open( SORTIERT, "&gt; $arbverz\\$sortiert"        ); Zeile beginnend mit "read $arbverz" ändern in:  read $arbverz . "\\" . $sortiert    4.2.4 Test  Einen Browser öffnen und folgende Adresse eingeben:   http://localhost/acwww25/maske.pl?db=avdemo  Es sollte ein Abfrageformular erscheinen und Recherchen in der      Demodatenbank ermöglichen.  Wenn die Datums und Zeitangabe in der Titelanzeige nicht richtig funktioniert,        dann sind noch die Zeilen unterhalb "#Zeitstempel"        in der Datei C:\www\scripts\acwww25\httpd\cgi-bin\acwww25\regsrch.pl anzupassen, z.B.  $year += 1900;    ###        hinzugefügt $mon = $mon + 1; # $hour=$hour+2;  ### deaktiviert   4.2.5 Dokumentation   http://www.allegro-c.de/doku/acwww25/index.htm auch enthalten im Installationspaket als Datei \doc\acwww25.htm .   4.3 Populo (Thomas Berger)  4.3.1 Bezugsquelle  Internet:  http://www.gymel.com/populo/ Installationsdatei: pop_1_16.zip (19.5.2003, 351.130 Bytes)   4.3.2 Zielverzeichnisse  Zip-Datei pop_1_16.zip in ein beliebiges leeres temporäres Verzeichnis entpacken (bitte        beim Unzippen darauf achten, dass die Verzeichnisstruktur erhalten bleibt).        Im temporären Verzeichnis gibt es jetzt drei neue Unterverzeichnisse:  \base \demo \html   Ein neues Unterverzeichnis C:\www\scripts\populo anlegen. Zur Installation von Populo den Inhalt des Verzeichnisses \base nach C:\www\scripts\populo kopieren.  Zur Installation der Demodatenbank den Inhalt des Verzeichnisses \demo samt Unterverzeichnissen nach C:\www\scripts\populo kopieren. Ein neues Unterverzeichnis C:\www\htdocs anlegen. Dann das gesamte Verzeichnis C:\www\scripts\populo\popimg nach C:\www\htdocs\popimg kopieren.    4.3.3 Test  Einen Browser öffnen und folgende Adresse eingeben:  http://localhost/populo/avdemo.pl   4.3.4 Dokumentation  http://www.gymel.com/populo/bin/populo.pdf oder   http://www.gymel.com/populo/htmldoc/populo.htm auch enthalten im Installationspaket als Datei populo.pdf .   Kommentare und Fragen senden Sie bitte an: cschoenberger@ghil.ac.uk Vielen Dank an Martin Butkus und Thomas Berger für Hinweise und Ergänzungen        zu dieser Anleitung.    
</fragment>
</item>
<item>
<fragment>
&gt;  Das Menue Finden / Export - Anleitung zur Benutzung von alcarta                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   a30 - RIA für allegro   Hauptprogramm  a99   OPAC Programm alcarta   allegro-C Installation   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                Anleitung zur Benutzung von alcarta             Das Menü     F inden    · Finde-Menü - Dasselbe, wie wenn man den  Fernglas-Button betätigt   · Index 1 - Dasselbe wie beim Index-Button   · Index 2 - Dasselbe wie bei Alt+j : das zweite  Indexfenster.   E xport   Exportieren kann man mehrere Dinge:  · Aktueller Satz – den, der  gerade  angezeigt wird  · Aktuelle Ergebnismenge –  deren  Name auf dem länglichen Button unten rechts steht  · Kurzliste der Erg. Menge– schreibt  die Kurzzeilen aller Sätze in die Ausgabedatei in eine Datei brief.rtf ,  die man z.B. mit WinWord einlesen kann.  Folgende zwei Punkte sind evtl. vom Systemverwalter nicht freigegeben:   · Andere Exportdatei – Wenn in  eine andere Datei statt OUTPUT.DAT geschrieben werden soll.  · Andere Exportparameter – Wahl  einer anderen Struktur der Ausgabedaten (Kap. 10)  · Exportdatei löschen – Damit  kann man bequem die Ausgabedatei beseitigen  · Komfort-Methoden – Es kommt  ein  Menü aller zusätzlichen Exportfunktionen, z.B. zur Erstellung  von Tabellen oder ViewListen. Dazu gibt es ausführliche Hilfe.                     [i] zuletzt aktualisiert:         08.04.2011 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
&gt;  allegro-C - Bibliothekssoftware                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Datenformate und Katalogregeln   Format 2004 - allegro - Standard   Neutralformat für Metadaten   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig              allegro-Format        2004               Vorbemerkungen   Bibliographische      Daten   Geschäftsgangsdaten   Normdaten-Stammsätze   Anhänge     Sie können sich diese Dokumentation auch aufIhren eigenen Rechner laden ! Eine Kurzdarstellung mit mehr Hintergrundinformation gibt es im Formate-Handbuch  Hinweis: In den Tabellen steht [SP] für ein Spatium (Leerzeichen), $ für das Teilfeldzeichen (Dreieck)       [i] zuletzt aktualisiert:         08.04.2011 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
Erläuterungen               zur 1. Schlagwortkette    Format-Konkordanz Synopsis   Erläuterungen zur 1. Schlagwortkette   Pica+ 041A09  Pica3 5109 Angaben zur 1. RSWK-Kette Pica+ 045D/00 Sach- Geo- und freie Schlagwörter der 1. Kette 045D/02 Person(en) zur 1. Kette 045D/04 Körperschaft(en) zur 1. Kette 045D/06 Freie Schlagwörter zur 1. Kette 045D/08 Zeitangaben zur 1. Kette 045D/40 Sach- Geo- und freie Schlagwörter zur 5. Kette ... 045D/59 Datenlieferant und Lieferungsdatum Pica3 5200 Sach- Geo- und freie Schlagwörter der 1. Kette 5202 Person(en) zur 1. Kette 5204 Körperschaft(en) zur 1. Kette 5206 Freie Schlagwörter zur 1. Kette 5208 Zeitangaben zur 1. Kette 5240 Sach- Geo- und freie Schlagwörter zur 5. Kette ... 5259 Datenlieferant und Lieferungsdatum MAB 904 (W2)     Indik.: # nicht definiert a Herkunft / Nutzung der Schagwortkette 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Schlagwortketten-               Permutationsmuster    Format-Konkordanz Synopsis   Schlagwortketten-Permutationsmuster   Pica+ 041A08  Pica3 5108  MAB 903 Permutationsmuster der 1. Schlagwortkette allegro  #330$P  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
&gt;  div.MsoNormal {mso-style-unhide:no;mso-style-qformat:yes;mso-style-parent:"";margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;mso-pagination:widow-orphan;font-size:11.0pt;font-family:"Calibri","sans-serif";mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:minor-bidi;mso-fareast-language:EN-US;}li.MsoNormal {mso-style-unhide:no;mso-style-qformat:yes;mso-style-parent:"";margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;mso-pagination:widow-orphan;font-size:11.0pt;font-family:"Calibri","sans-serif";mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:minor-bidi;mso-fareast-language:EN-US;}p.MsoNormal {mso-style-unhide:no;mso-style-qformat:yes;mso-style-parent:"";margin-top:0cm;margin-right:0cm;margin-bottom:10.0pt;margin-left:0cm;line-height:115%;mso-pagination:widow-orphan;font-size:11.0pt;font-family:"Calibri","sans-serif";mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:minor-bidi;mso-fareast-language:EN-US;}  VuFind: ein neuer Web-OPAC für allegro-Daten                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Datenaustausch eines VuFind-Web-OPAC für allegro-Daten         Inhalt der Seite  Entscheidend                      ist also zunächst einmal, daß man aus seiner allegro-Datenbank   heraus                      die Daten im MARC-Format exportieren kann.       Nehmen                      wir an, auf  r:\opac  liegt die Datenbank namens "kat".                      Es gibt also eine   Anzahl                      von Datendateien namens  kat_N.ald. Um zu                      sehen, wie es geht, wollen wir   zuerst                      mal die Datei  kat_41.ald umwandeln. Das                      geschieht mit den Exportparametern   marctxt.apr.                      Darin eingebunden ist  ad-utf.apt, die                      Tabelle zur Zeichenumwandlung   von                      DOS-Code in UTF-8 (Unicode). VuFind arbeitet nur mit Unicode!       (Wenn                      man nicht das a-Format hat, sondern z.B. p.cfg (Pica-Format), dann muß   man                      sich eine  marctxt.ppr  schaffen! Oder seine Pica-formatierten Daten                      in   a-Daten                      wandeln und diese weiter mit marctxt.apr exportieren.)           Auf  C:\allegro  folgenden Befehl geben, um gezielt die Datei kat_41.ald zu wandeln:   (-kp                      statt -ka  und  .pld statt .ald, wenn man p.cfg hat) (Statt                      srch auch srch32)       srch -f4 -s#20/#19 -dr:\opac\kat_41.ald                      -br:\opac\kat -emarctxt/mdat.txt -ka -m0 -v0       (Mit                      dem Suchbegriff -s#20/#19 werden nur die echten Titeldatensätze exportiert,   nicht                      die Normdaten, Exemplar- und Bestelldaten, Ausleihdaten etc.)        mdat.txt ist im MARC Textformat, in dem ein                      Satz so aussieht:       =LDR  01234cam a22002771a 45e0   =001  597571279   =008  100813s2009\\\\n\\\\\\\\\\\\\\0000\eng\d   =010  \\$a2009014437   =020  \\$a9781568988139   =050  \0$aNA680   =082  00$a724/.7   =090  \\$aLS1'AR A 847 = 2897-8583   =090  \\$aG1'O7-057   =100  1\$aGartman , David   =245  00$aFrom autos to architecture :$bfordism and architectural aesthetics                      in the twentieth century /$cDavid Gartman   =246  10$aFordism and architectural aesthetics in the twentieth century   =260  \\$aNew York, NY :$bPrinceton Architectural Press,$c2009   =300  \\$a400 S. : Ill   =500  \\$aIncludes index   =650  \0$aArchitecture, Modern -- 20th century   =650  \0$aArchitecture and society -- History -- 20th century   =856  \0$uhttp://www.gbv.de/dms/weimar/toc/597571279_toc.pdf       Das                      Zeichen \ steht fÜr blank, also Leerzeichen, an denjenigen Positionen,   wo                      eines stehen muß, wenn dort nichts anderes steht, also vor allem bei den   Indikatoren                      und im Festfeld 008.       Der                      allegro-Originalsatz sieht so aus (einige Felder weggelassen):       #00 597571279   #20 From autos to architecture : fordism                      and architectural aesthetics in    the twentieth century   #23 Fordism and architectural aesthetics                      in the twentieth century   #32B724/.7   #32LNA680   #33LArchitecture, Modern -- 20th                      century; Architecture and society --    History -- 20th century   #37 eng   #39 David Gartman   #40 Gartman , David   #74 New York, NY   #75 Princeton Architectural Press   #76 2009   #77 400 S. : Ill   #81 Includes index   #87 978-1-568-98813-9   #89P597571279   #8e http://www.gbv.de/dms/weimar/toc/597571279_toc.pdf ▼ tInhaltsverzeichnis    #90 ▼ LLS1 ▼ sAR A 847 = 2897-8583 ▼ a84$028978583                            [i] zuletzt aktualisiert:         09.01.2012 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  Anpassen der Vufindinstanz - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Anpassen der Vufind Instanz         Inhalt der Seite  VIII. Buchcover und Statusmeldungen   Einbau von Buchcover unterschiedlicher Anbieter am Bsp. von Google Search    Einfügen von Statusmeldungen auf den einzelnen Auswerte Formularen     Wichtige Dateien die beim Anpassen des Vufind - Inhalts und Layouts editiert werden     Quellcode  Beschreibung/Layoutposition    c:\vufind\web\RecordDrivers\Index\IndexRecord.php  Index Record Driver    c:\vufind\web\services\Record\xsl\MARC21slim2RDFDC.xsl  Stylesheet XSL    c:\vufind\web\interface\themes\default{Benutzerverzeichnis}\ReordDriver\index\result.tpl  Template Ergebnis Abfrage    c:\vufind\web\interface\themes\default{Benutzerverzeichnis}\ReordDriver\index\core.tpl  Template Detailergebnis Abfrage    c:\vufind\web\interface\themes\default{Benutzerverzeichnis}\ReordDriver\index\extended.tpl  Template Detailbeschreibung Erweiterte Abfrage    c:\vufind\web\conf\config.ini  Konfigurationsdatei    c:\vufind\web\Drivers\interface.php  Treiber Schnittstelle    c:\vufind\web\Drivers\Demo.php  Treiber für Demoabfragen    c:\vufind\web\Drivers\Sample.php  Treiber für Beispielabfrage    c:\vufind\web\services\Record\xsl\record-marc.xsl  Aufbau Internformat    c:\vufind\web\xsl\sru-convert.xsl  Abfrage Internformat                             [i] zuletzt aktualisiert:         10.01.2012 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
   allegro-Programme kompilieren unte rLinux       Kompilieren unter Linux und Solaris mit GNU autotools    Kollege Oberfell sandte vor einer Weile eine ganz gute Zusammenfassung wichtiger Schritte:  http://sun250.biblio.etc.tu-bs.de/pipermail/allegro/2012-March/035165.html   Und dann war da noch diese Handreichung:  http://sun250.biblio.etc.tu-bs.de/pipermail/allegro/2012-January/034765.html   fußend auf  http://www.lugod.org/presentations/autotools/presentation/autotools.pdf   Dies nun einmal durchspielend für osdp, mit diesem Dateienbestand im Ordner osdp: (die daneben noch bereitgestellten sind hinfällig bzw. nur für Windows-VC)  Makefile.am osdp.cpp uif0ger       (nur zum Testen)  und parallel liegenden ac15 und aindex, dort bereits die libraries libac15.a bzw. libaindex.a, ergibt dann folgende Sequenz: (Reinschauen in die jeweils entstehenden --&gt;Dateien, man sieht dann schon worum's geht)  autoscan --&gt; configure.scan  mv configure.scan configure.ac  autoheader --&gt; autom4te.cache config.h.in  vim configure.ac Ergaenzung direkt nach AC_INIT: AM_INIT_AUTOMAKE Ergaenzung unter # Checks for programs AC_PROG_RANLIB  aclocal --&gt; aclocal.m4 und Aenderungen an configure.ac  Dateien NEWS, README, AUTHORS, COPYING und ChangeLog bereitstellen, Inhalt egal, sonst Fehlermeldung bei:  automake --add-missing --copy --&gt; INSTALL  autoconf --&gt; configure  automake --&gt; Makefile.in  ./configure --&gt; config.status --&gt; config.log --&gt; config.h --&gt; stamp-h1 --&gt; Makefile  Das letzte ist es, was wir die ganze Zeit wollen.  Nun in Makefile (warum, führt jetzt zu weit) die Zeile INCLUDES = -I$(top_srcdir)/ac15 -I$(top_srcdir)/aindex ersetzen durch INCLUDES = -I../ac15 -I../aindex  Dann  make  und es entsteht das Executable  osdp Es ist auffällig groß, denn es enthält Debugging-Sachen. Die wird man los mit  strip osdp  Und nun haengen Sie noch einen Ordner  demo  mit der DemoBank dran und schaffen sich dieses File  test.bef:  OPTIONS -b cat -d demo -r 3  COMMANDS find shakespeare keys  Dieses Befehlsskript übergibt man osdp mit folgendem Befehl:  ./osdp &lt;test.bef  Der Befehl "find shakespeare" findet über Register 3 den ersten Eintrag, der mit "shakespeare" beginnt und lädt den Satz. Der Befehl "keys" wirft seine Schlüssel aus. Welche Befehle osdp sonst noch kennt, steht in osdp.cpp kommentiert.  B.Eversberg   
</fragment>
</item>
<item>
<fragment>
   FreiRaumEinstieg     a30FreiRaum : Einfachster Einstieg  Doku zum "FreiRaum"    Die FreiRaum-Technikermöglicht es, eigene Menüs mit eigenen Funktionen undfunktionalen Unterfenstern für die eigene a30-Anbindung zuerstellen, ohne sich mit ActionScript, JavaScript, PHP und XMLbeschäftigen zu müssen. Nur allegro-FLEX, schlichtes HTML unddie sehr leicht gestaltbaren FreiRaum-Elemente, mehr nicht.  1.Kleine Vorübung: "Hallo Welt"  Auf dasStartverzeichnis der Datenbank (wo PHPAC liegt), diese einzeiligeDatei legen:   Datei hallo.txt  _!_POPHallo Welt    In a30 direktaufrufen: hhallo.txt eingeben. ( Sofortprobieren an der DemoBank .Auf deren Menü findet man eine Reihe weitererFreiRaum-Anwendungen, z.B. "Dollarkurs" , "NumCon" und "Kalender", auchdie "Sonderfunktionen")   1a. Denselben Text in einer html-Datei verlinken: (in a30 direkt eingeben: h hallo.htm )   Hierklicken, um Demo zu testen:  Hallo-Welt-Demo    2.Dasselbe als Job  Auf das Jobverzeichnisder Datenbank (unterhalb PHPAC, z.B. ./demojobs ),diese einzeilige Datei hallo.job legen:   wri"_!_POP HALLO WELT"   In a99 direktaufrufen: X hallo eingeben    3.Simples FreiRäumchen   Textdatei simpel.txt :  _!_FRE1 IN VurS|200 BU Go!|a30sim -- IM close.png|_!!_FRE1 - TT Schließen   In a30 direktaufrufen: hsimpel.txt eingeben. Beim Klick auf Go! wird der Job a30sim.job gestartet und ihm derEingabetext in der Variablen #urS übergeben. Der Job  a30sim.job  wird mitgeliefert und führt die Suche im ALL-Register aus.   Denselben Aufruf in einerhtml-Datei verlinken:   Hierklicken, um Simpel zu testen:  Suchschlitz-Demo   4. Etwas umfangreicheresBeispiel:  find.txt   In a30 direktaufrufen: hfind.txt eingeben. Es erscheint ein Unterfenster mit dem find-Menü -komplett erstellt mit FreiRaum-Technik und allegro-FLEX.       
</fragment>
</item>
<item>
<fragment>
&gt;      Anhang 6: Adobe Flex SDK installieren, ... - a30-RIA für allegro                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig                a30 - Plattformunabhängiges Programm zur Nutzung von            allegro-Datenbanken im Netz auf der Basis des Systems            "Adobe Flex"              Anhang 6 :  Adobe FlexSDK installieren, Quellprogramme bearbeiten, a30 neu kompilieren   Hiermit braucht sich nur zu befassen, wer die Oberfläche oder die Funktionen des Programms modifizieren will. MachenSie zuerst einmal alles genauso, wie hier beschrieben. So kommen Sie amschnellsten und einfachsten zu einem funktionierenden Projekt und zumEinstieg in das Programmieren mit Adobe Flex.    Zuerst holt man sichdas kostenlose Paket Flex3.4 SDK von Adobe: http://www.adobe.com/products/flex/ .  Es handelt sich um eine Datei flex_sdk_3.4.zip . Entpacken Sie diese in c:\flex .     Man hängt an dieses Verzeichnis noch einUnterverzeichnis a30 (also c:\flex\a30 ) und entpackt darin das a30-Quellpaket ausBraunschweig. Darin sind die Quellprogramme a30.mxml , kurzliste.mxml und fr2.mxml sowiefür die Formulartechnik dasUnterverzeichnis a30form .    Bearbeiten kann man die Quelltexte sehr gut mit Notepad++, wenn manwahlweise als Sprache "Flash Actionscript" bzw. "XML" einstellt.    Nach einerQuelltext-Änderunggibt man auf c:\flex\a30 im DOS-Fenster den Befehl comp.bat und erhält ein neu kompiliertes a30.swf . (In der comp.bat sieht man, wie der Compiler aufgerufen wird, das ist sehr einfach.)    Man kopiert es nach c:\xampp\htdocs\a30 (siehe B.2 ), löscht im Browser den Cache und startet das neue a30 zum Testen mit http://localhost/a30 .   Eine umfassende Flex-Dokumentation hat man im Unterverzeichnis c:\flex\doc .  Rufen Sie im Browser folgende Startseite auf, sie führt zur Sprach-Referenz für Adobe Flex und Actionscript:    c:\flex\doc\langref\index.html                             [i] zuletzt aktualisiert:         03.05.2011 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;  allegro-C - Bibliothekssoftware                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Dokumentationen   Veröffentlichungen   allegro news bis 2002   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           RIA-Systeme - Ein Überblick         RIA bedeutet R ich I nternet A pplication ( R eichhaltige I nternet a nwendung). Was genau soll hier "Rich" besagen? Damit ist vor allem eingrößerer Reichtum an Funktionen und dynamischen Inhalten gemeint.Eine genauere Definition ist schwierig. Es handelt sich um einen neuen Megatrend in der Kernzone des Web 2.0. Dazu ein kurzer Rückblick:     Bis etwa 1980 : DV nur zentral in sog. Rechenzentren, Nutzung über "dumme" Endgeräte (Terminals).     80er Jahre : Dezentralisierung von Rechenleistung und Datenhaltung (der " persönliche Rechner " am Arbeitsplatz).    90er Jahre : Rezentralisierung : Vernetzung der PCs ( LAN ) ermöglicht lokal-zentrale (verteilte) Datenhaltung und Mehrplatzsysteme.     Nach 2000 : Globalisierung : Neue globale Dienste dank Internet , zunächst dominiereninteraktive Nutzungen per Browser, dabei ist für die Netzdienste der PC wenig mehr als einTerminal, zugleich aber enorme Steigerung der Leistung am Arbeitsplatz.     Ab 2005 : Web 2.0 . Diffuse Verteilung : Asynchrone Nutzung des Internet nimmt zu, mit tiefergehenderDezentralisierung von Rechenleistung und Datenhaltung: nichtentweder-oder, sondern Anwendungen können sich bei Bedarf Datenaus dem Netz holen, und das nicht nur jeweils von einer bestimmtenAdresse. Die Netz-Infrastrukturführt und hält alles zusammen. Stichwort "Mashup". Hier ordnet sich das RIA-Konzept ein.       Einige Merkmale von RIAs  Nicht alle diese Merkmale treten bei jeder RIA auf:   In jedem Fall handelt es sich um eine Client-Server-Anwendung, jedoch evtl. mehr als ein Server im Spiel  Eine RIA arbeitet nicht mit Seitenkonzept wie HTML (wo jeder Klick die gesamte Anzeige neu aufbaut),  ist auf jeder Plattform (falls browserbasiert: in jedem Browser) nutzbar, ohne sichtbare Unterschiede.  Kontrollelemente wie bei Desktop-Anwendungen(Menüs, Tree views u.a.)  Mehr Tastaturbedienung möglich als bei Webanwendungen, oft auch drag&amp;drop  Client übernimmt einengrößeren Teil der Rechenleistung, nicht nur das Display, und fordert nur die wirklich benötigten Daten an,  dadurch Entlastung von Server und Netz  selbständige (asynchrone) Kommunikation mit dem Server per HTTP  REST-Architektur: "zustandslose" Kommunikation (d.h. keine "Sitzung", keine "Cookies", nur HTTP als Protokoll)  Auf Serverseite i.a. jede Skriptsprache verwendbar.Z.B. Kommunikation mit einer allegro -Datenbank über PHP und avanti  Anwendung kann offline arbeiten, falls keine Daten vom Server gebraucht werden  Die gewohnten Browserfunktionen sind teilweise leider nicht nutzbar, vor allem der Back-Button!   Lesender und schreibender (!) Zugriff aufdas lokale Dateisystem kann u.U. ermöglicht werden, d.h. lokaleDatenhaltung (dann nicht browserbasiert)    Mögliche Problempunkte    Systemvoraussetzungen (Betriebssystem, Browser(version), Laufzeitumgebung, Plugins)  Barrierefreiheit (accessibility), d.h. alle Funktionen über lesbare Texte zugänglich?  Gezielte ("tiefe") Verlinkung von außen möglich, z.B. auf einzelne Datensätze, Ergebnismengen, Registerstellen?   Diemeistverbreiteten Technologien  Das erste Beispiel waren die Java Applets ,die sich aber nicht überzeugend durchgesetzt haben (s.u. Nr. 6).Ein berühmtes RIA ist Google Earth, das man mittels eines API(Application Programmer Interface) ja auch in eigene Webseiteneinbinden kann und das den Umgang mit Geodaten revolutioniert hat.  Derzeit gibt es mindestens 7Systeme für das Entwickeln von RIAs, die hier kurz vorgestellt werden. Die Reihenfolge ist keine Wertung. Für die ersten zwei gibt es allegro -Anwendungen (Okt. 2009).   1. AJAX http://www.allegro-c.de/doku/phpac/ajaxt.htm Beispiel: Gmail  Architektur: reine HTML-Technologie, kein Plugin, daher injedem Browser sofort lauffähig  Sprache: JavaScript und CSSfür den Browser (Unterschiede zw. den Browsern!), beliebige Skriptsprache auf Serverseite  Entwicklungstool: grundsätzlich keins erforderlich aber es gibt diverse kostenlose Frameworks wie  jQuery mit Erweiterung jQuery UI ,  dojo ,  scriptaculous , DWR (auch fürServerseite!) und http://www.ajax.org/#docs (Ajax.org platform referenceguide).    allegro-Anwendung:  PHPACfür allegro nutzt AJAX-Technik, z.B. auchfür Vormerkung, Verlängerung, Nutzerkonto. Leicht ausbaufähig.  Zukunft: Mit HTML5 könnte AJAX neuen und starken Auftrieb erhalten, aber noch sind(2010) die gängigen Browser nicht zu voller Unterstützung vonHTML5 in der Lage. Gute Kenntnis von JavaScript bleibt wichtig.     2. Adobe Flex 3  http://www.adobe.com/products/flex Beispiele: PhotoShop.com und flex.org/showcase_page   Architektur: Anwendung ist ein .SWF-Programm, das den Flash-Player benötigt (angeblich auf 98% der PCs weltweit vorhanden)  Sprache: MXMLfür den visuellen Teil, ActionScript (ähnlichJavaScript) für die Logik. Serverseitig: Jede Skriptsprache.  Entwicklungstools:  a) kostenloses Flex SDK 3.4 mit Compiler, b) kostenpflichtiger Flex Builder(Eclipse), c) AIR SDK (kostenlos) erzeugt aus einem .SWF-Programm eine echte Desktop-Anwendung mit lokaler Datenhaltung   Doku:  http://www.adobe.com/support/documentation/en/flex/ oder http://www.adobe.com/devnet/flex/ ,   sehr zu empfehlen auch Tourde Flex   allegro-Anwendung: a30 [kann für viele Aufgaben auf JavaScript, PHP und HTML ganz verzichten]  Zukunft:  Apple versucht mit iPhone und iPad massiv - Flash wird davon ferngehalten - Adobe aus dem Geschäft zu drängen.    3. Microsoft Silverlight 2 (Version1 von 2006 ist wenig mächtig und veraltet) Beispiele:  Silverlight Showcase   http://www.microsoft.com/germany/net/silverlight/default.aspx   Moonlight :OpenSource-Version von Novell, nur für Linux (von Microsoftunterstützt)  Architektur: Presentation Framework (user interface) und .NET-Framework(API Services für Webanwendungen)  Sprache: XAML(eXtensible Application Marcup Language), deklarativ,XML-ähnlich, zur Definition von Oberflächenstrukturenbis hin zu Animationen. Clientseitig ansonsten jede von .NET unterstützte Sprache.  Entwicklungstool: Expression Blend (visueller Teil) und Visual Studio (Logik) vonMicrosoft  Doku:  http://www.silverlight.net/getstarted/ und Huber: Silverlight4 , Galileo Press 2010, ISBN 978-3-8362-1413-1   4. Google Gears  http://gears.google.com Beispiel: Google Reader  (Offline Nachrichten und Blogs lesen) http://www.adobe.com/devnet/flex/tourdeflex/web/Architektur: ein Plugin, sehr leicht zu installieren, beruhtauf dem Ajax-Konzept, aber erweitert, so daß auchOffline-Ausführung möglich. Lokale relationale DatenbasisSQLite.  Konzept für Data Layer und Synchronisierung mitServerdaten. OpenSource unter BSD  Sprache: Nur JavaScript, HTML und CSS  Entwicklungstool: alles, was für JavaScript nutzbar ist  Doku:  http://code.google.com/intl/de-DE/apis/gears/   5. OpenLaszlo  http://www.openlaszlo.org  Beispiele: Fnac (Einkaufswagen, frz. Buchhandel); LaszloWebtop  [kostenpflichtig] Architektur:  DHTML, erfordert Flash  Sprache: LZX(XML-basiert für Oberfläche mit JavaScriptfür Prozeduren)  Entwicklungstool: ein Generator, der auf Java basiert und in einem J2EE Servlet Containerausgeführt wird, um Flash zu erzeugen  http://ftp.allegro-c.de/pub/DEMO-Version/demo-all.exeDoku:  http://www.openlaszlo.org/documentation    6. JavaFX  http://javafx.com und http://www.sun.com/software/javafx Beispiele: JavaFX Samples Architektur: Clientseitig JavaVirtual Machine erforderlich, ansonsten OpenSource  Sprache: JavaFXScript, ein vereinfachtes Java. Serverseitig vorzugsweise Java.  Entwicklungstool: NetBeans IDE oder Eclipse  Doku:  http://javafx.com/learn/   7. Curl 7 : "The Enterprise RIA Platform" http://curl.com Beispiele: Demos Architektur: erfordert Laufzeitumgebung Curl RTE. Ein JIT Compiler übersetzt denQuellcode. Mächtige Graphikfunktionen, unterstützt auch die Datenhaltung im Client .  Sprache: Curl  Entwicklungstool: Curl IDE mit Visual Layout Editor  Doku:  http://developers.curl.com/userdocs/CurlDocs.htm  / Whitepaper   Und außer Konkurrenz, weil nicht plattformunabhängig:   8. a99 : Das Hauptprogramm des Systems allegro-C  Architektur: Mit der Skriptsprache FLEX und dem Konzept aiaqs kann man aus dem Programm a99 heraus beliebige Zugriffe auf Serverdatenüberall im Internet einrichten: eine URL wird wie eine Dateigeöffnet und die Daten daraus mit FLEX gelesen und ausgewertet. Aber nicht nur HTTP kann man nutzen, sondern auch Z39.50 zum Abruf von Datensätzen aus Katalogdatenbanken. a99 ist allerdings nicht browserbasiert, sondern ein Desktop-Programm, das lokal installiert werden muß. Die Demo-Version ,die für diesen Zweck reicht, ist kostenlos verfügbar undschnell zu installieren auf jedem Windows-System, nicht jedoch aufanderen Plattformen.  Sprache:  FLEX (nicht zu verwechseln mit Adobe Flex, s.o. 2.)    Literatur zu RIA  Pfeil, Christian:Adobe AIR : RIAs für den Desktop entwickeln. - Addison-Wesley,2009. ISBN 978-3-8273-2737-6   Engineering Web Applications / Sven Casteleyn u.a. - Springer, 2009.  ISBN: 978-3-540-92200-1   Literatur zu Adobe Flex  Die Dokumentation zum Programmiersystem Flex3 von Adobe ist umfangreich. Wer sich ein wenig kundig machen will, kann folgende Adressen aufsuchen, die auf verschiedene Weise interaktiv ein e-Learning ermöglichen:   Tour de Flex  http://www.adobe.com/devnet/flex/tourdeflex/ (Download als AIR zur lokalen Verwendung ohne Browser)  Learn Flex  http://www.adobe.com/devnet/flex/learn/learningpath.html#type=role&amp;role=programmer  Flex Help  http://livedocs.adobe.com/flex/3/html/ http://www.libraryjournal.com/article/CA434443.html  Flex 3.3 Developer Guide   1328 Seiten!  http://livedocs.adobe.com/flex/3/devguide_flex3.pdf  Flex 3.3 Language Reference : Dokumentation aller Sprachelemente  http://livedocs.adobe.com/flex/3/langref/  Style Explorer Flex3 : Interaktiv alle Oberflächenelemente ausprobieren und variieren  http://examples.adobe.com/flex3/consulting/styleexplorer/Flex3StyleExplorer.html#   Natürlich gibt es auch Bücher. Das Verständnis wirdaber, wie bei jedem Programmiersystem, am besten durch eigenesAusprobieren beschleunigt. In fast jedem der Bücher wurde etwas Brauchbares gefunden,aber nichts davon steht in allen Büchern oder wäreüberall leicht zu finden oder zu verstehen. Das ausführlichste ist wohl der "Developer Guide", sieheoben, und man wird ihn nach einiger Einarbeitung bevorzugen und kaumnoch anderes brauchen.  :   Kazoun, Chafic: Programming Flex 3 : [the comprehensive guide to creating rich Internet applications with Adobe Flex] : Chafic Kazoun and Joey Lott. - Beijing [u.a.]: O'Reilly, 2008. - XX, 636 S. : ill ;  24cm (Adobe developer library) ISBN 978-0-596-51621-5  Adobe Flex 3 : das offizielle Trainingsbuch : Jeff Tapper u.a. - München [u.a.]: Addison-Wesley, 2008. - XXIX, 719 S. : Ill., graph. Darst ;  25 cm &amp; 1 CD-ROM ISBN 978-3-8273-2724-6 Originaltitel: Adobe Flex 3, training from the source   Pfeil, Christian: Adobe AIR : RIAs für den Desktop entwickeln. Know-how für HTML/Ajax- und Flash/Flex-Entwickler. Mit Technologie-Überblick. München : Adison-Wesley, 2009. - 354 S. ISBN 978-3-8273-2737-6  Balderson, Joseph, et. al. Professional Adobe Flex 3. Indianapolis : Wiley, 2009. - 1422 S. ISBN 978-0-470-22364-2  Gorton, Benjamin: AIR bible : [blur the line between the Web and the desktop ; create AIR applications with Flex and Flash ; build functional applications in the simplest way possible]. Indianapolis : Wiley, 2008. - 454 S. ISBN 978-0-470-28468-1  Reinhardt, Gerald: Praxiswissen Flex 3 : [moderne Rich-Internet-Anwendungen entwickeln mit Flex 3 ;  behandelt alle Schritte von der ersten MXML-Datei bis hin zum Debugging ;  mit vielen Beispielen und praktischen Übungen] : Gerald Reinhardt. Beijing [u.a.]: O'Reilly, 2009. - XV, 445 S. : Ill., graph. Darst ISBN 978-3-89721-860-4  Widjaja, Simon: Rich Internet Applications mit Adobe Flex 3 : [MXML, Actionscript, CSS - Komponenten und Module - AMFPHP und BLAZEDS - CAIRNGORM - ADOBE Air München: Hanser, 2008. - XVI, 472 S. : Ill ISBN 978-3-446-41366-5  Rüttger , Michael: Adobe Flex 3 : [alle Standard-UI-Komponenten und Interaktivität ; Zusammenspiel von Flex, MXML und ActionScript 3.0, Beispiele für Adobe Air;  Fehlersuche und Debugging] : Michael Rüttger. Heidelberg [u.a.]: mitp, 2009. - 559 S. : Ill ;  24 cm &amp; 1 CD-ROM ISBN 978-3-8266-5943-0  Waldminghaus, Petra: Adobe Flex 3 : [rich internet applications erstellen ;  Grundlagen, Werkzeuge, Frontend-Entwicklung ;  MXML und ActionScript verstehen und anwenden ;  multimediale Inhalte, Datenkommunikation, Chartgenerierung u.v.m] : Petra Waldminghaus. - 1. Aufl. Bonn: Galileo Press, 2009. - 504 S. : graph. Darst &amp; 1 DVD ISBN 978-3-8362-1117-8  McCune, Doug: Adobe Flex 3.0 for dummies : by Doug McCune, Deepa Submaraniam. - Hoboken, N.J.: Wiley, 2008. - XVI, 416 S. : Ill ISBN 978-0-470-27792-8  Weschkalnies, Nick Adobe Flash CS4 : das umfassende Handbuch ; [inklusive Bone-Werkzeug und 3D-Funktionen]. Bonn : Galileo, 2009. - 844 S. ISBN 978-3-8362-1256-4  Moock, Colin Essential ActionScript 3.0 : ... from the ground up. Köln : O'Reilly, 2007. - 909 S. ISBN 978-0-596-52694-8 (Gründliche Einführung in ActionScript, aber ohne MXML, dazu gibt es das Buch von C. Kazoun, s.o.)             [i] zuletzt aktualisiert:         26.04.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  allegro-C - Bibliothekssoftware - Skriptsprache Flex                                            Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Online - Einsteigerhandbuch   Flex - Dokumentation der Makrosprache   Volldokumentation Flex - Befehle - Alphabetisches Register   Volldokumentation Flex - Befehle nach Funktionen geordnet   Volldokumentation Flex - Alphabetisches Gesamtregister   Kurzdokumentation aller Flex - Befehle   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Skriptsprache Flex   FLEXist die Skript- oder Makrosprache für dasWindows- allegro- System. Fast alle Vorgänge,die man mit derHandauslösen kann, sind auch über einen FLEX-Befehl(Volldokumentation Flexbefehle) ausführbar, aber auchnochviele andere. FLEX wurde seit 1998 entwickelt, weil ein Datenbanksystem nichtflexibel einsetzbar sein kann, wenn es keine Möglichkeit zumAutomatisieren von Vorgängen bietet. Heute ist erreicht,daß dasallegro-Hauptprogramm a99 um beliebig viele Funktionen erweitert werden kann, ohne daßin dieQuellprogramme eingegriffen werden muß. Man schreibt FLEXe,die a99dann ausführt.   Alle Funktionen für Erwerbung und Ausleihe sind in FLEX neugeschrieben worden. Das ältere DOS-System benötigtenoch mehrereZusatzprogramme, um solche Funktionsbereiche bedienen zukönnen. WeitereBeispiele sind eine Kalenderfunktion ,ein Modul aresqa zur Kommunikation mit SQL-Systemen, eineWährungs-Umrechnungsfunktion(EuroUS-Dollar und Euro  DM) sowieauch vieleFunktionen zur Systemverwaltung.  FürEinsteiger gibt es das OnlineEinsteigerhandbuch von Carsten Elsner , auch als PDF zum Herunterladen undAusdrucken.   ZumSchreiben und Bearbeiten von FLEX-Dateien: Notepad++ mit Syntax-Highlighting und Autovervollständigung als Komplettversion oder als Notepad++Add-On !(Entwickeltvon C. Elsner)  Hier ist die FLEX-Kurzdokumentation: http://www.allegro-c.de/flex/flexikon/Kurzdokumentation.htm   Tip: LadenSie die FLEX-Dokumentation in denJanaS-Browser, dann haben Sie mehr davon! Dazu geben Sie in a99 diesen Befehlein:    janashttp://www.allegro-c.de/flex/flexikon.htm    Weitere Tips Zum Lernen gedacht sind auch die Beispiele, die man mit Alt+9 sofortausprobieren kann: h flexw eingeben. In a99 ruft man die FLEX-Gesamtdoku ab mit dem Befehl h flex .Dann findet man jetzt  Voll-Dokumentation  / Kurzdokumentation. Hinter der Voll-Dokumentation steckt deralphabetische Index aller Befehle, den man mit h xa direkt abrufen kann. Wer noch erst wenige Befehle kennt oder den passenden noch nichtgefunden hat, ruft mit v flex die ViewListe ab, in der man auch suchen kann.  Als Ergänzung gibt es eine Menge Tricks ,wie man sich das Leben dank FLEX erleichtern kann.         [i] zuletzt aktualisiert:         14.10.2014 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;    AJAX : Asynchronous JavaScript and XML - Teil 1 : Grundlagen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Formate+Regeln   Fortbildung   Dokumentation   Dokumentationen   Veröffentlichungen   allegro news bis 2002   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig             AJAX :      Asynchronous JavaScript and XML   Teil 1 : Grundlagen     Teil 2 : AJAX und avanti   Dieser Text soll einenknappen Einblick in AJAX geben,eine vielverheißende neueWeb-Programmiertechnik, die in jüngster Zeit als Mittel zurDynamisierung von HTML-Seiten wachsenden Zuspruch findet. Was steckt dadrin? Gibt es ein leichtverständliches Wirkprinzip? Worin liegtder Mehrwert? Was ist der Haken dabei?  Ganz kurz: Kennen mußman neben JavaScript und HTML auch PHP, nützen kann CSS, aber dasist alles, d.h. XML ist optional. Eine neue Sprache oder so etwas istAJAX nicht, sondern eine Methodik, mit der eine Webseite sich mitweiterer Information vom Server anreichern kann, während der Nutzer sie betrachtet. Schauen Sie sich im Quelltext dieses Dokuments das JavaScript im Headeran! (Weiter unten ist dasSkript aufgelistet, damit Sie es beim Drucken dieser Seite dabeihaben!) Das wichtige darin sind zweiFunktionen (die auch anders heißen dürfen):   requesT() : Sendet eine Anforderung ("request") ab, startet auf dem Server das Programm ajx.php  receivE() : Verarbeitet das zurückkommende Ergebnis im Browser    Nun steckt man bloß einenAufruf der Methode requesT() hinter eine Verknüpfung, eine Graphik oder einen Button oder was immer, wo sonst irgend ein normalerLinksein könnte, z.B. so wie hier:   [Aktion A]  &gt;&gt;&gt;Hier wird das Ergebnis des PHP-Programms ajx.php erscheinen  &lt;&lt;&lt;  [Aktion B]   Der Link hinter den Aktionenlautet javascript:requesT('abc')  bzw. javascript:requesT('xyz') . Wird auf[Aktion A] bzw. [Aktion B] geklickt, dann bekommtder Webserver über requesT() diesen Auftrag:  ajx.php?eingabe=abc  bzw.  ajx.php?eingabe=xyz   Auf dem Server wirddann das Programm ajx.php gestartet und ihm in derVariablen  eingabe  derWert  abc bzw. xyz  übergeben. Und wie sieht es aus, das Programm ajx.php ? In diesem Fall ganz kurz:   &lt;?php // Aufruf erfolgt mit  ?eingabe=wert switch($_REQUEST['eingabe']) { case 'abc': echo "abc|Die Aktion isterledigt"; break; case'xyz': echo "xyz|Diese Aktion konnte nicht ausgef&amp;uuml;hrtwerden"; break; } ?&gt;  Was hiermit dem echo-Befehl ausgegeben wird, geht dann an dieJavaScript-Funktion receivE() .  Schauen Sie sich also receivE()  an (im Quelltextdieses Dokuments oder unten im Listing). Sie untersucht den empfangenen String, also z.B.   abc|Ergebnis der Aktion abc:Die Aktion isterledigt  und spaltet ihn bei demZeichen '|'  auf. Damit kann nun ganz beliebig umgegangen werden. DerInhalt wird in diesem Fall noch etwas aufbereitet und an dasDOM-Element erg übergeben.  Wenn man also z.B. einElement  ... in der betr. Seite hat, indem momentan irgendetwas(oder nichts) steht, hier z.B. dieses:   &gt;&gt;&gt;Hier wird das Ergebnis des PHP-Programms ajx.php erscheinen  &lt;&lt;&lt;   dann wird das nacheinem Klick plötzlich so aussehen:    Ergebnis von Aktion abc:Die Aktion ist erledigt     Damit ist dasWesentliche beschrieben. Dieses Handlungsmuster kann man ganz beliebigausbauen!Das aufgerufene PHP-Programm kann avanti -Jobsumfassen und allesmögliche zurückgeben, was dann die Funktion receivE() an beliebigen Stellen insDokument einbauen kann.   Leicht könnteman demRequest mehr als einen Parameter mitgeben:   functionrequesT( abc,cde )  {  http.open('get', 'bjx.php?input1='+ abc +'&amp;input2='+ cde );  http.onreadystatechange = receivE;  http.send(null);  }   Das PHP-Programm bjx.php hätte dann zweiParameter input1 und input2 auszuwerten. Man kann fernerauch mehrere Request- und Receive-Funktionen einrichten.   Die Funktion receivE() kann man frei ausgestalten, sodaß sie viel mehr oder ganz andere Dinge tut, als nur denInhalt eines  zu ersetzen. Wichtig ist dabei das"Document Object Model (DOM)", mit dem man in JavaScript auf alleInhalte des aktuellen Dokuments lesend und schreibend zugreifen kann,wie es hier am Beispiel des  zu sehen ist. Fast jedes HTML-Tag kann mit einem Attribut id="..." versehen werden und ist damit dann ansprechbar aus JavaScript heraus.Auf diese einfache Weise kann JavaScript den Inhalt (auch das Aussehen)der aktuell geladenen Seite stark verändern, ohne die Seite neu zuladen!  Wir haben noch nicht erklärt, was denn"Asynchronous" bedeuten soll und wieso von XML die Rede ist.Beides sind wichtigeAspekte, allerdings braucht man sie nicht zu kennen, um mit AJAX viel zu erreichen,und vermutlich auch und gerade in Verbindung mit allegro -Datenbanken,denn das PHP-Programm auf dem Server kann mit avanti kommunizieren, das ist der wichtige Punkt. Fürdie Geschäftsbereiche Erwerbung und Ausleihe könntedie Technik möglicherweise recht fruchtbar sein.  AJAX-Anwendungenkönnen natürlich sehr viel komplexerwerden als hier im Beispiel gezeigt. Die Kunst beim Programmierenbesteht darin, hier wie auch sonst, unnötigeKomplexität zuvermeiden! Zwischen AJAX und XML besteht keine zwingende Kopplung!XML ist zwar allerfeinste Sahne, wer aber auf die Linie achten will, kann eine fettfreie Alternative wählen: JSON . (Da gibt es respektlose Gesell en, die sagen, XML sei zum Datenaustauschen so gut geeignet wie eine Zange zum Nägeleinschlagen!) Relevant ist XML oder JSON nur hinsichtlich der Datenübermittlung vom aufgerufenen PHP-Programm zu der JavaScript-Funktion receivE() .Diese soll ja aus den empfangenen Daten etwas machen. Die Datenkommen als lange Zeichenfolge an, und wenn darin viele Elementestecken, will man dafür nicht jedesmal viel programmieren, sondernjedes Element mit einem Griff herausfischen können. Sind die Daten XMLoder (besser noch) JSON, kann man dafür kompetenteJavaScript-Funktionen nutzen, das ist der Punkt.  Und wo ist der Haken? Das istder Back-Button des Browsers. Er macht nicht, wie man intuitiverwartet, den letzten Klick rückgängig - versuchen Sie esoben mit dem Beispiel! Allerdings ist das auch gar nicht seine wahre Funktion,sondern er holt die vorher geladene Seite zurück. Eine per AJAXveränderte Seite ist eben keine neu geladene Seite. Das zieht einweiteres Problemchen nach sich: eine mit AJAX veränderte Seiteläßt sich nicht, so wie sie gerade aussieht, "bookmarken". Und noch eins kann als Problem empfunden werden: JavaScript muß eingeschaltet sein.  In summa : Wenn diese Dingekeine Rolle spielen, kann AJAX eine Anwendung mit aufwendigerOberflächengestaltung eleganter, schneller und ruhiger erscheinenlassen, auch auf trägen Geräten an langsamen Drähten.  Literatur:  http://www.w3schools.com/ajax/default.asp (Englischsprachiges Tutorial)     Sosieht das JavaScript aus, das in dieses Dokument eingebaut ist:  Was schwarz ist, braucht man nicht zu verstehen, sondern kann man unverändert abkupfern, nur das Rote ist anwendungsspezifisch!      // ******Allgemeiner Teil (immer gleich) *****  functioncreateReqObj() // erzeugt ein "request object"  {  brws = navigator.appName;  if(brws == "Microsoft Internet Explorer")  rq = newActiveXObject("Microsoft.XMLHTTP");  else rq= new XMLHttpRequest(); return rq;  }   // GlobalesRequest-Objekt namens rqo anlegen:  rqo =createReqObj();   // Dies wird aus demDokument aufgerufen:  functionrequesT(wert)  {  // Jetzt Programm ajx.phpauf dem Server aufrufen:    rqo .open('get', 'ajx.php?eingabe='+wert );  //                 anwendungsspezifisch!   // Die Ausgabe davongeht an die Funktion receivE():  rqo.onreadystatechange = receivE ;  rqo.send(null);  }   // ****************Spezifischer Teil *********   function receivE () // Wirdausgeführt, sobald Ergebnis zurueckkommt  {  if(rqo.readyState == 4)  {  // Die Ausgabe desPHP-Programms auswerten:  ergeb=  rqo.responseText ;  update = new Array();  if(ergeb.indexOf('|' != -1))  {  // ergeb beginntevtl. mit 13 10 !!! weg damit  while(ergeb.charAt(0)=='\r' || ergeb.charAt(0)=='\n')ergeb=ergeb.slice(1,99);  update =ergeb.split('|');  rs =update[0];  document.getElementById("erg").innerHTML = "Ergebnisder Aktion " +rs +": " +update[1];  }  }  //********************************************  }            [i] zuletzt aktualisiert:         16.08.2012 Email: ub@tu-bs.de  
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Science Direct                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig         Science Direct      1.568 Elsevier-Zeitschriften neu für die TU lizenziert  Die UB Braunschweig hat die "Freedom Collection" des Verlags Elsevier erworben. Damit stehen nunmehr fast alle Online-Zeitschriften von Elsevier mindestens ab Jahrgang 2004 campusweit zur Verfügung. Sie können wie immer über die EZB ( Elektronische Zeitschriftenbibliothek ) aufgerufen werden.   Eine titelübergreifende thematische Suche ist bei http://www.sciencedirect.com möglich. Beachten Sie dabei bitte, dass manche Jahrgänge für uns  nicht im Volltext verfügbar sind.Dies trifft vor allem auf einige ältere zu.     [i] zuletzt aktualisiert:  23.04.2010 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Kinderbuchsammlung                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig         Kinderbuchsammlung der Universitätsbibliothek Braunschweig         1. Entwicklung der Sammlung  2. Katalogisierung und Erschließung  2a. Benutzung  3. Sicherung und Erhaltung der Sammlung  4. Ausstellungen  5. Literatur  6. Links    Katalog der Kinderbuchsammlung       1. Entwicklung der Sammlung  Die Kinder- und Jugendbuchsammlungder Universitätsbibliothek Braunschweig entstand nach dem 2. Weltkrieg an derdamaligen Kant-Hochschule (seit 1947 Pädagogische Hochschule) in Braunschweig. Anfang 1946 erhielt die Kant-Hochschule die während desKrieges nach Braunschweig ausgelagerte Reichsjugendbücherei aus Berlin. Der wertvollste Teil dieser Bücherei war die Kinder- undJugendbuchsammlung des aus Westfalen stammenden Karl Hobrecker und seiner Frau Margarete .Der genaue Umfang der Rest-Sammlung Hobrecker ist nicht bekannt, nur für 4301Bände kann der frühere Besitz Hobreckers nachgewiesen werden. Der Reichsjugendbücherei und anderen Organisationen entstammen 1728Bände. Aufbauend auf diesen Beständen, erweiterte die PädagogischeHochschule die Sammlung während der Zeit ihrer Selbständigkeit bis 1971. Mitder Vereinigung der Bibliotheken von Technischer Universität und PädagogischerHochschule im Jahre 1971 ging die Sammlung in den Besitz derUniversitätsbibliothek Braunschweig über. Hier wird sie weiterhinkontinuierlich ausgebaut, wobei ein beachtlicher Teil der Erwerbungen derBibliothek geschenkt wurden. Im Laufe der Jahre kamen mehrere Sammlungen ausverschiedenen Quellen hinzu. In den 1980er Jahren erhielt die Bibliothek aus London etwa950 englische Kinderbücher, überwiegend aus den Jahren 1850-1950; ein andererTeil bestand aus modernen Pop-up-Büchern. Ein bedeutender Zuwachs waren die Schenkungen des BraunschweigerOberstudienrats Walter Nieder in den Jahren 1990 bis 2000. Durch ihn gelangtenetwa 800 Bände in den Besitz der Bibliothek. Darunter befinden sich zahlreicheZeitschriften für Kinder und Jugendliche aus dem 19. und 20. Jahrhundert, wie Der Neue Deutsche Jugendfreund , Töchter-Album , HerzblättchensZeitvertreib , Der Jugendgarten und Auerbachs Deutscher Kinderkalender . Die bei Braunschweig lebenden Kinderbuchautoren und -illustratoren Margret und Rolf Rettich schenkten der Bibliothek 1999 je ein Exemplar ihrer Veröffentlichungen mitNeu-Auflagen und zahlreichen Übersetzungen. Insgesamt kamen bislang 518 Bändedes Ehepaars Rettich in die Bibliothek. Im selben Jahr wurden der Bibliothek die Verlags- und Bucharchive des Verlages Vieweg , der vom 18. bis zum 20. Jahrhundert seinenSitz in Braunschweig hatte, übergeben. Neben Briefen, z. B. von Hans-ChristianAndersen, Sophie Frömmichen, Marie v. Houwald-Thielau, Johann Peter Hundeiker,Gustav Sues und Amalie Winter, kamen etwa 100 Kinderbücher des Verlags in dieSammlung. Ende 2003 konnte die Sammlung um 59 Titel desösterreichischen Kinderbuchillustrators Ernst Kutzer erweitert werden. Im Jahr 2007erhielt die Universitätsbibliothek eine große Schenkung von mehr als zweihundert Bändendes renommierten Berliner Kinderbuchverlages .  Heute umfasst die Sammlung über 20.000 Bände.   2. Katalogisierung und Erschließung  Mit finanzieller Unterstützung der DeutschenForschungsgemeinschaft wurde die Sammlung in den Jahren 1978 bis 1982katalogisiert. 1985 erschien ein gedruckter Katalog: Die Sammlung Hobreckerder Universitätsbibliothek Braunschweig. Katalog der Kinder- undJugerndliteratur 1565-1945. Bearb. Von Peter Düsterdieck unter Mitarb. vonIngrid Bernin-Israel [u.a.] 2 Bände, München: Saur 1985.  Der gesamte Bestand der Kinderbuchsammlung ist in einer allegro-Datenbank erfasst, die über die Adresse http://www.biblio.tu-bs.de/db/hob/ zugänglich ist. Der Nachweis aller Titel im Online-Katalog derUniversitätsbibliothek bzw. in der Verbunddatenbank des GBV (GemeinsamerBibliotheksverbund) ist als nächster Schritt in Bearbeitung.   2a. Benutzung  Die Bücher der Kinderbuchsammlung sind grundsätzlich nicht entleihbar. Sie können imSonderleseraum der Ortsleihe eingesehen werden, nachdem sie über den Online-Katalog derUniversitätsbibliothek bestellt wurden. In Sonderfällen sind Ausnahmen möglich.   3. Maßnahmen der Bibliothek zur Sicherung der Sammlung  Seit 1995 finanziert das LandNiedersachsen ein Projekt zur Verfilmung vom Zerfall bedrohter ältererBuchbestände der Zeit zwischen 1850 und 1920. Die UniversitätsbibliothekBraunschweig konnte mit Hilfe dieser Mittel bis 2006 1.115 Bände der Sammlungverfilmen lassen. Dabei wurden stets 2 Filme angefertigt. Ein Film wird archiviert,der zweite Film dient der Nutzung, so dass die verfilmten Bücher auf Dauer derBenutzung entzogen werden können.  Ebenso wird die Digitalisierung für die Bestandserhaltunggenutzt. Ausgewählte Bände werden gescannt, bearbeitet und archiviert. DieTitel sind im Online-Katalog der Universitätsbibliothek nachgewiesen und könnendort oder über die Digitale Bibliothek Braunschweig eingesehen werden.  2006 begann die Universitätsbibliothek mit Mitteln des Landes Niedersachsen dieMassenentsäuerung von Kinderbüchern in einem Pilotprojekt. Das Verfahrenhatte sich bereits bei der Entsäuerung pharmazeutischer Bestände bewährtund zeigt auch hier gute Erfolge.   4. Ausstellungen aus der Braunschweiger Sammlung   Aus der Kinderbuchsammlung von Karl u. Margarete Hobrecker   Stadtbücherei Hemer i.W. : 6.10.1986 – 14.11.1986  Universitätsbibliothek Braunschweig : 7.12.1986 – 30.1.1987  Stadtbibliothek Paderborn : 3.4.1987 – 2.5.1987  Weitere Stationen waren die BayerischeStaatsbibliothek München (1987/88) und die Stadtbibliothek Wolfsburg (1988)   Pop-ups. Aus der Kinderbuchsammlung der UB   Universitätsbibliothek Braunschweig : 21.2.1989 – 6.3.1989   Kinderbücher. Ausstellung von Neuerwerbungen der Kinderbuchsammlung der UB   Universitätsbibliothek Braunschweig : 14.12.1993 – 28.1.1994   Ein Weihnachtsfest im Kinderbuch – ein Kinderbuch zum Weihnachtsfest   Nord/LBBraunschweig : 12.12.1995 – 5.1.1996   Die ganze Welt im Kinderbuch   Universitätsbibliothek Braunschweig : 13.11.1998 - 16.1.1999   Saus und Braus weht der Wind ums Haus - Margret und Rolf Rettich in derUniversitätsbibliothek Braunschweig   Universitätsbibliothek Braunschweig : 2.7.– 3.9. und 1.10.-13.11. 1999   Ernst Kutzer. Werke des Kinderbuchillustrators in der Universitätsbibliothek Braunschweig   Universitätsbibliothek Braunschweig: 28. 4. - 30.6. 2006,   Leseland DDR - Literatur für Groß und Klein   Universitätsbibliothek Braunschweig : 16.1. - 1.3.2008    5. Literatur   Aus der Kinderbuchsammlung von Karl und Margarete Hobrecker . Eine Ausstellung der Universitätsbibliothek Braunschweig. (Mit Beiträgen von Josef Daum [u.a.]). Braunschweig: Universitätsbibliothek,1986. 116 S.  Brüggemann, Theodor: Walter Benjamin und andere Kinderbuchsammler (Karl Hobrecker, ...).In: Brüggemann, Theodor: Keinen Groschen für einen Orbis Pictus. AusgewählteStudien zur Kinder- u. Jugendliteratur vom 16. bis 20. Jahrhundert. Hrsg. u.eingel. von Reinhard Stach. Osnabrück: Wenner 2001, S. 18-37.  Düsterdieck, Peter: Die Sammlung Hobrecker. In: Die Schiefertafel , Jg. 3, 1980, S. 30-35.  Düsterdieck, Peter: Zur Geschichte der Sammlung Hobrecker. In: Aus der Kinderbuchsammlung von Karl u. Margarete Hobrecker . Braunschweig 1986, S. 24-26.  Düsterdieck, Peter: Die Kinder- und Jugendbuchsammlung der UniversitätsbibliothekBraunschweig. In: Volkacher Bote Nr. 72, 2001, S. 1-4.  Düsterdieck, Peter: Kinder- und Jugendbuchsammlung der Universitätsbibliothek Braunschweig .In: Kinder- und Jugendliteratur. Ein Lexikon. Hrsg. Von Kurt Franz [u.a.], T.4, 13. Erg.-Lfg., Okt. 2001. 12 S.  Ewers, Hans Heino: Einige Bemerkungen zur Beschäftigung mit alten Kinderbüchern. In: Aus der Kinderbuchsammlung von Karl u. Margarete Hobrecker . Braunschweig 1986,S. 49-52.  Mahn, Michael: Bibliographie Karl Hobrecker. In: Aus der Kinderbuchsammlung von Karlu. Margarete Hobrecker . Braunschweig 1986, S. 27-48.  Mahn,Michael: Karl Hobrecker (1876-1949). In: Aus der Kinderbuchsammlung von Karl u.Margarete Hobrecker . Braunschweig 1986, S. 21-23.  Mahn, Michael: Karl Hobrecker – ein deutscher Sammler . Ein Beitrag zur Geschichte derKinder- und Jugendbuchforschung. Herzberg: Bautz 1987. 203 S., 3 Mikrofiches.(Arbeiten zur Geschichte des Buchwesens in Deutschland. 12.) [Zugl. Diss. Phil.Bremen 1986.]  Müller, Helmut: Hobrecker, Karl. In: Lexikon der Kinder- und Jugendliteratur, Band 1,1975 , S. 546-548 und 2. Aufl., 1977 , S. 546-548.    6. Links   Brüder Grimm-Museum Kassel  http://www.grimm-museum.de  Arbeitsstelle für Leseforschung und Kinder- und Jugendmedien, Universität Köln  http://www.aleki.uni-koeln.de  Verzeichnis neu erschienener Kinder- und Jugendbücher  http://www.ibit.uni-oldenburg.de/20658.html  Struwwelpeter-Museum, Frankfurt am Main  http://www.struwwelpeter-museum.de/  Deutsche Akademie für Kinder- und Jugendliteratur e.V.  http://www.akademie-kjl.de/pages/impressum.html    Universitätsbibliothek Braunschweig Internet: http://www.biblio.tu-bs.de e-Mail: ub@tu-bs.de Pockelsstr. 13, 38106 Braunschweig Kontakt: Dr. Beate Nagel, Tel. 0531-391 5012, e-Mail: b.nagel@tu-bs.de   Illustration von Walter Crane aus: John Lane: Beauty and the Beast, London, New York, [um 1895] Illustration von Lothar Meggendorfer aus: Meggendorfer-Album, um 1879-1896 J.A. Comenius: Orbis pictus...Wien 1781      [i] zuletzt aktualisiert:  23.04.2010 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Frauenliteratur                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig         Frauenliteratur      DieUniversitätsbibliothek hat (nebender Frauenbibliothek der Verfassten Studierendenschaft und der Bibliothekdes Gleichstellungsbüros der TU) seit vielen Jahreneinen umfangreichenLiteraturbestand zur Frauenforschung und zur interdisziplinärenForschungsrichtung „Gender Studies“ aufgebaut. Auch mit Mitteln ausStudienbeiträgenwird dieser Bestand kontinuierlich ergänzt.  Ein themenbezogenerTeilauszug  ausunserem Katalog weist mehr als 19.000 Titel nach, von denen inzwischen über 900 alsOnline-Ressourcen zur Verfügung stehen. Die aktuelle Literatur ist imdrittenLesesaal unter der Signaturengruppe SWN 'Spezielle Soziologie V – Frauenliteratur’ zu finden.  AbonnementsderUniversitätsbibliothek und Nationallizenzen ermöglichen Ihnen darüberhinausdie Recherche in Fachdatenbanken und elektronischen Zeitschriften. Sohält dieUB z.B. über 1300 elektronischeZeitschriften aus dem Fachgebiet Soziologie –darunter auch viele‚gender-relevante’ Titel.  ImRahmen der Nationallizenzenstehen auch die folgenden Volltext-Datenbanken zur Verfügung:  DeutschsprachigeFrauenliteratur des 18. &amp; 19. Jahrhunderts,Teil 1 und 2: über 220.000 Seiten aus 848 E-Books von Autorinnen des19. Jahrhunderts. EnglishLanguage Women's Literature of the 18. &amp;19. Centuries: vollständigste Sammlung englischsprachigerFrauenliteratur der Romantik, insgesamt 1.529 E-Books mit über 572.000Seiten.      [i] zuletzt aktualisiert:  23.04.2010 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
      Semesterapparate                        Semesterapparate               Benutzer-Registrierung         Anrede:    Herr  Frau     Dr.  PD Dr.  Prof.  Prof. Dr.      Vorname:     Nachname:     E-Mail:     Telefon:          Ich bin Assistent/in, Sekretär/in, Hilfskraft o.ä., und verwalte Semesterapparate im Auftrag von:    Anrede:    Herr  Frau     Dr.  PD Dr.  Prof.  Prof. Dr.      Vorname:     Nachname:       Hinweise:   Um einen Zugang zum elektronischen Semesterapparat zu erhalten, müssen Sie Angehöriger der TU Braunschweig sein, und eine Lehrveranstaltung an der TU Braunschweig betreuen.   Bitte geben Sie Ihre TU-Email-Adresse sowie Ihre dienstliche Telefonnummer an.  Die Zugangsdaten (Login, Passwort) zum Semesterapparat erhaltenSie per Mail. Die Bearbeitung Ihrer Anmeldung dauert etwa einen Arbeitstag.   Mit Absenden dieses Formulars erklären Sie sich mit der elektronischen Verarbeitung Ihrer Daten für die Zwecke der Verwaltung Ihres Semesterapparats einverstanden.      Über diese Software ...           © Universitätsbibliothek Braunschweig Kontakt: ub@tu-bs.de    2005 - 2013 Impressum      
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Semesterapparat Universitätsbibliothek Braunschweig                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig         Semesterapparat Universitätsbibliothek Braunschweig       Im elektronischenSemesterapparat können Dozenten Materialien für IhreVorlesungen verwalten . Der Dozent kann seine Materialienjederzeit selbst bearbeiten, die Studenten können jederzeit darauf zugreifen. Von einem Konto aus kann der Dozent   Bücheraus dem Bestand der Universitätsbibliothek bestellen und für die Studenten im Lesesaal 3 aufstellen lassen. DieseBücher sind für andere Nutzer nicht mehr ausleihbar.  Zeitschriftenartikelaus Zeitschriften , die in der Bibliothek vorhanden sind,bestellen und als PDF-Dokument in das Konto hochladen lassen.  EigeneOnline-Dokumente hochladen (PDFs, Word- oderExcel-Dokumente,Powerpoint-Präsentationen, Bilder, Videos, mp3, etc.)  Weblinks auf wichtige Internetseiten anlegen  Videosstreamen (Wenden Sie sich dazu bitte an Frau Blanck - Tel.: 5052 oder per E-Mail c.blanck(at)tu-bs.de)    Anmelden Der Semesterapparat kann von jedem Dozenten benutzt werden, der eineVorlesung/Seminar/Übung an der TU Braunschweig hält.Der Dozent muss sich hier anmelden (das Konto kann auchauf den Namen einer Hilfskraft/Assistenten laufen). Innerhalb einesWerktages bekommen Sie ihre Kennungund ihr Passwort per E-Mail zugeschickt.     Bücher und Artikel aus Zeitschriften Über ihr Konto bestellen Sie die Bücher undZeitschriftenartikel aus der Universitätsibliothek. Das Heraussuchen undAufstellen der Bücher im Lesesaal 3 der UB übernimmt die Bibliothek. Bitte beachten Sie, daß wir Bücher aus den Institutsbibliotheken nicht aufstellen können.Ebenso können Bücher aus der Universitätsbibliothek nicht am Campus Nord aufgestellt werden. Für in der Universitätsbibliothek nicht vorhandene Bücher können Sie einen Erwerbungsvorschlag machen. Bitte geben Sie im Feld Bemerkung an, daß das Buch für Ihren Semesterapparat ist!    Eigene Online-Dokumente und Weblinks können Sie selbsthochladen und verwalten.  Bittebeachten Sie, daß Sie urheberechtlich geschützteDokumente nur Ihrem eingeschränkten Kreis der Studenten ihrerVorlesung zugänglich machen dürfen (§52a UrhG). Siekönnen diese Dokumente im Semesterapparat einfach durch Setzeneines Häkchens sperren. Den Studenten geben Siehierfür ein Passwort, das Sie vorher beim Anlegen desSemesterapparats festgelegt haben.   Alle Ihre Materialien können Sie für ein Semester oder eine unbestimmte Zeit unsichtbar schalten und wieder freischalten ,wenn Sie eine Vorlesung z. Bsp. nur im Wintersemester anbieten.Alle Dokumente und Bestellungen bleiben bestehen. Der Semsterapparatwird nur in einen Ruhezustand versetzt.    Am Ende eines Semesters werden alle Semesterapparate automatisch aufgelöst, d.h. in denRuhezustand versetzt. Die Bücher werden zurück geräumt.Falls Ihr Semesterapparat weiter bestehen soll, können Sieihn innerhalb von 14 Tagen durch einen Mausklick einfach wiederverlängern.   Genaueres zur Bearbeitung des Semesterapparates finden Sie auch in unserer Hilfe oderschauen Sie sich unseren Beispiel-Semesterapparat (Kennung mtest, Passwort 123456) an!   Bei weiteren Fragen zum Semesterapparat wenden Sie sich bitte an: Frau Fischer - Tel. 0531 391-5072 - E-Mail: c.fischer(at)tu-braunschweig.de Frau Blanck - Tel. 0531 391-5052 - E-Mail: c.blanck(at)tu-braunschweig.de oder an die Buchaufstellung im Lesesaal -  Tel. 0531 391-5059   Über diese Software &gt;&gt;&gt;      [i] zuletzt aktualisiert:         19.11.2010 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
      Semesterapparate                        Semesterapparate              Alle | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z      Dr. Martin Bäker     Biologische Materialien     Funktionswerkstoffe     Numerische Methoden in der Materialwissenschaft     Miriam Balestra     Aspekte der Schriftlinguistik     Die Kompetenzbereiche im Fach Deutsch     Einführung in die Sprachwissenschaft     Grammatik der deutschen Sprache     Orthographie und Grammatik im Deutschunterricht SS 2011     Orthographie und Grammatik im Deutschunterricht     Prof. Dr. Hans-Joachim Behr     Die deutsche Literatur im Hoch- und Spätmittelalter - Ein Überblick     Prof. Dr. Soenke Behrends     Grundlagen der Anatomie und Physiologie     Pharmakologie, Toxikologie und Pathophysiologie     Pharmakologisch-Toxikologischer Demonstrationskurs     Toxikologie     PD Dr. Simone Bergmann     IB29 Medizinische Mikrobiologie     Dr. Till Beuerle     Praktikum: Biochemische Untersuchungsmethoden einschl. Klin. Chemie     Seminar: Biochemische Untersuchungsmethoden einschl. Klinische Chemie, Kurse A und B     Jan Block     Anwendersysteme     Ausgewählte Fragen zur Mathematik     Fachpraktikum Mathematik Gy     Mathematische Leitideen: Funktionale Zusammenhänge     Dr. Daniel Blömer     Schulpädagogik     Was weiß man über "guten" Unterricht?     Prof. Dr. Dietmar Brandes     Ausgewählte Probleme der Biodiversitätsforschung     Biodiversität und Evolution     GE 26  Eryngium campestre     Geländetage 2014     Geobotanik     Vegetationsökologie Mitteleuropas     Vegetationsökologie der Braunschweiger Umgebung     Prof. Dr. Heike Bunjes     Grundlagen der Arzneiformenlehre     Pharmazeutische Technologie - Teil A     Pharmazeutische Technologie - Teil B     Pharmazeutische Technologie - Teil C     Pharmazeutische Technologie - Teil D     Physikalische Chemie für Pharmazeuten     Dr. Wolfgang Bziuk     Kommunikationsnetze     Leistungsbewertung von Kommunikationsnetzen     Praktikum Kommunikationsnetze und Systeme     Prof. Dr. Wolfgang  Conrad     Komplexität des Kompetenzerwerbs im Literaturunterricht der Sekundarstufen: literarische, ästhetische, Text- und Medienkompetenzen (Theorien, Modelle, Beispiele)     Lesen, Hören, Sehen - Lernen. Kompetenzerwerb im DU der GS     Märchen der Brüder Grimm in Forschung und Vermittlung     Dr. Eckehard Czucka     Funktionen des Lesebuchs. Geschichte, Konzepte, Entwicklung     Graphic Novel und literarischer Text     Poetry Slam und  Unterricht     Sachtexte lesen und verstehen -  konzipieren und schreiben     Friederike Dushe     Notfallpsychologie und Krisenmanagement an Schulen     Prof. Dr. Hans-Dieter Ehrich     Managing Data in Bioinformatics     Dietmar Elflein     Inszenierungen der Populären     Methoden der Analyse Populärer Musik     Populäre Musik und Nationalsozialismus     Prof. Dr. Achim Enders     Elektromagnetische Felder EMF     Dr. Christiane Evers     Archegoniaten: Moose und Farne     BD01 Blütenmorphologie, Bestimmungsübungen und Morphologie     BD01Teil Histologie (ehemals Kleines Bo)     GE26: Populationsgenetik von Eryngium campestre     Dr. Olaf Gisbertz     Begleitende Übung zur Vorlesung Baugeschichte I     Alexander Gunkel     Immanuel Kant – Grundlegung zur Metaphysik der Sitten     Prof. Dr. Andreas Hangleiter     Physik 1 : Mechanik und Wärme     Lisa Heller     Klassiker der Wissenschaftsphilosophie     Arne Herbote     Wollen Sollen Können. Architektur lernen.     Dr. Marie-Luise Heuser     Aristoteles: Kategorien     Außerhalb der Erde - extraterrestrische Philosophie     Cusanus und Nolanus     Die Entgrenzung der Welt durch Nikolaus von Kues     Einführung in das Denken von Ernst Bloch     Eriugena - Philosoph der Karolingerzeit     Grundfragen der Religionsphilosophie     Karl R. Popper: Logik der Forschung     Logik     Philosophie der Raumfahrt     Philosophische Aspekte von Science Fiction     Philosophische Texte der russischen Avantgarde     Raumfahrtpioniere     Rosa Luxemburg     Schelling: Über das göttliche und natürliche Prinzip der Dinge     Suprematismus     Dr. Christine Hoffmann     Praktikum Pharmazeutische Technologie     Prof. Dr. Nicole C. Karafyllis     Philosophen im Ersten Weltkrieg: Ansichten über Krieg und Frieden     Ring-VL "Provinz oder Metropole? Orte und Gründe des Denkens"     SE Einführung in die Umweltethik     VL Einführung in die Technikphilosophie WiSe 2014/2015     Wissenschaftliches Fehlverhalten SoSe 2015     Dr. Simone Kibler     Doktoranden-Workshop Maschinenbau     Doktorandenkolloquium Architektur     Informationskompetenz - Master KTW     Informationskompetenz: Dokumentensammlung     Jenseits von Google: Abschlussarbeiten effizient vorbereiten und schreiben     Recherchieren, dokumentieren, präsentieren     Schriftliche Arbeiten in der Geistes- und Erziehungswissenschaft erfolgreich bewältigen     Wege zum wissenschaftlichen Arbeiten und zur Entwurfspräsentation     Dr. Simone Kibler / Prof. Dr. Dietmar Brandes     Informationskompetenz für Biologen (2. Semester)     Informationskompetenz für Biologen     Prof. Dr. Katja Koch / Dr. Penrose / Dr. Hormann     Forschungsmethodische Kompetenzen im Projektband GHR 300     Rosemarie Köhler     Schriftspracherwerb im Anfangsunterricht der Grundschule     Prof. Dr. Karl Bernhard Kruse     Baugeschichte I     Dr. Ursula Kundert     Lieder unterm Brett. Mittelalterliche Lyrik im Überlieferungskontext     Vom handschriftlichen Kommentar zur digitalen Analyse.  Mediengeschichte der Literaturwissenschaft     Prof. Dr. Conrad Kunick     Chemische Nomenklatur     Praktikum "Chemie einschl. d. Analytik d. organ. Arznei-, Hilfs- u. Schadstoffe"     Stereochemie     Prof. Dr. Michael Kurrat     Dezentrale Energiesysteme     Prof. Dr. Peter  Lemmens     Physik I: Mechanik und Wärme     Dr. Rainer Lindigkeit     Skript Pharmazeutische Biologie III (Phytochemie), 7. Semester     Anja Marzia     Einführung in die Sprachdidaktik     Fachpraktikum (FP1)     Lesen als Schlüsselkompetenz     Prof. Hermann G. Matthies     Advanced Methods for ODEs and DAEs     Introduction to PDEs and Numerical Methods (PDE1)     Introduction to Scientific Computing     Numerical Methods for PDEs (PDE2)     Quantifizierung von Unsicherheiten, parameterabhängige Probleme und Modellreduktion     Michael Medzech     Aristoteles: Physik     Prof. Dr. Bernd Meinerzhagen     Analoge Integrierte Schaltungen (AIS)     Schaltungstechnik     Wechselströme und Netzwerke (WuN)     Prof. Dr. Horst Neumann     Strategisches Personalmanagement im Rahmen  der Unternehmensführung     Prof. Dr. Ingo  Ott     Pharmazeutisch relevante Stoffklassen     Quantitative Pharmazeutische Analytik     Prof. Dr. Ubaldo Pérez-Paoli     Glück oder Pflicht     Eileen Pollex     Sexismus auf dem Campus: Stand der Forschung und Handlungsmöglichkeiten     Dr. Stephan Reichl     Biopharmazie einschließlich arzneiformenbezogener Pharmakokinetik     Dr. Steffen Richter     25 Jahre „Wende“ und die Literatur     Bertolt Brecht     Die Literatur des deutschen Kaiserreichs (1871-1918)     Handwerk der Literaturkritik     Literatur trifft Technik - Science Fiction     Literatur und Kultur der (alten) Bundesrepublik     Literaturbetrieb und Digitalisierung     Thomas Manns "Buddenbrooks" - eine "Seelengeschichte des europäischen Bürgertums"     Peter Rüffer     Rechnerstrukturen 1     Technische Informatik 2     Prof. Dr. Thomas Scharff     Reformation in Braunschweig     Prof. Dr. Hans-Christoph  Schmidt am Busch     Adam Smith: Der Wohlstand der Nationen     Die Philosophie des Marktes     Die Philosophie des Rechts     Einführung in die Politische Philosophie und Sozialphilosophie     Geschichte und Aktualität der Philosophie der Arbeit     Hayek: Der Weg zur Knechtschaft     Hobbes: Leviathan     John Locke: Schriften zur Politischen Philosophie     Karl Marx: Das Frühwerk     Rechtsphilosophie     Was ist Eigentum?     Falko Schnicke     Geschichte neuzeitlicher Männlichkeiten (1750-1900): Theorien und historische Praxen     Prof. Dr. Jörg Schöbel     Mikrowellenschaltungstechnik 1     Mikrowellenschaltungstechnik 2     Prof. Dr. Stefan Schulz     Naturstoffchemie / Natural Products Chemistry     Seminar zum Praktikum Organische Chemie     Struktur und Reaktivität (OC2)     Jens Schüür     Vorbereitungskurs zur Amateurfunkprüfung Klasse E     Dr. Frank Seehausen     Großer Bahnhof! - ICE-Mobiltätszentrum Hamburg-Altona     Großes Rennen! / Im Galopp - Rennbahn Hoppegarten     Prof. Dr. Michael Sinapius     Adaptronik     Aktive Vibrationskontrolle     Aktive Vibroakustik     Experimentelle Modalanalyse     Rotordynamik     Technikbewertung     Prof. Dr. Thomas  Sonar     Lineare Algebra für Informatiker     Dr. Sebastian Steinfartz     Zoologie - BD 02 - Grundlagen der Zoologie     Björn Stockleben     Mensch Maschine Interaktion     Steffen Stolzenberger     Erziehung zur Mündigkeit     Kant: Kritik der praktischen Vernunft     Dr. Werner Struckmann     Bachelor Informatik Pflichtveranstaltungen     Max Test     Videos     Max Testmann     Testvorlesung     Prof. Dr. Barbara Thies     Familienmodelle und elterliche Kompetenzen     Prof. Dr. Miguel Vences     Molecular Phylogenetics     Dr. Florence Vienne     Die Natur als Politikum.  Eine Einführung in die Wissenschaftsgeschichte     Prof. Dr. Thomas Vietor     Konstruktionstechnik WS 2009/10     Julia von Dall´Armi     Begleitseminar Praxisphase 3.1 Grundschule     Leseforschung     Dr. Alexander  von Schwerin     Die biotechnologische Transformation der Biowissenschaften und Medizin     Prof. Dr. Bettina Wahrig     Alchemie und Geschlecht (Pharmaziegeschichte II)     Arzneimittel und Geschlechterdifferenzen     Aufbaustudium Pharmaziegeschichte     Geschichte der Evolution (Prof. Dr. Bettina Wahrig und Prof. Dr. Norbert Käufer)     Geschichte der Naturwissenschaften  Pharmaziegeschichte I     Kolloquium zur Geschichte der Naturwiss und Technik     Magic Bullets – Arzneimittel des 20. Jahrhunderts     Pharmazeutische und medizinische Terminologie     Spezielle Rechtsgebiete für ApothekerInnen     Wahlpflichtfach Pharmaziegeschichte     Prof. Dr. Martin Wiedemann     Adaptiver Leichtbau     Prinzipien der Adaptronik     Claudia Wirsing     Descartes: Meditationen     Max Webers Theorie des Kapitalismus     Texte zur normativen Ethik     Dr. Jens Witte     Chemie und Technologie der Bedarfsgegenstände     Prof. Dr. Ute Wittstock     Einführung in die Biotechnologie     Grundlagen der Allgemeinen Biologie und Biochemie     Praktikum Pharmazeutische Biologie I und II     Vorlesung Pharmazeutische Biologie I     Prof. Dr. Lars Wolf     Computernetze 1 und Computernetze 2     Mobilkommunikation     Stefan Wulle     Einführung in SCOPUS     Literaturrecherche für Pharmazeuten     Stefanie Zahlten     Migration und Bildung      Über diese Software ...           © Universitätsbibliothek Braunschweig Kontakt: ub@tu-bs.de    2005 - 2013 Impressum      
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Literaturverwaltung und Wissensorganisation mit Citavi                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig         Literaturverwaltung und Wissensorganisation mit Citavi           Literaturverwaltung mit Citavi  DieUB Braunschweig hat eine Campuslizenz für das Literaturverwaltungsprogramm Citavi erworben. Damit haben alle Studierenden und Lehrenden der Hochschule die Möglichkeit, dieses Programm kostenlos zu nutzen.      Aktuelles zu Citavi 3  Schulungen für Einsteiger  Wie erhalten Sie Citavi?  Citavi Einstellungsdatei der UB Braunschweig  Hilfe, Handbücher und Tutorials  Kontakt        Citavi 3 ist da! Die neue Version bietet viele neue Funktionen:   neue Bildschirmaufteilung, Auswertung von Literaturlisten, direktes und indirektes Zitieren u.v.m. Weitere Informationen finden Sie unter www.citavi.com/kurzinfo.html .  Umstellung von Citavi 2 auf Citavi 3   Laden Sie das Setup von Citavi 3 herunter und installieren Sie Citavi 3.  Starten Sie Citavi 3. Ihr Lizenzschlüssel von Citavi 2 ist weiterhin gültig. Geben Sie ihn im Menü Hilfe &gt; Lizenzdaten ein. Wenn Sie Ihre Lizenzdaten verloren haben, können Sie sie neu anfordern . Wählen Sie im Startfenster den Befehl Ein anderes Projekt öffnen oder im Menü Datei den Befehl Projekt öffnen &gt; Projekt auswählen . Sie können die Projekte, die Sie mit Citavi 2 erstellt haben, problemlos mit Citavi 3 öffnen. Im  Ordner Citavi3/Projects werden Kopien der Projekte im neuen Datenbankformat angelegt.        Schulungen für Einsteiger    Inhalt:  - Literatur recherchieren und importieren - Ergebnisse sichten, aufbereiten und wiederfinden - Erstellen von Texten und Literaturverzeichnissen    Termine:  Donnerstag, 17. Februar 2011, 09:30 - 11:00 Uhr  Dienstag, 01. März 2011, 14:00 - 15:30 Uhr    Anmeldung:  DasSchulungsangebot richtet sich ausschließlich an Studierende undAngehörige der TU Braunschweig. Da die Plätze auf 14 Teilnehmerbeschränkt sind, wird eine Anmeldungunter citavi@biblio.tu-bs.de erbeten.    Treffpunkt:  Zentrale Information im Erdgeschoss der UB    Für Gruppen (mind. 6 Teilnehmer) besteht die Möglichkeit, einenindividuellen Termin zu vereinbaren. Bitte wenden Sie sich an citavi@biblio.tu-bs.de .      Wie erhalten Sie Citavi?    Laden Sie zunächst die kostenlose Version "Citavi Free" herunter. (Technische Informationen zu Download finden Sie unter http://www.citavi.com/de/download/installation.html ) Starten Sie das Setup und installieren Sie "Citavi Free". Bestellen Sie anschließend Ihren persönlichen Lizenzschlüssel für die Vollversion "Citavi Pro": http://www.citavi.com/tu-braunschweig   Wichtig: Als Authentifizierung dient Ihre Mail-Adresse der TU Braunschweig. Eine Bestellung mit einerFreemail-Adresse (web.de, GMX, Gmail etc.) ist nicht möglich. Starten Sie Citavi und geben Sie den Lizenzschlüssel aus der Mail ein, die Sievom Hersteller der Software in der Regel innerhalb von 24 Stunden nachAnforderung erhalten. Die Mail beschreibt das Vorgehen. Mit demLizenzschlüssel wird die Free-Version für die Dauer desCampus-Mietvertrages in die Pro-Version umgewandelt.Mit dem Lizenzschlüssel erhalten Sie das Recht, Citavi auf zwei Rechnern(zu Hause und am Arbeitsplatz) oder auf einem USB-Stick zu nutzen.     Was kann Citavi?  Citavi dient der Literaturverwaltung und der Wissensorganisation für Studium und Forschung. Mit Citavi können Sie in in über 4000 Datenbanken und Katalogen recherchieren, Ihre Literatur, Ihre Ideen und Zitate verwalten und struktuieren.Citavi unterstützt Sie beim Schreiben wissenschaftlicher Texte!  Ausführliche Informationen zu den einzelnen Funktionen, die Citavi bietet, finden Sie unter: http://www.citavi.com/de/funktionen/ sowie im Handbuch .      Einstellungsdatei der UB Braunschweig  Mit Hilfe der Citavi-Einstellungsdatei können Sie einige Voreinstellungen der Universitätsbibliothek Braunschweig direkt in Ihre Citavi-Versionübernehmen. Sie haben damit die Möglichkeit, in den von der UB Braunschweig angebotenen Datenbanken zu recherchieren.  So importieren Sie die Citavi-Einstellungen in Citavi:   Laden Sie die Einstellungsdatei für Citavi 3 bzw. Citavi 2 herunter (siehe unten). Wählen Sie im Menü Extras den Befehl Einstellungen importieren/exportieren . Klicken Sie auf Importieren und danach auf Durchsuchen , um die Citavi-Einstellungsdatei auszuwählen. Klicken Sie auf Weiter . Wählen Sie, welche Einstellungen Sie importieren wollen. Klicken Sie auf Fertigstellen .  Einstellungsdatei für Citavi 3 : ubbs_citavi3.csd   Einstellungdatei für Citavi 2: ubbs.csd      Hilfe, Handbücher und Tutorials  Auf den Citavi-Webseiten finden Sie zahlreiche Informationen und Hilfe zum Programm,Hinweise zu Service und Support sowie Handbücher und Schulungsmaterialien. Eine Auswahl haben wir Ihnen hierzusammengestellt:       Citavi-Handbuch (pdf-Text, 240Seiten, 4,4 MB)  Das Handbuch ist Teil es Programmes und steht in digitaler Form alsHilfedatei zur Verfügung, wenn Citavi installiert ist.      Installationshinweise - Technische Voraussetzungen - Standard-Installation auf einem Einzelplatz-PC - Installation ohne Administratorrechte - Installation auf einem USB Stick      Citavi-Forum Für Fragen, Probleme oder Verbesserungsvorschläge     Citavi-Picker erleichtern die Übernahme von Webseiten und PDF-Dokumenten. Außerdem bietet Ihnen Citavi mehr als 60 Erweiterungen für Firefox und Internet Explorer zur Erleichterung der webbasierten Literatursuche an.       Kontakt   Bei Fragen und Problemen wenden Sie sich bitte an citavi@biblio.tu-bs.de oder direkt an den Serviceund Support von Citavi.        [i] zuletzt aktualisiert:         02.02.2011  Druckversion    Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
    allegro-Katalog ...                Dissertationen-Katalog         Universitätsbibliothek Braunschweig   Pockelsstr. 13, 38106 Braunschweig         Was dieser Katalog ist   Es handelt sich um einen Auszug aus dem Bibliothekskatalog, und zwar die in Braunschweig geschriebenen Dissertationen.    Wiebenutzt man den Katalog?  Sie wollen Dissertationenzu einem Stichwort finden? Die Datenbank hat einen ganz einfachenZugang , bei dem Sie in den Registern blättern können, aberauch einen mit zusätzlichen Suchfunktionen .  Die besonderswichtigen Register sind diese:    Titelwörter  Jedes Wort aus dem Titel einerDiss. kann man hier finden, ferner die Wörter aus der Instituts- oder Fakultätsangabe. Weil sich die Namen der Fakultäten und Institute im Laufe der Zeit ändern, kann man leider keine vollständigen Institutslisten auf diese Weise gewinnen.    Titelanfang  Auch der Titelanfang als solcherkann gefunden werden    Personenname  Hier finden Sie Namen vonVerfassern, Herausgebern usw., nicht aber die Namen der Doktorväter oder Referenten, denn diesewerden beim Katalogisieren nicht erfaßt.    Verlag  Auch nach dem Namen einesVerlags kann man suchen, falls die Dissertation als Buch erschienen ist.        2007-06-12   
</fragment>
</item>
<item>
<fragment>
                      Arbeitsgemeinschaft Bibliotheksregion Süd-Ostniedersachsen - BiSON       Seitenkopf                             Seitentitel: Arbeitsgemeinschaft der Bibliotheken in Südostniedersachsen * BiSON         Inhalt der Seite  Die Arbeitsgemeinschaft BiSON        In der Arbeitsgemeinschaft " Bi bliotheksregion S üd- O st- N iedersachsen" (BiSON) haben sich ca. 60 Bibliotheken des GroßraumsBraunschweig zusammengeschlossen. Zur BiSON-Region gehörengroße und kleine, wissenschaftliche und öffentlicheBibliothekenunterschiedlichster Träger. In den BiSON-Bibliotheken befindetsich ein Buchbestand von insgesamt mehr als 5,6 MillionenBänden, tausenden von laufenden Zeitschriften und vieleZeitungen. Die BiSON-Bibliotheken stellen ein potentesInformationsnetzwerk für die ForschungsregionBraunschweig-Wolfsburg-Salzgitter dar.         Geschäftsstellevon BiSON: c/o Universitätsbibliothek Braunschweig Pockelsstraße 13 38106 Braunschweig Tel. (0531)391-5019 oder -5011 Fax(0531)391-5836  r.dopheide@tu-bs.de               Navigation   Startseite .    Bibliotheksadressen .   Nützliche Adressen .   Mitteilungsblatt  30Jahre BiSON   Bedeutung   BiSON und PISA   Kontakt .   News   UB Startseite           
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Universitätsbibliothek Braunschweig als Verlagsarchiv                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig          Universitätsbibliothek Braunschweig als Verlagsarchiv     Die Universitätsbibliothek Braunschweig betreut neben denwissenschaftlich bedeutenden Vieweg-Archiven auch dieArchivbestände anderer renommierter Verlage der VerlagsgruppeGWV Fachverlage :   Der DeutscheUniversitäts-Verlag DUV   Gabler Verlag   Verlag fürSozialwissenschaft VS   Vieweg+TeubnerVerlag  Die Belegsammlung der genanntenvier Verlage umfasst derzeitca. 35 778 Bände, zu denen noch das 1 502 umfassende Archivdes ehemaligen Bauverlags hinzukommen. Zusammen mit dem Vieweg-Bucharchiv umfasst der Bestand dervon uns betreuten Verlagsarchive damit 37 280 Bände. Derzeiterhält dieUniversitätsbibliothek Braunschweig etwa 780 Belegexemplareder GWVFachverlage pro Jahr.       GWV Fachverlage Die GWVFachverlage mit Sitz in Wiesbaden wurden im Jahre 1995 gegründet. Sie sindein Teilder Wissenschaftsspartedes SpringerScience+Business Media Verlages, der mit vielfältigenMedial-Angeboten dieThemenbereiche der Wirtschaft, Technik und Sozialwissenschaftenabdeckt.  ______________________  Quelle:  http://www.gwv-fachverlage.de/   http://www.arvato-direct-services.de/de/referenz-gwv.html  http://www.vs-verlag.de/pdf/pressemappe.pdf        DerDeutscheUniversitäts-Verlag - DUV  Der 1968 gegründete DeutscheUniversitäts-Verlag – DUV istseit diesem Jahr integrativer Bestandteil desGesamtangebots im Bereich Wirtschaft, Gesellschaft und Technik des GWVFachverlages. Diesem Konzept folgend werden alle Neuerscheinungen desDUV nunmehrje nach Fachgebiet den verschiedenen zugehörigen Verlagenzugeordnet. In Kooperationmit dem Gabler Verlag erscheinen diewirtschaftswissenschaftlichen Monografien des Fachs, währendder VS Verlag diesozialwissenschaftlichen Bestände veröffentlicht. DieForschungsliteratur imBereich Technik, Mathematik, Bauwesen und Naturwissenschaften wird inZusammenarbeitmit dem Vieweg+Teubner Verlag herausgegeben. Bisheute befinden sich zudem 4 769 Exemplare, die nochunter dem Namen des DUV Verlages erschienen sind, im Bestand in derUniversitätsbibliothek Braunschweig.  ______________________  Quelle:  http://www.duv.de/index.php?sid=7ad26aef34bc407b11985aac0a54207a  http://www.marketing-boerse.de/Unternehmen/details/Deutscher-Universitaets-Verlag-(DUV)-GWV-Fachverlage         GablerVerlag  Der im Jahre 1929 gegründete GablerVerlag ist einer der führenden deutschenWirtschaftsfachverlage. Sein Schwerpunktliegt auf den Themenbereichen der Wirtschaft, des Managements und derFinanzdienstleistungen.Beispielweise erscheint das Gabler Wirtschaftslexikon inzwischen in der16.Auflage und gehört längst zu den Klassikern derWirtschaftsliteratur. Der Gabler Verlag nimmt mit 9 107 Exemplaren im laufenden Grundbestandknapp25% des gesamten Verlag-Archivs der GWV Fachverlage-Gruppe an derUniversitätsbibliothek Braunschweig ein.   ______________________  Quelle:  http://www.gabler.de/index.php?sid=f3f32fa14f9969db9f0cca72b13615b8        DerVerlag fürSozialwissenschaft – VS Der VSVerlag fürSozialwissenschaften ist im Jahr 2004 aus demZusammenschluss der beidentraditionsreichen sozialwissenschaftlichen Verlage Westdeutscher Verlag(1947 gegründet)und Leske+Budrich (1974 gegründet) entstanden.  Die Bestände an derUniversitätsbibliothek belaufen sich fürden Westdeutschen Verlag auf 2 637  und beimLeske+Budrich Verlag auf2 999 Bände. Weitere 1 719 Titel, herausgegeben von dem neuentstandenen VSVerlag, zählen heute zum Archivbestand derUniversitätsbibliothek Braunschweig.  DerVS Verlag für Sozialwissenschaften ist mit rund 400Neuerscheinungen pro Jahr der führende sozialwissenschaftlicheVerlag imdeutschsprachigen Raum. Sein Programm umfasst neben den FachgebietenSoziologie,Politik-, Kommunikations- und Erziehungswissenschaft auch SozialeArbeit undPsychologie. Zum Verlagsspektrum gehören außerdemeine ganze Reihe vonrenommierten wissenschaftlichen Zeitschriften, wie die KölnerZeitschrift fürSoziologie und Sozialpsychologie, die Zeitschrift fürPolitikwissenschaft,Publizistik, die Zeitschrift für Erziehungswissenschaft sowieSozialExtra.  ______________________  Quelle:  http://www.vs-verlag.de/index.php;do=static/sid=cf9bcb0f4f56e34348fa886ecc62d719/site=w/source=impressum  http://www.vs-verlag.de/pdf/pressemappe.pdf           Vieweg+TeubnerVerlag Aus den beiden traditionsreichen Verlagen Vieweg (1786) undB.G. Teubner (1811) ist in diesem Jahr der neugegründete Vieweg+TeubnerVerlag hervorgegangen. Aus dem neugeründeten Vieweg+TeubnerVerlag gehören bereits 106 Titel in den Besitz derUniversitätsbibliothek Braunschweig.  Mitder Kompetenz aus über 200 Jahren Verlagsgeschichte istder Fachverlag der Marktführer für technischeFachinformationen in Deutschland.Das Verlagsprogramm steht für Produkte und Service in denBereichen Bauwesen,Elektrotechnik, IT – Informatik, Maschinenbau –Kfz, Mathematik,Naturwissenschaften. Vieweg+Teubner bietet Studierenden, Praktikern undWissenschaftlern damit gleichermaßen eine fundierte Plattformim Bereich der Technik.  ______________________  Quelle:  http://www.viewegteubner.de/index.php;do=static/sid=9e0e5cd3a63bb54874009f55cc8a371e/site=v/source=impressum  http://www.springer-sb-m.com/fileadmin/springer_internet/downloads/presse/sbm_info_D.pdf  http://www.viewegteubner.de  http://www.gwv-fachverlage.de/index.php;do=static/source=teubner          Bauverlag Zusätzlich zu dem Vieweg-Verlag und den GWV Fachverlagen istder ehemalige Bauverlag  mit1 502Exemplaren im Verlagsarchiv der Universitätsbibliothek Braunschweigvertreten. Der Bauverlag - BV wurde im 1929 gegründet. Im August 2000wurdeder Bauverlag von Bertelsmann übernommen und im Juli 2002 mitden BertelsmannFachzeitschriften zum Bertelsmann Springer Bauverlag verschmolzen undist seit September2003 als Bauverlag BV bekannt. Der Bauverlag gehörte zurFachverlagsgruppeSpringer der Bau-Sparte (B2B-Construction), bis er im Jahre 2006 alsTeil derDocu Group an die Private Equity-Unternehmensgruppe GMT CommunicationsPartnersverkauft wurde. ZumVerlagsspektrum gehören mehrere Fachzeitschriften fürdieverschiedenen Zielgruppen in der Architektur- und Baubranche.  ______________________  Quelle:  http://www.bauverlag.de/ http://www.springer-sbm.de/index.php?id=291&amp;backPID=132&amp;L=1&amp;tx_tnc_news=282 http://www.new-business.de/koepfe/detail.php?rubric=K%D6PFE&amp;nr=569187          [i] zuletzt aktualisiert:         19.07.2010  Druckversion    Email: ub@tu-bs.de      
</fragment>
</item>
<item>
<fragment>
    Veröffentlichungen der BWG           Kombinierte Suche  Information                Titelwort (1 Wort eingeben!)  Person (Nachnamen eingeben)  Titelanfang (ohne Artikel eingeben)         nach Eingabe Enter-Taste drücken                   UniversitätsbibliothekBraunschweig   Kontakt: B.Eversberg 2002-10-28            
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Studium &amp; UB                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig        Studium &amp; UB         Elektronische Semesterapparate Literatur und Vorlesungsmaterialien  Stud.IP Lernmanagement-System an der TU Braunschweig  Elektronisches Vorlesungsverzeichnis der TU Aktuelle Vorlesungen an der TU  E-Learning Allgemeine Hinweise und Ansprechpartner zum Thema E-Learning  Studienservice-Center Zentrale Beratungs-, Informations- und Serviceleistungen der TU   Literaturempfehlungen die wichtigste Einsteiger-Literatur im Grundstudium  Arbeitsplätze Räume, Tische, Rechner, Anschlüsse, ...  Dissertationstelle der UB Annahme Ihrer Dissertation  Digitale Bibliothek Elektronisch Publizieren an der TU       [i] zuletzt aktualisiert:         31.05.2010 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
 Universitätsbibliothek @ TU Braunschweig: Öffnungszeiten                                             Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig        Öffnungszeiten                    Öffnungszeiten            vorlesungsfreie Zeit ab 21.2.2011     bis 19.2.2011     Mo - Fr  Sa  Mo - Fr  Sa     Universitätsbibliothek  7:00 - 24:00  10:00 - 20:00  7:00 - 24:00  10:00 - 20:00     Zentrale Information  9:00 - 22:00 2  10:00 - 14:00  9:00 - 22:00 3  geschlossen     Leihstelle  9:00 - 19:00  eingeschränkt 1  9:00 - 17:30  eingeschränkt 1     Magazinausleihe  9:00 - 18:45  10:00 - 19:45  9:00 - 17:15  10:00 - 19:45     Lesesäle, ZFM, Freihandbestand  7:00 - 23:45  10:00 - 19:45  7:00 - 23:45  10:00 - 19:45     Chemiebibliothek  8:30 - 19:30  geschlossen  9:00 - 18:00  geschlossen         1 Möglich sind:Ausleihen von bestellten und vorgemerkten Medien der UB sowie Rücknahmen aller Medien an der Information bzw. am Freihandverbuchungsplatz.  2 ab 19:00 Uhr in Lesesaal 1.  3 ab 17:30 Uhr in Lesesaal 1.              [i] zuletzt aktualisiert:         02.02.2011 Druckversion  Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Fachportale                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig        Fachportale - Fächerübersicht       alphabetisch  nach Lesesaal  nach Signatur  Virtuelle Fachbibliothek Pharmazie    Deutschlandweit:   Sondersammelgebiete und Virtuelle Fachbibliotheken deutscher Bibliotheken     Fachübergreifende Suche, international:  KVK - Karlsruher virtueller Katalog  WorldCat  Visual Library.NET       [i] zuletzt aktualisiert:  27.01.2011 Email: ub@tu-bs.de     
</fragment>
</item>
<item>
<fragment>
  Universitätsbibliothek @ TU Braunschweig: Literatursuche                                          Impressum         Katalog    Literatursuche    Fachportale    Hilfe    UB von A-Z     Einfache Suche  Benutzer-Konto  Anmeldung  Erweiterte Suche  Such-Tipps    Kataloge  GBV-Fernleihe  E-Zeitschriften  Datenbanken  E-Books  Literatur-Empfehl.  Neuerwerbungen    alphabetisch  nach Lesesaal  nach Signatur  Virt. Fachbibl. Pharmazie    Fragen Sie uns  FAQ  UB von A-Z    ﻿   Universitätsbibliothek    Öffnungszeiten   Benutzungshinweise   Wir über uns   Literatursuche   Fachportale   E-Zeitschriften   Studium &amp; UB   Fernleihe   Digitale Bibliothek   Elektronische Semesterapparate   Virtuelle Fachbibliothek Pharmazie   TU Braunschweig        Literatursuche         Kataloge  Datenbanken  Fernleihe(Verbundkatalog GBV)  E-Zeitschriften  E-Books  Literaturempfehlungen  Neuerwerbungen    Literaturverwaltungsprogramm Citavi Aus Studienbeiträgen hat die UB Braunschweig eine Campuslizenz für das Literaturverwaltungsprogramm Citavi erworben.    Einführungen in Citavi oder andere Datenbanken wie Scopus oder die Datenbanken der Nationallizenzen finden Sie hier .      [i] zuletzt aktualisiert:         08.06.2010 Email: ub@tu-bs.de         Citavi für Einsteiger Die nächsteCitavi-Einführung findetam 17. Februar statt. [...]     Aktuelle Ausstellungen  Maschinenbau als Wissenschaft.Anfänge im 19. Jahrhundert  [mehr...]     Fragen Sie uns! Fragen rund um die Benutzung der Bibliothek? Schreiben Sie uns!   UB News als Tweet oder RSS UB News als Twitter Tweet   Oder als RSS-Feed   
</fragment>
</item>
<item>
<fragment>
    a99: Hauptseite                      a99 V32.6   allegro Windows Hauptprogramm            Hauptseite  Klassen  Dateien                            Alle  Klassen  Dateien  Funktionen  Variablen  Typdefinitionen  Aufzählungen  Aufzählungswerte  Makrodefinitionen         a99 Dokumentation          Erzeugt am Mit Jul 4 2012 11:25:16 für a99 von  1.8.1.1    
</fragment>
</item>
<item>
<fragment>
   a99 Quellen     allegro-C OpenSource   2014-04-11   a99 / a99a / a99d / alcarta  Quellcodes für die Erstellung der .exe's unter Windows/VisualStudio 2010 Achtung: NUR die .rc -Datei und program.h sind für a99/alcarta/a99a/a99d unterschiedlich.   Projektdateien (von VisualStudio erstellt und verwaltet)  VC6: a99.dsw  /  alcarta.dsw       allg. Projektdatei  a99.dsp /  alcarta.dsp       eine Art make-Datei f. VisualStudio  VC10: a99.vcxproj  /  Projektdatei (Struktur XML)  *** Spezifische Dateien  program.h darin steht, ob es a99, a99a, a99d oder alcarta werden soll a99.rc (Standard und Demo) / a99a.rc (Alternative) / alcarta.rc Konfigurierung der Oberflächenobjekte ("resources") *** Nur diese Dateien sind spezifisch f. a99 bzw. a99a  bzw.  alcarta, Achtung: Man kopiert die jeweils benötigte auf den Namen a99.rc Alle anderen Dateien sind identisch (also die Standard-a99.rc separat halten!) resource.h #defines f.d. Oberfl.Objekte (Zuordnung von Nummern zu den symb. Namen aus der .rc) alcarta und a99a verwenden dieselbe Datei, aber jeweils nicht alle Nummern daraus   Gemeinsame Grundlagen   Diese zwei werden jeweils als Libraries eingebunden, in a99/alcarta ebenso wie in acon und osdp). Die Quellen liegen in zwei Verzeichnissen, ac15 und aindex , parallel zum Quellenverzeichnis von a99.  ac15 : Klassenbibliothek (KONFIG, RECORD, EXET, INDEX, ABASE)  aindex : Index-Kernfunktionen (Erstellung und Zugriff)   Das eigentliche Programmpaket : Basiert auf Windows Foundation Classes (WFC)  Win-Standard für automatisch erstellte "vorkompilierte Headerdatei"  *.pch  stdafx.cpp  stdafx.h  WINDOWS oder UNIX, nur fuer rpnfind.cpp (a99 und alcarta nicht für Linux/UNIX kompilierbar!)  platform.h   Anwendungs-Rahmenklasse f.d. Dialoganwendung (kein Eingriff noetig)  ca99.cpp  ca99.h    Hauptprogramm : darin FLEX-Interpreter, Oeffnen der Unterfenster u.a.  Es handelt sich um eine Dialog-Anwendung (Klasse CDialog) nicht um eine Dokument-Anwendung! (Kl. CDocument)  a99.cpp enth. FLEX-Interpreter: Funktion FLEXecute() und die Abarbeitung aller Menu- und Button-Funktionen Unterfenster haben eigene Quellmodule, s.u.  a99.h   Hauptelemente (jeweils CDialog-Fenster, werden aus a99.cpp bzw. alcarta geoeffnet) Für acon werden diese nicht gebraucht, denn acon hat keine graphische Oberfläche.  A. Die zwei wichtigsten, unverzichtbaren A.1. Window für den Index  winx.cpp  winx.h  A.2. Window für Kurz- u. ViewListen: d.h. Ergebnismengen- und ViewListenfenster  wkv.cpp  wkv.h   B. Sechs andere  B.1. Aresqa-Fenster (oft f. laengere Auswahlen oder Menues genutzt)  aresqa.cpp  aresqa.hn  B.2. FernglasFormular f. find-Funktion  wfind.cpp  wfind.h  B.3. Dialog f. Glob. Ersetzungen  glob.cpp  glob.h  B.4. FormularKlasse (CDialog, FLEX:  form ...)  aform.cpp  aform.h  B.5. Subfield Dialog  (CDialog, Teilfeld-Editor (subhelp=1 in .ini). Wohl selten genutzt!)  subfield.cpp  subfield.h  B.6 Besen (CDialog)  acleanup.cpp  acleanup.h   C. Unterelemente mit eigenen Fenstern sowie abgeleitete Klassen  Die Erweiterung der Basisklassen, z.B. CButton, ist jeweils wegen der Größenänderung nötig, sowie wegen der Funktionstasten (F5, F7) z.T. auch wegen anderer Zusatzfunktionen  C.1 Eigene Button-Klasse (von CButton abgeleitet)  abutton.cpp  abutton.h  C.2 Einzeiliges EingabeFeld (CDialog, FLEX:  ask ...)  getl.cpp  getl.h  C.3 Einzeiliges EingabeFeld f. Passwort (CDialog, FLEX:  ask @...)  getp.cpp  getp.h  C.4 Klasse f. mehrzeiliges Editfeld (von CEdit)  aedit.cpp  aedit.h  C.5 eigene RichEditKlasse (von CRichEditCtrl, Anzeigefeld) Sonderfunktionen: Phrasen, Flips, rechte Maustaste  ariched.cpp  ariched.h  C.6 Eigene ComboBoxKlasse (von CComboBox abgeleitet) für Eingabefelder mit Auswahl der vorherigen Eingaben, z.B. "Schnelle Suche"  acombo.cpp  acombo.h  C.7 eigene SelectBoxKlasse (CDialog, FLEX:  select ...)  selbox.h  selbox.cpp  C.8 eigene ListBoxKlasse (von CListBox, f. Erg.Menge und ViewListe)  alistbox.cpp  alistbox.h  C.9 MessageBox mit Timer (CDialog, FLEX:  Mes ...)  msg.cpp  msg.h  C.10 eigene ProgressCtrl-Klasse (von CProgressCtrl, Forschritts-Balken)  aprogr.h  aprogr.cpp   Sonstige wichtige Prozeduren (Auch für acon) Nachschauen, ob Datenbank auf dem angeforderten Verz. existiert  lookford.cpp  Komplexen Suchbefehl parsen (in RP-Notation wandeln) Auch für acon  parser.cpp  parser.hpp  Komplexen Suchbefehl ausfuehren (nachdem vom parser erstellt) nutzt index.cpp (in ac15)  rpnfind.cpp (in acon: avfind.cpp und avfind.hpp, leicht verändert)  rpnfind.hpp  RegEx-Klasse f. das Suchen im iV-Text  (auch für acon)  regex.cpp  re_fail.cpp  regex.h (f. FLEX  srx ...)   Das Programm acon hat noch einige weitere Quelldateien.   UB Braunschweig 2014-04-11, B.Eversberg      
</fragment>
</item>
<item>
<fragment>
allegro C OpenSource                                           2012-01-27  ====================  Quelldateien der Konsolprogramme index, qrix, srch, import   Ferner:  asort    Sortieren von Grunddateien (.alg) und Textdateien   upd      startet  acon -jupdate ... = Ersatz f. altes update.exe  qr       ii-Datei (aus index.exe) in eine lesbare Liste wandeln  rdwr     Textdatei zeilenweise lesen und schreiben  log2alg  LOG-Datei in .ALG wandeln  cfgconv  alte CFG-Datei ( list.txt 2. Indexdatei komprimieren, z.B. cat.aex der DemoBank:qrix -fc -ka -ecat=demo2 -ddemo2 -Zesrch----Sätze raussuchen, die irgendwo "shakespeare" enthaltenund diese in eine Datei sl.adt im Externformat schreiben(Unter Win vorerst noch  srch32  statt  srch)Windowssrch32 -ddemo2\cat*.ald -sshakespeare -ee-w/sl.adtLinux/UNIX./srch -ddemo2/cat*.ald -sshakespeare -ee-w=sl.adtSätze, in denen "Romeo und Julia" oder "Romeo and Juliet auftreten:(das geht mit einem einfachen regul. Ausdruck und -r statt -s)Windowssrch32 -ddemo2\cat*.ald -rromeo.*juli -ee-w/sl.adtLinux/UNIX./srch -ddemo2/cat*.ald -rromeo.*juli -ee-w=sl.adtHINWEIS: Sollen V14-Ersetzungen ausgeführt werden, ist noch dieOption -b zu ergänzen, in diesem Fall   ... -bdemo2\cat  bzw.  ... -bdemo2/catund es müssen Parameter verwendet werden, in denen ein Wert i4angegeben ist, z.B.  i4=1.import------Eine Datei download.dnl im Pica3-Format soll ins A-Formatgewandelt werden zu einer Datei picadata.alg:import -ka -ddownload.dnl -ipica -ei-pica/picadata.algLinux/UNIX:./import -ka -ddownload.dnl -ipica -ei-pica=picadata.algasort  (ab 7.8.2012)  -----Hierzu gehören die Quelldateien  s_*.*Daraus entsteht  asort, wenn man das  Makefile.am  zugrundelegtund damit den GNU-Build-Prozess ausfuehrt.
</fragment>
</item>
<item>
<fragment>
// OSDP.CPP : OpenSource-DemoProgramm zur allegro-Klassenbibliothek// 2011-03-14   Kann als Muster fuer eigene Anwendungen dienen// 2012-06-19   Das Programm zeigt die Anwendung aller Basisklassen//              Diesem allgem. Muster entsprechen auch acon und a99!// Dieses Modell koennte z.B. Grundlage fuer einfache Webservices sein// -----------------------------------------------------------------------// Erweiterungen: Sinnvolle Stellen sind kommentiert mit  // ++++ hinweis// -----------------------------------------------------------------------char Version[24]="osdp V32.6";// ********************// Allgemeiner Vorspann// ********************// #include "allegro.hpp"// enthaelt alle globalen Daten, ist aber in jedem der folgenden #includes // schon mit drin und wird daher sowieso geladen// Darin sind Variablen wie Aerror und Alanguage definiert samt defaults// Die 5 Basisklassen:// Die Klassenfunktionen (Methoden) sind in  konfig.cpp  usw.                       // Praefix der Methoden#include "konfig.hpp"  // Ko... Konfiguration - wird immer gebraucht                       //         d.h. Funktionsnamen beginnen mit Ko#include "record.hpp"  // Datensatz  (kein Praefix)#include "index.hpp"   // In... Indexdatei#include "abase.hpp"   // Ab... DATENBANK                       // Aw...   Schreibfunktionen (abasew.cpp)#include "exet.hpp"    // Ex... Exportparameter  (deaktivieren, wenn nicht benoetigt)                       // E2.. bzw. E3  falls Funktion in exet2.cpp / exet3.cpp// ************************// eigene globale Variablen hier, falls man welche braucht:// ++++ nach Bedarf ergaenzen// ************************// Koennten auch in eine .h-Datei ausgelagert werden.// Hier werden sie durch Aufruf-Optionen belegt, s.u. in main()    char *arg;         // Hilfsadresse f. Argumentauswertung    char konfig[32];   // Name der CFG-Datei (z.B. a)    char dbDir[256];   // Db.Pfad (z.B. c:\allegro\demo2\ )    char dbNam[32];    // Db Name (z.B. cat)    char expFile[256]; // Name der Ausgabedatei f. Export    char expPara[32];  // Name der Exportparameter    char regNr[10];    // Registernummer f. find-Zugriff, z.B. "4"// Objekte (Instanzen von Klassen aus ac15)    KONFIG *oKfg;      // Konfiguration    RECORD *oSatz;     // Datensatz    EXET   *oExp;      // Export-Objekt (zu expPara)                       // wird bei Bedarf angelegt    ABASE  *oBank;     // Zeiger f.d. Datenbankobjekt                   // In einem Prog. kann es 2 oder mehr Datenbanken geben!    FILE *outFile;     // Exportdateichar eingZeile[256];   // fuer je 1 "Zeile" input aus stdin (wird mit -1 &amp;&amp; isspace(k[l])) k[l--]=0;}char *argFind(char *bef)  // In der Zeile bef den Anfang des Arguments finden{                         // bef = befehlswort  argumentchar *a;a=bef;    while(*a &amp;&amp; *a!=' ') ++a;  // Zeiger auf erstes Spatium setzenwhile(*a==' ') ++a;        // dann auf erstes Zeichen hinter Spatien (u.U. 0)return a;  // Zeiger zeigt jetzt auf das erste Argumentzeichen (oder *a==0)}// Funktion zur Ausgabe eines Zeichens beim Export// (evtl. macht man sich dafuer eine eigene Funktion!)// d.h. hier ist unmittelbar vor dem Output das Zeichen noch pruefbar// Wird genutzt vom Objekt oExp, s. weiter untenint outPut(int a)  // Ausgabefunktion f. ein einz. Zeichen{  return fputc(a,outFile);  // Zeichen in outFile schreiben}void expOpen(char *expFile){  if(outFile) fclose(outFile); // schliessen, falls schon offen  if(*expFile) outFile=fopen(expFile,"w");   // Datei f, Export oeffnen   else outFile=stdout;  // stdout, wenn -E fehlt  if(!outFile){           printf("\nProblem mit Ausgabedatei %s\n");    // Datei geht nicht           exit(17);} }void expCreate(char *expPara){  if(oExp) delete oExp;  if(*expPara) // eine Option -e... war gegeben  {    oExp = new EXET(expPara, oKfg, 0, dbDir);  // Exp.Param  expPara.apr  laden    if(*Aerror){           printf("\nProblem mit Export-Objekt %s: %s\n",expPara,Aerror);    // ein Fehler ist dabei passiert           exit(18);}     oExp-&gt;ExOutf(outPut);  // die Zeichen-Ausgabefunktion setzen  }      // zum Ausgeben soll outPut() dienen  (s.o.)  //    (default ist putchar, gesetzt in exet2.cpp)    // d.i. Ausgabe eines Zeichens auf "stdout"  (oben definiert)  // Klasse EXET uebergibt jedes Zeichen an diese Funktion}void help()  {    printf("Programm osdp, Version %s\n",Version);printf("Aufruf: osdp -dDatenpfad -rRegisternr -bDbName -kKonfig -eExportParam -EAusgabedatei ga[i], i=0 .. oSatz-&gt;gri-1// Manipulation der Datenfelder geht mit// den Methoden Ins(), Del(), SrRp() und FSrRp() in record.cpp while(fgets(eingZeile,255,stdin)!=0)  // stdin zeilenweise lesen (Datei mit E3Coding((CHAR *)eingZeile, 0, 1);  // 0: gesamte Laenge, 1: ANSI-&gt;ASCII// Zeiger arg auf das Argument hinter dem Bef.Wort setzen, mit dem eingZeile beginnt:arg=argFind(eingZeile);        switch(*eingZeile)   // Auswertung des Befehlsworts und Arguments{// ++++ Eigene commands (neue Befehlswoerter) hier auswerten        case 'f':   // find arg : Satz nur laden        case 'F':   // Find arg : Satz laden UND sperren (incl. Schluesselberechnung){  int k=0;  oSatz-&gt;Empty();  // suchbegriff  arg  im Reg. regNr suchen, Eintrag kann laenger sein (Modus 1)        recn = oBank-&gt;InFindEnt(atoi(regNr), arg, found, 1);          if (recn==0)  {            printf("Eine mit &gt;%sAbGet(recn,oSatz);  // Satz mit Nr. recn nach oSatz einlesen// bei Erfolg ist k die Anzahl Felder des Satzes, sonst k==0 - Satz leer   if(kReserve()!=0) { printf("Satz kann nicht gesperrt werden, %s\n",Aerror); break; }  }          if(k&gt;0)  { printf("Satznr / Dateinr / OffsetPos: %ld / %d / %ld\n",oSatz-&gt;rNr,oSatz-&gt;rFi,oSatz-&gt;rOf);  }   break;}case '#':   // Feld einordnen  oSatz-&gt;Ins((CHAR *)eingZeile);  break;case '_':   // _abc_xyz_ : Ersetzung im Satzcase ',':   // ,abc,xyz, : Mit Komma, falls _ in abc vorkommt          oSatz-&gt;SrRp((CHAR *)eingZeile,oSatz-&gt;ga[0],1,0,1);  break;case '*':   // *#nnn_ybc_xyz_ : Lokale Ersetzung in einem Feld          oSatz-&gt;FSrRp((CHAR *)eingZeile,1);  break;case 'p':   // put          // Wegschreiben des Satzes, dabei werden u.a. die Indexeintraege erledigt          int k;          if(*arg=='n') recn=oSatz-&gt;rNr=0;  // put new: Satz als neuen speichern  k=oBank-&gt;AwPut(oSatz);   // Satz speichern          if(k==-1) printf("Speichern gescheitert - Kein Schreibrecht?\n");          if(k==0)  printf("Speichern gescheitert - .TBL gesperrt?\n");          if(*Aerror) printf("irgendwas hat nicht geklappt: %s\n",Aerror);          if(k&gt;0)  if(recn) printf("ok, Satz #%ld ist wieder gespeichert\n",oSatz-&gt;rNr); // Erfolgsmeldung  else printf("ok, Satz #%ld ist als Neusatz gespeichert\n",oSatz-&gt;rNr);    break;case 'e':   // export: Satz ausgeben          //   Geht nur, wenn Parameter geladen. Dann ist *expPara!=0          if(*expPara)  {  //  oExp-&gt;Exp(oSatz);   // besser, wenn keine V14-Ersetzungen noetig!  oBank-&gt;AbExpV14(oSatz,oExp);  }  break;case 's':  // sleep, z.B. sleep 2 (2 Sek. pausieren)  SyPause(atoi(arg)*1000);  break;        case 'n':  // new (Neuer Satz)          oSatz-&gt;Empty(); // incl. Satznr. auf 0 setzen  recn=0;          break;        case '-':  // Eine Option -x  wird geaendert; nur -e, -E, -r{              char o=eingZeile[1];              arg=argFind(eingZeile+1);  switch(o)  {    case 'e':  // -e exportparamtetername{ strcpy(expPara,arg); expCreate(expPara);}break;    case 'E':  // -E ausgabedateiname                    strcpy(expFile,arg);                    expOpen(expFile);   // outfile schliessen und wieder oeffnen mit neuem Namenbreak;    case 'r': // -r registernummer         arg[1]=0;  // auf 1 Zeichen kuerzen = 1...9,:,;                    strcpy(regNr,arg);break;    default: break;  }  break;  }        case 'k':  // keys : Schluessel des Satzes berechnen und ausgebenprintf("Schluessel des Satzes:\n");oBank-&gt;AbKeys(oSatz,0); // Schluessel berechnen, landen in oSatz-&gt;rKy[]k=0;while (k rKx)   //  und ausgeben, rKx = Anzahl{printf("%d: %s\n",k,oSatz-&gt;rKy[k]);++k;}        default:   // sonstige Zeilen: ignorieren  break;}}return;}  // Ende HauptFunktion()// **** //// ENDE //// **** //
</fragment>
</item>
<item>
<fragment>
osdp : Beispielprogramm für den Umgang mit der Klassenbibliothek  2012-02-13   Ausbaufaehig, entsprechend kommentiert (Zeilen mit ++++)               Kompilierbar unter Windows, Linux, Solaris  osdp ist  ein Konsolprogramm, das auf eine allegro-Datenbank zugreifen  und Aktionen damit und darin ausführen kann, und zwar:      Sätze finden und laden, verändern, speichern, exportieren.  osdp soll:  1. Den Umgang mit der Klassenbibliothek an übersichtlichen     Beispielen zeigen  2. Einen Rahmen bieten, in den man eigene Funktionen einbauen kann,     mit einem Minimum an eigener Programmierarbeit.     Dieser Rahmen umfaßt folgende Teile:     -- Lesen von Einstellungen aus einer Steuerdatei     -- Auswertung von Aufrufoptionen (Vorrang vor Steuerdatei)     -- Öffnen einer Datenbank     -- optional: Laden von Exportparametern     -- Lesen, Erkennen, Ausführen von Befehlen aus einer Steuerdatei  Ganz wichtig: Stellen, an denen man eigene Wünsche erfüllen kann, sind  mit ++++ markiert und kommentiert. Alles andere ist Rahmenwerk und   kann unverändert übernommen werden.  osdp kann  nichts, was acon nicht auch könnte! Es ist nur viel kleiner  und übersichtlicher, somit für den Einstieg und als Startpunkt für  eigene, nicht so komplexe Aufgaben besser geeignet als acon.  Typische Aufgaben sind solche, bei denen man bestimmte Datenelemente  in bestimmte Sätze einspeisen will oder sonstige Veränderungen an  den Sätzen vornehmen (globale und lokale Ersetzungen).  osdp ist, weil kleiner, auch schneller als acon.  osdp kann nicht  Spruenge und Unterprogramme ausfuehren. Die Befehle werden streng   linear abgearbeitet; es wird eine Zeile nach der andern gelesen und  sofort ausgefuehrt. (acon liest erst den ganzen Job ein, bevor es  beginnt! Das geht nicht anders wegen der Sprünge und Unterprog.)   osdp benötigt  eine Steuerdatei, diese ist zu übergeben an die  Standardeingabe mit      osdp
</fragment>
</item>
<item>
<fragment>
   Klassenbibliothek C++ fuer allegro        allegro Klassenbibliothek inC++      2014-04-11          DieKlassenbibliothek ist eine Entwicklung, die für den Umgang mit dem  allegro -Konzeptdrei Ebenen eröffnet:   Entwicklungsarbeit : einplattformunabhängiges Kernsystem in objektorientierterMethodik. Hier könnte man z.B. neue Satz- und Indexstrukturen und -funktionen in C++ entwickeln oder diese erweitern und verbessern.  Anwendungsprogrammierung :einEntwicklungssystem(Programmierschnittstelle), aufbauend auf dem Kernsystem, fürdieGestaltung neuer Anwendungen auf der Basis von  allegro -Datenbanken. Beispiele:  a99/alcarta, acon  Anwendung : mehr KomfortdurchEinbindung in graphische Benutzeroberflächen nachgängigen Standards. Beispiele: Web-Schnittstellen mit PHP, Perlo.a., FLEX -Funktionspakete für a99/alcarta, RIA-Programme wie z.B. a30 und a35 . Mit FLEX wird die Klassenbibliothek auf höherer Ebene indirekt genutzt.     Das Kernsystemin C++ enthält nur die folgendenfünf Klassen (= Objektbeschreibungen):   KONFIG  Konfiguration . Nimmt praktisch den Inhalteiner Konfigurationsdatei (.cfg) auf. Diese Klasse enthält "Methoden" (auch "Memberfunktionen"genannt),um Datenfelder zu überprüfen, d.h. anhand derKategorielisteihre formale Korrektheit festzustellen: ist es eine zulässigeKategorie, enthält sie unerlaubte Teilfelder?, usw.    RECORD  [Hier ist als Beispiel der Quelltext record.hpp zu sehen]  Datensatz . Dient zur Darstellung vonSätzen aus der Datenbank im Arbeitsspeicher. Wichtige Methoden sind das Ändern von Feldern und das Einordnen neuer Datenfelder in denDatensatz, auch das Löschen von Kategorien undhierarchischen Untersätzen. Mit einem Aufruf Satz-&gt;Ins(field)  ordnet man z.B. eine Zeichenfolge field in einen RECORD-Objekt Satz ein. (Die Zeichenfolge muß mit einer Kategorienummerbeginnen, z.B. #20. Ist dieses Feld schon im Satz vorhanden, wird esüberschrieben.)    EXET  Export-Set .Nimmt eine Export-Parameterdatei auf, die eine genaue Vorschriftfür das Exportieren von Datensätzen enthält, formuliertin der sog. Exportsprache. Alle Outputs und auch die Indexeinträge werden mit dieser Sprache parametriert.  Die wichtigste Methode ist die Funktion Exp() ,die den Exporteines Satzes vorschriftsgemäß ausführt. Man übergibt also dieserFunktion mit dem Aufruf Exp(Satz) einObjekt der Klasse RECORD, um diesen Datensatz exportieren zu lassen.    INDEX  Indexdatei . Diese Klasse erweitert dieEXET-Klasse. Ein Objekt dieser Klassestellt den Index einer Datenbank dar. Es gibt eine Anzahl Methoden (Funktionen), die den Zugriff auf dieRegister ermöglichen, aber auch die Berechnung allerSchlüssel eines Datensatzes sowie das Ausführen voneinfachen und trunkierten Suchbefehlen.  Auf einer tieferen Ebene liegendie elementaren Funktionen für den Umgang mit der Indexdateiund den Schlüsseln. Diese Funktionen braucht der Programmierernicht zu kennen, sie sind auf der Klassenebeneunsichtbar. Die Quellen liegen vor in einem Paket aindex , das zu einer Library kompiliert wird.    ABASE  allegro -Datenbank .Diese Klasse erweitert die INDEX-Klasse. Hier gibt es Methoden, um Sätze zu laden, zu löschen, undbearbeiteteSätze zurückzuspeichern, einschließlichallerIndexveränderungen: Mit dem einfachen Befehl Put(Satz) wird das RECORD-Objekt Satz gespeichert, mit Del( satznummer ) wird er gelöscht.      Diese Klassenbilden zusammen ein "Application Programmer Interface" (API)für die Sprache C++. Die Klassen sindgenauestensbeschrieben in Dateien mit den Namen KONFIG.HPP, RECORD.HPP usw. DerProgrammierer kann daraus alle Strukturen und Methoden ersehen, die ineinem C ++ -Programm verwendet werdenkönnen. DieseDateien sind also zugleich die API-Dokumentation. Dadiese Klassen keine interaktiven Teile enthalten (d.h. keine Tastatur-und Bildschirmprozeduren), sind sie mit beliebigen Klassenbibliothekenfür GUI-Gestaltungen, aber vor allem fürClient/Server-Anwendungen, kombinierbar. Das  allegro -Datenbanksystemwird damit auf Programmierebene zu einem absolut offenen System.  Hinsichtlichder Datenstrukturen und der Funktionen auf Satz- und Indexebene sinddie Klassen kompatibel mit den älteren DOS-Programmen. Daherkönnenauch alte Datenbanken ohne irgendeine Umwandlung von neuen Programmenbenutzt und verarbeitet werden.       Beispielfür ein objektorientiertes Programm   Es folgt nun einkleinesMusterprogramm auf Basis der Klassenbibliothek, welches nur zeigen soll, wie diegenanntenKlassen eingesetzt werden.  Das Programm test.cpp macht folgendes:   es sucht über Register 3 alleDatensätze,die ein mit "biochem" beginnendes Stichwort enthalten,  ordnet ein neues Feld #30a mit Inhalt "BTC" in dieseSätze ein,  exportiert sie mittels einer ParameterdateiD-SHOW.APR aufden Bildschirm,  und speichert sie wieder zurück (wobei dieIndexbearbeitung automatisch erfolgt).   Empfehlung:  Zum praktischen Ausprobieren wird test.cpp nichtempfohlen. Dazu gibt es ein etwas größeres, das flexiblerist und damit auch praktisch nützlich sein kann: osdp.cpp . Man findet die Quelldatei im SVN . Es enthält einige Kommentare, markiert mit ++++, die denindividuellen Ausbau erleichtern sollen. So kommt man am schnellsten zu einem eigenen Konsolprogramm mit Zugriff auf allegro -Datenbanken.  Um die Lesbarkeitzuverbessern, sind hier Kommentare kursiv gesetzt, der eigentlicheProgrammtext fett. Das Programm ist inder Sprache C ++  geschrieben.Das Symbol // leitet Kommentare ein, d.h. der Rest der Zeile wird vomCompiler ignoriert.     // Musterprogramm test.cpp // Allgemeine Vorbereitungen: // Klassenbeschreibungen: // die Datei abase.hpp enthält alle Beschreibungen #include "abase.hpp" // Hier beginnt das Programm: int Amain() { if(!uifRead('e')) A_EXIT(10); // Lies die Datei uifeger, Abbruch falls Fehler // Zuerst wird $a.CFG geladen, und zwar vom Verzeichnis c:\allegro\demo2 : //  (Wenn $a.cfg nicht existiert, wird a.cfg gesucht. Dies geht auf V13 zurück) // (eine Konfiguration wird immer gebraucht) KONFIG *kfg=new KONFIG("a","c:\\allegro\\demo2\\"); if(*Aerror) { printf("%s\n",Aerror); A_EXIT(10); } // Fehler in a.cfg? // Fehlermeldungen solcher Funktionen stehen immer in der Variablen Aerror //  if(*Aerror) bedeutet: steht etwas in Aerror? Wenn ja, wird die // nachfolgende Klammer ausgeführt // A_EXIT(10) heisst: Programm wird mit Fehlercode 10 beendet // Im folgenden wird jeweils die Konfiguration  kfg benutzt, um Objekte // zu erzeugen, d.h. kfg ist ein Objekt der Klasse KONFIG // Exportparameter d-show.apr werden geladen in ein Objekt der Klasse EXET , // welches den Namen Expo bekommt: EXET *Expo=new EXET("d-show",kfg,0, "c:\\allegro\\demo2\\"); if(*Aerror) { printf("Aerror=%s\n",Aerror); A_EXIT(10); } // zum Ausgeben soll die Funktion putchar() dienen, d.h. Ausgabe auf Bildschirm; // deshalb wird die Adresse dieser Funktion an das Objekt Expo uebergeben: Expo-&gt;Outfunc(putchar); // Ein Objekt RECORD (Datensatz) wird geschaffen, es beruht gleichfalls auf kfg : RECORD *Satz=new RECORD(kfg); // Die Datenbank cat auf c :\allegro\demo2 wird geoeffnet: // (d.h. ein Objekt der Klasse ABASE wird angelegt) // Dafür wird kfg verwendet, d.h. man koennte auch eine andere Version der CFG nehmen ABASE *Bank=new ABASE("c:\\allegro\\demo2\\","cat", kfg,1); // und wieder: wenn in Aerror was steht, hat es nicht geklappt if(*Aerror) { printf("Fehler beim Öffnen der Datenbank: %s\n",Aerror); A_EXIT(10); } // Jetzt wird mit den erstellten Objekten einiges angestellt . // ein paar Variablen werden gebraucht: CHAR txt[256]; // soll den Text einer Kurztitelzeile aufnehmen long results[10000]; // Ergebnismenge: bis zu 10000 Satznummern long rs; // Anzahl der Ergebnisse // Im Register 3 wird nach Eintraegen gesucht, die mit "biochem" anfangen: // Die Satznummern werden in results eingetragen: rs=Bank-&gt;ADXget(3,"biochem",results,1); // Die Ziffer 1 schaltet den Modus "trunkierte Suche" ein // Der Wert rs ist 0, wenn nichts gefunden wurde, -1, wenn ein Fehler auftrat //  (ein Fehlerhinweis steht dann in  Aerror) if(rs==0) { printf("Nichts gefunden\n"); return 0; } if(rs&lt;0) { printf("Fehler: %s\n",Aerror); EXIT(10); } // Am Bildschirm wird angezeigt, wieviele Ergebnisse (rs) es waren: cout &lt;&lt; endl &lt;&lt; "Ergebnisse : " &lt;&lt; rs &lt;&lt; endl; // "endl" heisst "end of line" und erzeugt einen Zeilenvorschub // Alle Saetze der Ergebnismenge werden jetzt als Kurztitel (entnommen // aus der .STL-Datei) angezeigt, dann geladen und mit dem // Exportobjekt Expo exportiert (gleichfalls auf den Bildschirm) long i=0; // Variable fuer die laufende Nummer while(i&lt;rs) { cout &lt;&lt; results[i] ; // Interne Satznummer anzeigen // Kurztitelzeile holen, in txt zwischenspeichern: k=Bank-&gt;STLget(results[i],txt); // und dann anzeigen: (die C-Funktion printf() wird benutzt) printf(", Kurztitel: %s\n",txt); // Datensatz in das Objekt Satz holen: Bank-&gt;Get(results[i++],Satz,0); // Kategorie #30a mit Inhalt BTC in den Satz einordnen: Satz-&gt;Ins("#30aBTC"); // und dann den Satz mittels Expo exportieren: // (ein Objekt der Klasse EXET hat eine "Memberfunktion" Exp(), die den // eigentlichen Export ausfuehrt, d.h. die Parameter abarbeitet) Expo-&gt;Exp(Satz); // Alternativ, wenn V14-Aufloesungen noetig sind: // Bank-&gt;ExpV14(Satz,Expo); // Datensatz speichern (Indexbearbeitung erfolgt dabei automatisch) Bank-&gt;Put(Satz); if(*Aerror) { printf("Speicherung gescheitert: %s\n",Aerror); A_EXIT(10); } } // Ende der while()-Schleife return 1; // zurueck zu main(), Beendigung des Programms }              FLEX macht alles viel einfacher  Weil man nicht für jede spezielle Aufgabe ein eigenes C++-Programmschreiben kann, wurde eine höhere Ebene geschaffen: FLEX. Die Programme a99 und acon können (mit einigen Unterschieden) FLEX-Skripte ausführen. Solche Skripte werden zur Laufzeit in Funktionen der oben gezeigten Artumgesetzt, d.h. man braucht von der Klassenbibliothek dann gar nichtszu wissen. Der oben dargestellte Vorgang könnte in FLEX für a99 so programmiert werden:   find |3 biochem? if empty end export p d-show export f protokoll.rtf get first :loop var "BTC" insert #30a put if no write "Satz " i " konnte nicht gespeichert werden" n write s n export next if yes jump loop help protokoll.rtf end   Wer also eigene Funktionen braucht, die von acon nicht abgedeckt sind, braucht kein komplettes C++-Programm mit der Klassenbibliothek neu zu schreiben, sondern könnte z.B. acon heranziehen und es um neue Befehle erweitern. acon ist ein plattformunabhängiges Konsolprogramm in C++, kann also auch z.B. sofort für Linux und Solaris kompiliert werden. Es erledigt u.a. auch für den avanti-Server die Bearbeitung der Aufträge, und es ersetzt mit dem speziellen Skript update.job das alte DOS-Programm update.exe .         B.Eversberg, 2009-10-26 / 2012-06-18     
</fragment>
</item>
<item>
<fragment>
   allegro OpenSource : Einführung     allegro OpenSource für Einsteiger   2012-08-01   Einstieg in die Programmierung mit den Quellen   Nachdem nun alle Quellen freigelegt sind, soll mit diesem Beitrag ein schneller  Weg gezeigt werden, in die Beschäftigung damit einzusteigen. Und zwar zuerst für  die Windows-Plattform. Ohne irgendwelche Kenntnisse vorauszusetzen,  beschreiben wir hier die ersten Schritte, damit sich jeder einen Eindruck  verschaffen kann, ob nun sogleich die Absicht zu näherer Beschäftigung damit besteht oder nicht. Ganz konkret und zum sofortigen Ausprobieren wird gezeigt, wie man das Programm srch.exe erstellt und wo man am leichtesten eigene Erweiterungen und Modifikationen einbringen kann. Ganz analog geht es dann auch mit den anderen Programmen.  Die Quelldateien liegen in Repositorien , das sind kontrollierte Dateienlagerstätten. Die Kontrolle erledigt ein Versionsverwaltungssystem namens Subversion, kurz SVN . Solche Software wird eingesetzt, wenn mehrere Entwickler gemeinsam eine Sammlung von Dateien (gleich welcher Art) bearbeiten und weiterentwickeln wollen und dabei nicht den Überblick verlieren im Dschungel der Versionen und Varianten und Veränderungen.    0. Besichtigen kann man die Quellen in jedem Browser ohne weitere Voraussetzungen: (Aber nur besichtigen, nicht herunterladen; Kenner gehen besser gleich weiter zu 1.)    https://svn.allegro-c.de/svn  Beim ersten Zugriff sind einige Fragen zubeantworten, weil es eine "gesicherte Verbindung" ist:   Es erscheint ein Fenster, das so beginnt:  Dieser Verbindung wird nicht vertraut...  Klicken sie ganz unten auf  "Ich kenne das Risiko", danach auf  "Ausnahmen hinzufügen"  "Zertifikat herunterladen"  "Sicherheits-Ausnahmeregel bestätigen"  Username / Password  ... eingeben  Es erscheint eine Liste von Ordnern. Jede davon enthält ein Repositorium, d.i. eine  mit SVN verwaltete Sammlung von Dateien.  Klicken Sie auf atools . Das sind die Dateien, die zur Erstellung der vier  "Quadriga"-Programme gebraucht werden: srch, import, index, qrix. Ferner weitere sechs Hilfsprogramme des Gesamtpakets (dazu siehe Datei README).   Jede davon kann man anklicken und sich dann anschauen. Davon hat man nicht viel  und auf Anhieb versteht man sicher so gut wie nichts, es sei denn, man hat  Vorkenntnisse in C oder in Perl, das weitgehend ähnlich aussieht.    Wenn man nun damit arbeiten möchte, braucht man zwei Voraussetzungen:   * Den Subversion-Client Tortoise für den Zugang zu den Quellen, also zum  kontrollierten Herunterladen ("Checkout") der aktuellen Quelldateien.  Der Sinn ist, daß das SVN-System dann jederzeit automatisch merken kann,  welche Dateien man in der eigenen Kopie verändert hat und auch, welche von  anderen in der Zwischenzeit auf dem Server (im Repositorium) verändert wurden. Kenner installieren sich auch den SVN-Befehlszeilen-Client (s. Anhang )    * Das Compilersystem VisualStudio 2010 von Microsoft zum Übersetzen der C-Programme  und Erstellen der ausführbaren Programme, z.B. srch.exe, acon.exe oder a99.exe.   Für die Verbindung zwischen beiden gibt es jeweils noch "Projektdateien", die  dem Compilersystem sagen, was es zu tun hat, um ein bestimmtes ausführbares  Programm zu erstellen. Diese Projektdateien liegen von den Quellen getrennt und  sind ebenfalls mit Tortoise zugänglich. Für UNIX/Linux braucht man andere  Projektdateien (sog. "Makefiles"), die ebenfalls erhältlich sind.   Aber zunächst zu den zwei Komponenten und wie man sie installiert:     1. SVN-Client "Tortoise"   Tip: Eine Google-Suche mit "Subversion tutorial deutsch" findet viele einfache Einführungen,  Ein deutsches Lehrbuch: http://svnbook.red-bean.com (HTML und PDF, 384 S., Anh.A: Schnellstart) (Nur als Hinweis, Lektüre hier nicht vorausgesetzt.)   Download des SVN-Client "Tortoise" für Windows :   http://tortoisesvn.net/downloads.html  ACHTUNG , es gibt zwei Versionen:  " for 32-bit OS "   und   " for 64-bit OS "   (Auch die falsche läßt sich ohne Protest installieren, um dann aber - gleichfalls  ohne Protest - nichts zu tun.)   Nach dem Herunterladen, Installieren und anschließendem Neustart des Systems ist Tortoise aber kein eigenständiges Programm, sondern integriert in den Windows-Explorer!  Unter 3. sehen wir dann, was man davon hat.     2. Visual Studio 2010 Express : Integrierte Entwicklungsumgebung (IDE) für Windows-Programme Das Wichtigste darin ist der Compiler für C und C++     http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express   Button "INSTALL NOW _ ENGLISH"   (wahlweise, weiter unten, auch Deutsch)    Achtung: Das Paket ist sehr groß, sowohl Download wie Installation brauchen  einige Zeit   Hinweis: für Programme mit graphischer Oberfläche, wie a99, braucht man die Professional- Version, die es nicht umsonst gibt.     Damit sind die Voraussetzungen geschaffen, die Arbeit mit den Quellen kann beginnen.    Die Quadriga kompilieren   Zuerst wollen wir uns die C-Quellen der "Quadriga"-Programme mit SVN anschauen und dann auch herunterladen.    3.  Repo nur anschauen Windows-Explorer starten , dann:  Computer / Lokaler Datenträger (C: oder was immer)  Rechte Maustaste auf irgendeinem Ordner, egal wo, und man sieht zwei neue Menüzeilen:   1. SVN Checkout  Dazu kommen wir noch, zuerst wählen wir den folgenden:   2. Tortoise SVN mit mehreren Unterpunkten, wichtig ist zunächst nur   Repo-Browser   Es erscheint eine Eingabefeld, folgendes eingeben:   https://svn.allegro-c.de/svn/atools  Dann die Frage nach "username and password" beantworten mit   ac12 und dem bekannten Passwort  Nach angemessener Zeit kommt ein Fenster mit dieser Liste:  branches  tags  trunk  Das sind drei Repo-Ordner.  Die Namen sind bloße Konvention. Nur unter " trunk " liegt zunächst einiges,  und zwar sind dort laut der Konvention die aktuellen Quellen:  acore.c  adef.h  ...   Rechts sieht man Datum und Uhrzeit der letzten Änderung.  Hat man in seinem System die Dateitypen .c und .h verknüpft, z.B. mit  VisualC++, dann geht das Fenster des betr. Editors auf und zeigt die Datei.  Mit dem Repo-Browser kann man die Dateien und Ordner aber nur   besichtigen . Wie kann man sie insgesamt herunterladen ? Das geht anders:   4. Arbeitskopie herunterladen (sog. "checkout")  Rechtsklick im Explorer und  "SVN Checkout"  wählen  Es kommt ein Dialogfenster, in dem man in das erste Eingabefeld  "URL of Repository" dieses eingibt:   https://svn.allegro-c.de/svn/atools/trunk  In das Feld  "Checkout directory"  gibt man ein: c:\quellen\atools  alles andere läßt man unverändert und klickt  OK  Nochmals wird Username und Password abgefragt  Man sieht die Liste der Dateien, die nun kopiert werden nach c:\quellen\atools  (Der Ordner wird angelegt, wenn er nicht existiert.)   Im Explorer ist nun ein grüner Haken neben dem neuen Ordner atools .  Der deutet an, daß dieses Verzeichnis unter Kontrolle des SVN-Systems steht und sein Inhalt momentan aktuell ist! Entstanden ist aber auch ein im Explorer nicht sichtbarer Ordner namens .svn , von dem man besser die Finger läßt. Daher kommt der grüne Haken. Er wandelt sich in ein rotes Kreuz, sobald man Dateien verändert. (Entfernt man den Ordner, ist die Versionskontrolle weg, aber die Dateien funktionieren noch, was das Kompilieren angeht.)    Rechte Maustaste auf diesem Namen zeigt dann zwei neue Punkte im Menü:  SVN Update  SVN Commit...   (Eine Weile später kann man mit "SVN Update" immer mal prüfen, ob eine oder mehrere Dateien verändert worden sind; sie werden dann sofort herabgeladen. Hat man selber an einer betroffenen Datei was geändert, kommt eine Konfliktmeldung - das gehört zu Sinn und Zweck einer Versionskontrolle.)   Unter c:\quellen\atools haben wir nun die Quellen für gleich fünf Programme!  Für jedes davon gibt es eine "Projektdatei". Die braucht VisualStudio, um zu  erfahren, wie die betr. Programme aus den Quellen zu erzeugen sind.  Nehmen wir uns als Beispiel das Programm srch vor.  Die eigentlichen Quellen sind, wie gesagt, in c:\quellen\atools , und u.a. ist srch.c  dabei, das Kernmodul für srch.exe . Im Text README steht, was für Aufgaben die anderen Dateien haben. Ruhig mal reinschauen!   5. Projektdateien  Um das ausführbare Programm srch.exe selber zu erstellen, brauchen wir noch die  Projektdatei. In Wahrheit sind es mehrere Dateien, zusammengefaßt in einem  eigenen Repositorium srch-w . Das -w steht für Windows. Es gibt daneben srch-u  mit den Projektdateien (die vollkommen anders aussehen) für Unix/Linux.  Besorgen wir uns also den Inhalt von srch-w (siehe 3.) und packen die Dateien nach   c:\quellen\srch-w . [Richtig üblich ist diese Art und Weise nicht, aber  vollkommen legitim, für unsere Zwecke günstig und vor allem übersichtlich!]  In c:\quellen\srch-w findet sich die Datei srch.sln . Die ist als Startdatei  für VisualStudio gedacht. Außerdem ist da der Unterordner project , in dem  weitere Dateien für VisualStudio liegen, um die wir uns aber nicht kümmern  müssen.  Doppelklick auf srch.sln sollte genügen, VisualStudio zu starten und diese Datei  öffnen zu lassen. Wenn unten links die Meldung  "Bereit"  kommt, braucht man  nur noch F7 zu drücken und die Kompilierung wird ausgeführt. Lassen Sie sich  nicht von den vielen Warnungen irritieren, die dann durchlaufen. Diese sind  beim früheren Compiler VC6 nicht aufgetreten, aber VC10 ist erheblich  empfindlicher. Nach und nach müssen wir die Ursachen beseitigen, das sind  aber Formalitäten, die das Funktionieren der Programme nicht hindern. (Statt  "Warnung" sollte da besser "Hinweis" stehen, das können wir aber nicht ändern.)    Ergebnis ist: Neuer Unterordner Debug unter srch-w , darin srch.exe , das ist das ausführbare Programm. Nach  c:\allegro  verschieben (oder wo Sie Ihre Programme haben) und ausprobieren! z.B. mit dem Befehl   srch -ddemo2\*.ald -sromeo    Empfehlung: Im VisualStudio-Fenster oben links "Release" statt "Debug"  einstellen, dann wird srch.exe kleiner und schneller. "Debug" ist zum  Testen und Fehlersuchen gedacht, damit müßte man sich erst einmal auskennen.   Außerdem automatisch neu entstanden: (alles ohne Gefahr löschbar)   c:\quellen\srch-w : srch.sdf und srch.suo   \project\release : Zwischendateien des Compilers (Typ .obj )   Dieselbe Struktur gibt es auch für die anderen drei Programme, also   c:\quellen\import-w usw.  Alle 4 Projekte greifen auf die C-Dateien unter atools zu, jedoch auf eine jeweils eigene Auswahl. Die C-Quellen aller 10 "Quadriga"-Programme sind also an einer Stelle konzentriert.   Und wo beginnt man am besten mit dem eigenen Programmieren?   Es kommt natürlich drauf an, was man sich zum Ziel setzt. Im Verzeichnis atools findet man eine Datei README , in der steht eine kommentierte Liste der Quelldateien, gedacht als Orientierung:  Welche Funktionen findet man in welcher Datei. Nur mal als Beispiel: Man will das Programm srch ein wenig aufbohren und mit eigenen Funktionen versehen, um gefundene Sätze noch nach eigenen Vorstellungen zu untersuchen oder zu bearbeiten, bevor sie in die Ausgabedatei geschrieben werden. Dafür gibt es ein "Schnittstellenmodul" in der Quelldatei srchs.c .  Darin steht ein Kommentar, der die Möglichkeiten erklärt. Man braucht dann vom eigentlichen Ablauf des Programms ansonsten nichts zu wissen, aber Programmierkenntnisse in C sind an dieser Stelle denn doch nötig. Entsprechendes findet man beim Programm import, d.h. ein Schnittstellenmodul imports.c   Anhang  Tip: Wer gerne mal befehlsorientiert arbeitet statt immer mit Explorer, kann sich einen svn-Kommando-Client hier besorgen:   http://subversion.apache.org/packages.html#windows  oder  http://sourceforge.net/projects/win32svn/?source=directory   und dann Befehle wie svn update etc. auch im "DOS-Fenster" eingeben. (Siehe dazu das oben unter 1. zitierte Lehrbuch.)   Nach dem Download die .msi -Datei  ausführen lassen. Es erfolgt dann eine normale Windows-Installation unter " Programme\Subversion " oder " Program files\Subversion " Im Unterordner " bin " liegt dann dort das Programm svn.exe . Das ist die Grundlage für das befehlsorientierte Arbeiten mit SVN. Um es nutzen zu können, gibt man im DOS-Fenster ein:   set path=path;"\program files\subversion\bin" Das gilt dann aber nur für die aktuelle Sitzung!  Feste Einstellung, siehe z.B.   http://www.java.com/de/download/help/path.xml  an die Systemvariable " Path " anhängen:  ;c:\Program Files\Subversion\bin  Unter Win'7: System / Computer / Systemeigenschaften / Erweiterte Systemeinstellungen / Umgebungsvariablen Systemvariablen / Path , dann "Bearbeiten" und  ;c:\Program Files\Subversion\bin  anhängen            2012-07-09 / 2012-08-01  
</fragment>
</item>
<item>
<fragment>
&gt;  allegro-Expertentreffen 2005                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Expertentreffen 2012   Expertentreffen 2009   Expertentreffen 2007   Expertentreffen 2005   Chronik   UB Braunschweig            allegro -Expertentreffen 2005      Ort:  Universitätsbibliothek Braunschweig  Zeit: 9.-11. Juni 2005  Kostenbeitrag: 25 EUR  Stadtplan    mit Hotels    Bericht von Heinrich Allers   Tagesordnung:    Do., 9.6.   11:00   Begrüßung durch Prof.Dr. Dietmar Brandes, Leiter der UB   11:10   Vorstellung der neuesten Entwicklungen im Kernsystem: V25.5   13:00   Mittagspause   14:00   Vorstellung verschiedener Spezialdatenbanken   15:00   Erwerbungsfunktionen mit FLEX (ORDER)   16:00   Ausleihfunktionen mit FLEX (aLF)   19:00   Gesprächsabend mit Buffet (in der Bibliothek)  Mit Feier dessilbernen Jubiläums   Fr., 10.6.   09:30    FLEXfür Fortgeschrittene   11:00   Vorstellung von Anwenderprojekten   12:30   Mittagspause   14:00   NeueEntwicklungen im Serverbereich (avanti, Z39)   15:00   Abschlußdiskussion   19:00 optional: Treffen in einerBraunschweiger Gaststätte  zum Gespräch über Rand- und Sonderthemen   Sa.,11.6.  optional   09:30   Sonderseminar zum Thema Web-Anbindung Installation, Administration, PHP-Skripte, Beispiele Ende offen        Bericht von Heinrich Allers an die Listenallegro und INETBIB am 16.6.05    "allegro" wurde 25 - Silbernes Jubiläum für ein Bibliotheksprogramm! Zugleich mit dem Allegro-Expertentreffen vom 9.-11.6.2005 feierte die Universitätsbibliothek Braunschweig ein spezielles Jubiläum: Die Software "allegro" kann auf ein Vierteljahrhundert Entwicklungsarbeit zurückblicken! Daher die Versionsbezeichnung V25... Dieses Jubiläum nahm der Direktor der Universitätsbibliothek, Dietmar Brandes, zum Anlaß, zu Beginn ihres dreitägigen Treffens einige Worte an die versammelten Allegro-Experten zu richten. (Bild 1: http://www.goethe.de/z/82/acwww25/ha/alc25/482.htm ) Er sprach dabei die Geschichte von allegro an, wie er sie aus seiner Sicht erlebte, und die von den ersten Anfängen unter dem Namen "allegro '84" (84 ist das Sigel der UB Braunschweig) über den Auftritt einer ministeriellen Prüfgruppe in der Universitätsbibliothek bis hin zur Entscheidung des zuständigen Ministeriums in Hannover reichte, die Entwicklung von allegro als staatlichen Auftrag der UB zu übergeben. Zum Abschluß seiner Begrüßung wies er darauf hin, daß allegro mit seinen 25 Jahren schon so manches viel oder gar viel mehr versprechende andere Produkt überlebt habe und sich ungebrochener Beliebtheit erfreue. Die anschließende Arbeitstagung der Experten zeigte, daß allegro, dem silbernen Jubiläum zum Trotz, durchaus keine Anzeichen erkennen läßt, in die Jahre gekommen zu sein. Seitens der Entwicklungsabteilung wird dafür durch das Angebot immer wieder neuer und teils in Diskussion mit den Anwendern entstehender Erweiterungen und Verbesserungen des Programms sowie ganzer Anwendungspakete gesorgt. Eine solche Anwendung überraschte die Allegrologen als erstes: dem besonderen Termin zu Ehren stellte Chefentwickler Bernhard Eversberg eine Online-Chronik nicht nur der Allegro-Ereignisse der vergangenen 25 Jahre vor. Grundlage dieser Anwendung bildet eine Datenbank, aus der die hier sichtbare Darstellung generiert wird:  http://www.allegro-c.de/chronik/ Die Datenbankstruktur (mit einer neuen J.CFG) ist so angelegt, daß sich mit ihr Chroniken für beliebige Zwecke und Objekte erstellen lassen - allegro dient hier nur als erstes Beispiel. Zu jedem Jahr des Chronik-Zeitraums gibt es einen Datensatz, der beliebig viele Aspekte aufnehmen kann. Zu jedem Aspekt kann per FLEX eine Übersicht erzeugt werden - man schaut sich das am besten selber an! Klicken Sie z.B. in einem der Jahresblätter auf "Literaturnobelpreis" oder auf "Anwender des Jahres". Unter den weiteren Neuheiten, die anschließend vorgestellt wurden, zogen die neuen Kalenderfunktionen besondere Aufmerksamkeit auf sich, nicht nur ihrer Einsetzbarkeit in Ausleihanwendungen wegen, sondern auch, weil diese Funktionen ganz allgemein sehr brauchbar und in dieser Form auch neu zu sein scheinen (bis hin zur Verwaltung eigener Termine) und auch gut aussehen: für jeden Monat von 1901 bis 2099 kann man sofort das Kalenderblatt abrufen, auf dem dann auch alle Feiertage erscheinen, plus Feiertagsliste für das betr. Jahr; Näheres unter http://www.allegro-c.de/kalender.htm Wer mit diesen Kalenderfunktionen einmal praktisch umgehen möchte, zieht sich - sofern er nicht eh eine Allegro-Lizenz besitzt - am besten gleich die Demo-Version herunter ( http://www.allegro-c.de/download.htm ), die auf dem aktuellen Stand ist und auch alle sonstigen (eigentlichen) Leistungen des Systems demonstriert. Noch zu den Kalender-Anwendungen, mit Einzelheiten: Darin enthalten sind umfassende Datums- und Tagesberechnungen. Für die Ausleihe werden die Arbeitstage berücksichtigt! Dafür sind freilich Kalenderdatensätze erforderlich. - Siehe auch im "Füllhorn" den interessanten Menüpunkt "Kalender"! Damit erhält man das Kalenderblatt des laufenden Monats und kann sofort weiterblättern oder ein Kalenderblatt zu jedem Monat des Zeitraums 1901 bis 2099 abrufen. Weitere Neuheiten sowie deren Details, die auf dem Expertentreffen in 10 Abschnitten vorgestellt wurden, finden sich in der am 13.6.2005 verschickten Verlautbarung 183! ### Anwenderentwicklungen: Ausleihsystem; die von Regine Panski an der Bibliothek des Berliner Kammergerichts vorangetriebene Umstellung von alf auf Windows-Basis (Bild 2: http://www.goethe.de/z/82/acwww25/ha/alc25/491.htm ) "Zeitschrifteninhaltsdienst Theologie", vorgestellt von Hilger Weisweiler aus Tübingen. Bisher alcarta-Anwendung, Web-Angebot geplant. Vorstellung einer Lösung für WEB-Gesamt-OPAC von auf verschiedenen Rechnern im Netz der Netze liegenden  Katalogen durch Herrn Niemeyer (mit V. Rosink, Ahrensburg). Thomas Berger stellt Implementierung für OAI-PMH-Repositories (Open Archives Inititative Protocol for Metatadata Harvesting, http://www.openarchives.org ) für allegro-Datenbanken mit avanti vor, die als Open Source unter der GPL verfügbar sein wird.- Das aktuelle Testpaket enthält fertige Beispielanwendungen für $A.CFG (nur Dublin Core als Metadatenformat), allegro-HANS (DC und HansXML) sowie allegro-NRW (DC, MABXML). Mehr Informationen unter http://www.gymel.com/populo/oai-pmh.html . Heinrich Allers stellt das von Harald Schmid (Benediktbeuern) entwickelte Programm  INDA3 zur komfortablen Fremddatenübernahme via z39,50-Schnittstelle vor. ### Unterbrochen wurden die Diskussionen sowie die Vorstellung von Anwenderentwicklungen am zweiten Tage des Treffens von einer historischen Einlage,  nämlich der Enthüllung der Anlage, auf der 1980 die Entwicklung ihren Anfang nahm. (Bild 3: http://www.goethe.de/z/82/acwww25/ha/alc25/3b.htm ): ### Sehr informativ und lehrreich war ferner die Vorstellung neuerer Entwicklungen im Serverbereich. Martin Butkus vom allegro- Entwicklungsteam stellte den Stand des Avanti-Datenbankservers sowie der in Braunschweig ursprünglich als DFG-Projekt entwickelten z39.50- Schnittstelle zu Allegro-Datenbanken dar (Bild 4: http://www.goethe.de/z/82/acwww25/ha/alc25/7b.htm ) - ein Thema, dessen Vertiefung der dritte und letzte Tag des Treffens ganz gewidmet war. ### Der gemütliche Abend mit Büffet in der Bibliothek war, wie immer bei solchen Treffen, die Gelegenheit zum ausführlichen Gedankenaustausch über alles mit jedem. Eine rundum gelungene Sache. Mit besten Grüßen vom Berichterstatter Heinrich Allers       [i] zuletzt aktualisiert:         08.04.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  Expertentreffen 2007                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Expertentreffen 2012   Expertentreffen 2009   Expertentreffen 2007   Expertentreffen 2005   Chronik   UB Braunschweig           allegro - Expertentreffen 2007        Ort:  Universitätsbibliothek Braunschweig  Zeit: 7. und 8. Mai 2007  Kostenbeitrag: 25 €    Anreise zur UB -- Stadtplanmit Hotels      Kurzbericht zu den Ergebnissen   Tagesordnung:   (Umstellungen und Ergänzungen können sich je nach Bedarfslage noch ergeben)    Mo., 7.5.   11:00   Begrüßung   11:10   Vorstellung der neuesten Entwicklungen und Trends im Kernsystem: V27.2 u.a. Umstellung der noch verbliebenen DOS-Programme, MultiX  13:00   Mittagspause   Jeweils berichten bei den folgenden Themen auch Anwender von ihren Erfahrungen:  13:45   Erwerbungsfunktionen mit FLEX (ORDER) , u.a. Zeitschriften-Heftzugang   14:30   Ausleihfunktionen mit FLEX (aLF)   15:15 Für Noch-Nicht-FLEXperten: Kleiner FLEX-CrashCourse mit der aktuellsten Version  Für FLEXperten: Vorstellung einiger fortschrittlicher Verfahren  19:00   Gesprächsabend mit Buffet (in der Bibliothek)    Di., 8.5.   09:30    FLEXfür Fortgeschrittene: Neue Befehle, neue Anwendungen, z.B. Statistik-Verfahren   11:00   Vorstellung von verschiedenen Anwenderprojekten   12:30   Mittagspause   14:00    Web-Anbindung: PHPAC mit Erweiterungsmöglichkeiten, z.B. Nutzerverwaltung, Interaktivität mit AJAX,Funktionsbibliothek   15:00   Abschlußdiskussion, u.a. über das N-Format      [i] zuletzt aktualisiert:         31.03.2011 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;    allegro-Expertentreffen 2012                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Expertentreffen 2012   Expertentreffen 2009   Expertentreffen 2007   Expertentreffen 2005   Chronik   UB Braunschweig            allegro -Expertentreffen 2012         Datum:  28. und 29. Juni 2012  Ort:   UB Braunschweig , Pockelsstr. 13, 38106 Braunschweig  Koordinaten:  N52.27375186415037, E10.529274344444275  Themen:  OpenSource-Projekt, SVN, "Quadriga", Klassenbibliothek C++ (ac15), osdp, VuFind, a99/a99a/alcarta,                      Web-Programmierung, Mobile Anwendungen     Beginn: 11:00 am 28.06. 2012    Ende: 15:00 oder bei Bedarf später am 29.06. 2012   Kostenbeteiligung: diesmal keine.   Weil es sich um einen vergleichsweise kleinen Kreis handelt, werden wir keinen Buffet-Abend veranstalten und kein Entgelt erheben, sondern ein geeignetes Tagungslokal aussuchen für den Abend.   Hinweise zur Anreise u.a. siehe unten .     Tagesordnung (Stand 12.06.2012)      Do., 28.6. 1. Allgemeines zu Stand und Situation der Entwicklung und des OpenSource-Projekts im besonderen. 2. Plattformen zum Kompilieren: VC10 (Windows) bzw. GNU (Linux/Solaris)Organisationsfragen: SVN-Nutzung / Verwaltung  3. "Quadriga" : Hilfsprogramme in C (srch/import/index/qrix) Einblick in die Strukturen, Kompilierung unter VC10 und Linux  4. Klassenbibliothek C++ (ac15), incl. Index-Kernroutinen (aindex) Zur Demonstration der An- und Verwendung dient osdp:  5. osdp  : Kern eines eigenen Konsolprogramms auf Basis der Klassenbibliothek acon : *Das* Konsolprogramm mit FLEX-Job- Interpreter  6. VuFind: Einblick in die Struktur, Überblick der Leistungen und weitere Hinweise   Fr., 29.6. 7. a99/a99a/alcarta : Die Windows-Hauptprogramme Die Komponenten: was sich wo befindet und wie es zusammenhängt 8. Web-Programmierung: PHPAC und a30 9. Mobile Anwendungen: Erste Vorüberlegungen, Stichwörter: Android Apps, HTML5, Entwicklungsumgebung Und, ggfls. auch eingestreut zwischen einzelne TOPs und in  ungezwungenen Unterredungen am Abend: -- Diskussion über Erfahrungen mit den Quellen und mögliche Verbesserungen, sowie über mögliche Aufgabenverteilungen -- Austausch der Einschätzungen und Vorstellungen für das weitere Vorgehen nach 2012. -- Lizenz- und Geschäftsmodelle, die auf der weiteren Nutzung der Quellen dann aufsetzen könnten, u.a. also die rechtliche Situation und dieZukunftsaussichten für das Produkt "allegro", seine      Weiterentwicklung und den professionellen Support.        Was können  Anwender in Zukunft erwarten? Die Reihenfolge kann sich noch ändern.Die Punkte 6 und 9 werden vom Kollegen Neumann vorgestellt. Vorschläge und Angebote von Teilnehmerseite für eigene Darstellungenwerden angenommen, soweit im Umfang zu verkraften.    Zur Anreise  http://www.biblio.tu-bs.de/ueberuns/anfahrt.html (mit Plan)  Vom Hbf zur Bibliothek gelangt man am schnellsten mit Bus M19 (auch  419 genannt), der direkt vor dem Hbf am Bussteig A abfährt.  An der Haltestelle Pockelsstr. überquert man den Ring, geht an dem  Backsteinhochhaus vorbei und sieht die Rückseite des Gebäudes  schon vor sich, der Eingang ist am Forumsplatz.  Der Vortragsraum ist im Erdgeschoß ganz hinten links.   Ansonsten alles über Braunschweig hier:  http://www.braunschweig.de   Hotels:  http://www.braunschweig.de/kultur_tourismus/uebernachten/index.html   Literatur:   allegro OpenSource Einblicke, vorgestellt auf dem Expertentreff 2012             [i] zuletzt aktualisiert:         16.07.2012 Email: ub@tu-bs.de    
</fragment>
</item>
<item>
<fragment>
&gt;  Anpassen der Vufindinstanz - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Anpassen der Vufind Instanz         Inhalt der Seite  VII. PassenSie Ihre Vufind Instanz an  Umeigene Anpassungen an IhrerVuFind Instanz vorzunehmen, bietet VuFind die Option derModularisierung an. Sokönnen Sie beispielsweise Ihr eigenes Layout als Unterverzeichnis von c:\vufind\web\interface\themes anlegen. Kopieren Sie dazu das Schemadefaultund nennen Sie es beispielsweise . Dadurchkönnen Sie Ihreigenes Schema pflegen, ohne dass bei einer Aktualisierung viaSubversion Ihreeigenen Dateien überschrieben werden. Sie müssen dann lediglich dieÄnderungenin Ihr Schema einpflegen. Um Ihr eigenes Schema zu aktivieren, müssenSielediglich in der config.ini (siehe oben) in der Zeile theme = default Ihr eigenes Schema angeben theme = , default. Tipp: Verwenden Sie zum editieren derDateien den freien Texteditor Notepad++ mit entsprechender SMARTYErweiterung!  Wichtige Dateien für die Konfiguration von Vufind am Beispiel allegro-C Vufind Web-OPAC im Überblick:  • c:\www\apache2214\conf\httpd.conf - Apache Konfigurationsdatei  • c:\www\php5217\php.ini - PHP Konfigurationsdatei  • c:\vufind\web\conf\config.ini - Vufind Konfigurationsdatei  • c:\vufind\httpd-vufind.conf - Auskopplung des Auszuges zum Thema Vufind aus der Apache Konfigurationsdatei  • c:\vufind\solr\biblio\conf\solrconf.xml - Solr Konfiguration  • c:\vufind\solr\authority\conf\solrconf.xml - Solr Konfiguration  • c:\vufind\solr\stats\conf\solrconf.xml - Solr Konfiguration                          [i] zuletzt aktualisiert:         09.01.2012 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  VI. Import von Daten - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Import von Daten          VI. ImportierenSie Ihre Daten  DamitVuFind Ihre Daten importieren kann, müssen diese im MARC-Formatvorliegen. Dieaktuelle Fassung der Parameterdatei marctxt.apr ist hier zu finden: http://svn-allegro-c.de/allegro/standard/software/marctxt.apr  Umden allegro-Export in echtes MARC21 zu wandeln benötigen Sie lediglichnoch dasTool “MarcEdit“ (Funktion MarcMaker), das Sie hier bekommen können: http://people.oregonstate.edu/~reeset/marcedit/html/index.php   Hinweis: Damit Ihnen nach dem Importdie korrekten Signaturen zur Verfügung stehen, bearbeiten Sie vor demImport inder Datei:  c:\vufind\import\marc.properties  die Zeile 36 sowie die Zeilen 51-54 wie folgt:  36: series = 440apv:800abcdfpqt:830ap 51: callnumber = custom, getFullCallNumber(090ab:050ab) 52: callnumber-a = 090a:050a, first 53: callnumber-first = 090a[0]:050a[0], callnumber_map.properties, first 54: callnumber-first-code = 090a[0]:050a[0], first  Importieren Sie nun Ihre Datensätze mit dem Befehl c:\vufind\import-marc.bat                         [i] zuletzt aktualisiert:         04.07.2013 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  V. Start der Vufind Testinstanz - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Start der Vufind Testinstanz         V.  StartenSie Ihre VuFind Testinstanz   WechselnSie an der Kommandozeile in das Verzeichnis c:\vufind\solr\jetty undgeben Siefolgendes Kommando ein:  java –Dsolr.solr.home=c:\vufind\solr–Xmx1G –Xms1G –jar start.jar  Hinweis: Im Beispiel wirdder JavaEngine 1GByte Speicher zugewiesen. Ändern Sie diese Werte IhrerUmgebungentsprechend!   StartenSie einen Browser und geben Sie in der Adressleiste http://  /vufind ein. Sie sollten nun Ihre Instanzvon VuFind sehen können.  Tipp: Um die Eingabe zu optimieren ist es sinnvoll sich eine Batch Datei  zu schreiben und diese mit dem Desktop zu verknüpfen, da ein Start der Vufind Testinstanz sehr oft bei Veränderungen durchgeführt werden muss.  Bsp.: c: cd \ cd vufind cd solr cd jetty  java –Dsolr.solr.home=c:\vufind\solr    –Xmx1G –Xms1G –jar start.jar                         [i] zuletzt aktualisiert:         16.12.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  IV. Konfiguration von Vufind - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Konfiguration von Vufind         Inhalt der Seite   IV.  Konfigurationvon VuFind   BearbeitenSie die Datei config .ini (im Bsp. c:\vufind\web\conf\config.ini). Ein großer Teil dieser Datei istselbsterklärend. Für Windows Systeme ist die Anpassung der Pfade von/usr/localauf c:/ zu beachten. Auszugsweise sollte Ihre config.ini wie folgtaussehen:  [Site] path = /vufind url = http://  /vufind local = c:/vufind/web email =   title = "  " theme = default language = de ; default -- moreoptions available in [Languages] below. locale = de_DE ; Find valid timezone valueshere: ;http://www.php.net/manual/en/timezones.php timezone = "Europe/Berlin" defaultModule = Search … [Database] database =mysql://[user]:[passwort]@localhost/vufind schema_location =c:/vufind/web/conf class_location  =c:/vufind/web/services/MyResearch/lib require_prefix  = class_prefix    = debug          = 0  ÖffnenSie folgende Dateien  %VUFIND_HOME%\solr\biblio\conf\solrconf.xml %VUFIND_HOME%\solr\authority\conf\solrconf.xml %VUFIND_HOME%\solr\stats\conf\solrconf.xml   und ersetzen Sie    ${solr.data.dir:./solr/biblio} durch   c:/vufind/solr/biblio Verfahren Sie für die solr.xml Dateien in authority und stats analog.                        [i] zuletzt aktualisiert:         16.12.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  III. Installationsschritte - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Installationsschritte         Inhalt der Seite  III. Installationsschritte:  CheckenSie die aktuelle Version von VuFind als Subversion Repository unter  https://vufind.svn.sourceforge.net/svnroot/vufind/trunk aus.  Hinweis: Im Folgenden wird von einemInstallationspfad c:\vufind ausgegangen. Sollten Sie Ihre vufind Instanz an anderer Stelleausgecheckthaben, so sind die Pfade entsprechend zu ändern! InstallierenSie den Apache Webserver und stellen Sie sicher, dass das mod_rewriteModul inder httpd.conf aktiviert ist. Tragen Sie weiterhin im DirectoryIndexAbschnittden Hinweis auf die index.php ein. Somit sollten die httpd.confauszugsweiseetwa wie folgt aussehen:  … #LoadModuleproxy_connect_modulemodules/mod_proxy_connect.so #LoadModuleproxy_ftp_modulemodules/mod_proxy_ftp.so #LoadModuleproxy_http_modulemodules/mod_proxy_http.so LoadModule rewrite_modulemodules/mod_rewrite.so  LoadModulesetenvif_modulemodules/mod_setenvif.so #LoadModulespeling_modulemodules/mod_speling.so #LoadModulessl_modulemodules/mod_ssl.so …   DirectoryIndex index.html index.php    Hinweis: Die Datei httpd.conf findenSie unter %APACHE_HOME% \conf !  InstallierenSie MySQL in einen Ordner Ihrer Wahl und vergeben Sie ein RootPasswort. AchtenSie darauf, dass der Port 3306 in Ihrer Firewall geöffnet wird. ZurweiterenAdministration der MySQL Datenbank(en) bieten sich Tools wiePHPMyAdmin, dieMySQL GUI Tools oder der DB Visualizer an. Damit das System im weiteren Betrieb die MySQL Bibliotheksfunktionennutzenkann, bietet es sich an dieser Stelle an, die Datei libmySQL.dll von %MySQL_HOME% \bin nach %SystemRoot% \System32 zu kopieren. InstallierenSie PHP 5.2.x! Achten Sie darauf, nicht PHP5.3.x zu verwenden, da sichhier dasPEAR Modul nicht im Installationsdialog anwählen lässt. Wählen Sie beiderInstallation folgende Erweiterungen an:   LDAP (optional)   MySQL   PDO (mit MySQL)   Pspell (optional)   XSL Wählen Sie weiterhin unter Extras PEAR und fahren Sie mit derInstallationfort. Sollten Sie die Pspell Erweiterung benötigen bzw. bei der Installationangewählt haben, installieren Sie zusätzlich GNU Aspell und kopierenSie nachder Installation die Datei aspell-15.dll aus %ASPELL_HOME% \bin nach %SystemRoot% \System32 ! Führen Sie nun an der Kommandozeile den Befehl %PHP_HOME% \go-pear.bat aus folgen Sie den Anweisungen.  Hinweis: Bei der Installation vonPEAR kann es zu einem Fehler bei der Deklaration der Umgebungsvariablenkommen.Lassen Sie die Installation von PEAR wie im Setup vorgeschlagendurchführen,die Umgebungsvariablen werden später korrigiert! ErstellenSie unter dem neu angelegten Verzeichnis %PHP_HOME% \PEAR eine Unterordner Smarty . Laden Siesich die Smarty Template Engine herunter und entpacken Sie dasheruntergeladene*.zip-File z.B. nach c:\temp. Kopieren Sie Inhalt des Verzeichnisses c:\temp\ %SMARTY% \libs nach %PHP_HOME% \PEAR\Smarty . InstallierenSie die Java JDK (wenn nicht schon bereits vorhanden). KontrollierenSie Ihre Umgebungsvariablen Folgenden Umgebungsvariablensollten für den Nutzer gesetzt sein:  PHP_PEAR_BIN_DIR     =  %PHP_HOME%\ PHP_PEAR_DATA_DIR    =  %PHP_HOME%\data PHP_PEAR_DOC_DIR     =  %PHP_HOME%\docs PHP_PEAR_INSTALL_DIR =  %PHP_HOME%\pear PHP_PEAR_PHP_BIN     =  %PHP_HOME%\php.exe PHP_PEAR_SYSCONF_DIR =  %PHP_HOME%\ PHP_PEAR_TEST_DIR    =  %PHP_HOME%\tests  StartenSie gegebenenfalls denRechner neu!  FührenSie an der Kommandozeile install.bat (im Bsp. im Vufindstammverzeichnis c:\vufind\install.bat )aus. Hierdurch werden die erforderlichen PEAR Updates heruntergeladensowie dieentsprechende MySQL Datenbank angelegt! Fügen Sie der httpd.conffolgenden Eintraghinzu:   Include c:/vufind/httpd-vufind.conf                        [i] zuletzt aktualisiert:         10.01.2012 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  II. Verwendete Software - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Verwendete Software        II. VerwendeteSoftware bei allegro-C Beispiel Vufind Web-OPAC:   WINDOWS XP  Apache2.2.14  PHP 5.2.17 MySQL 5.1.39 SmartyTemplate Engine 2.6.26 Java JDK 1.6  GNUAspell 0.50-3 (optional, falls nicht benötigt auskommentieren in php.ini)) Tortoise SVN MarcEdit Notepad++                          [i] zuletzt aktualisiert:         16.12.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
&gt;  I. Links &amp; Hinweise - Installation von VuFind V1.2 auf Windows Systemen                                           Impressum         Startseite    allegro-C von A-Z   Druckversion            ﻿   Startseite    Downloads, Lizenz   Anleitungen   Skriptsprache FLEX   Ausleihe   Erwerbung   Zeitschriften   Web-Anbindung   a35 mit HTML5, JS   a35 Beispiel Kataloge   a35 - Doku (HTML5, JS)   a30 Beispiel Kataloge   a30 - RIA für allegro   PHP Beispiel Kataloge   PHP - Schnittstelle   avanti - Datenbankserver   Schnittstelle Z39.50   Web - Anbindung RuckZuck   allegro Referenzkataloge   VuFind auf Windows Systemen   E-Mail Liste allegro   E-Mail allegro Archiv   Datenformat   Fortbildung   Dokumentation   Zack: Z39-Zugriff   Veranstaltungen   Chronik   UB Braunschweig           Seitentitel: Installation von VuFind V1.2 auf Windows Systemen - Hilfreiche Links - Allgemeine Hinweise         Inhalt der Seite   VuFind                    ist OpenSource-Software. Man findet sie unter http://vufind.org .    Dort                    ist auch ein Wiki mit umfassender Dokumentation.  Hier                    geht es nur um die Bereitstellung der Daten aus einem allegro-System.       VuFind                    läuft völlig getrennt vom allegro-System. Es braucht eine Kopie der Daten                    im MARC-Format. Das Einfachste ist, jeden Tag oder jede Woche einen Export                    der Datenbank zu machen und den VuFind-Index damit ganz neu aufzubauen. Möglich ist es aber auch, wenn man sehr große Datenmengen hat,                    jeweils die neu entstandenen und geänderten Daten täglich oder öfter                    an VuFind zu geben, damit es seinen Index aktualisieren kann. Wie man das                    alles macht, wird andernorts beschrieben.   Hilfreiche links   JISC page for the 12/09 Funding Call, including the full document at the bottom:  http://www.jisc.ac.uk/fundingopportunities/funding_calls/2009/12/1209lms.aspx  CReDAUL blog (i.e. this one!)  http://credaul.wordpress.com/  Enhanced Library Management Systems Documentation (“Programme Notebook”)  http://code.google.com/p/jisclms/w/list  CReDAUL project page in notebook  http://code.google.com/p/jisclms/wiki/credaul  CReDAUL Google Code site  http://code.google.com/p/credaul/   VuFind Catalogue Software   Project homepage: http://vufind.org/  Example Catalogue LSE: https://catalogue.lse.ac.uk/  Example Catalogue National Library of Australia http://catalogue.nla.gov.au/   Blacklight Catalogue Software   Project homepage: http://projectblacklight.org/  Example Catalogue University of Stanford: http://searchworks.stanford.edu/  Example Catalogue University of Viginia http://virgobeta.lib.virginia.edu/         Allgemeine Hinweise: Diese  Anleitung beschreibt die Installation von VuFind V1.2 auf Windows Systemen ohne die Verwendung von Komplettpaketen wie XAMPP. Wie bei allen  Anwendungen, die von Linux-Systemen portiert wurden, empfiehlt es sich  auch bei  VuFind bestimmte Verzeichniskonventionen einzuhalten. Dies bedeutet,  dass bei  dem hier beschriebenen System die Pfade für z.B. Apache, MySQL usw. komplett    ohne Leerzeichen verwendet wurden, um einen fehlerfreien  Betrieb  gewährleisten zu können. (als Bsp. man legt sich ein spezielles Verzeichnis an, z.B. www im Stammverzeichnis (c:\www\phpVNR ; c:\www\apacheVNR\, c:\www\mysqlVNR .... VNR. Versionsnummer) an in dieses man die einzelnen Programme installiert)                    [i] zuletzt aktualisiert:         16.12.2011 Email: ub@tu-bs.de   
</fragment>
</item>
<item>
<fragment>
Dokumenttyp    Format-Konkordanz Synopsis   Dokumenttyp   Pica+ 013@$0  Pica3 1110  Pica+ 044N Formschlagwort Pica3 555X Formschlagwort MAB 902f Formschlagwort allegro  #0c Formschlüssel (äquivalent RSWK                     Formschlagwort) BIS 5260-5261t Art und Inhalt der Veröffentlichung 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Unterschlagwort    Format-Konkordanz Synopsis   Unterschlagwort  engl.: topical subdivision Definition: zur Gliederung der Einträge unter einem Schlagwort Pica3 511X  MAB 902# Unterschlagwort als Teil einer Schlagwortkette (Indik.                     blank) MARC21 650$x  allegro  #31u  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Schlagwortkette    Format-Konkordanz Synopsis   Schlagwortkette   Pica+ 041A00  Anm. 041A00 bis 041A05 enthalten die 6 Glieder der SWK, 041A10 bis 041A15 die             der 2. SWK, usw. Pica3 5100-5105  Pica+ 041A08 Permutationsmuster der 1. SWK Pica3 5108 Permutationsmuster der 1. SWK MAB 902 (W10) Kettenglied der ersten Schlagwortkette MAB2 900 IdentNummer der 1. Schlagwortkette     Indik.: p Personenschlagwort g geographisch-ethnographisches Schlagwort s Sachschlagwort k Körperschaftsschlagwort: Individualname c Körperschaftsschlagwort: Ortssitz z Zeitschlagwort f Formschlagwort t Werktitel als Schlagwort # Unterschlagwort einer Ansetzungskette Anm. Die bis zu 6 Felder 902 bilden zusammen die 1. Schlagwortkette. Jede 902             beginnt mit 22 Stellen Steuerdaten: 1 Operator 1 HSW-Kennung 2x10stellige             Verkn.Nr.             Oder: 1 Operator 1 HSW-Kennung 1 Füllzeichen |             Operator: 1=gleichberechtigtes Kettenglied, 2=Verbindung zweier Kettenglieder,             3=Teil einer Ansetzungskette, 4=Teilkette             905-906 = 2. SW-Kette, ..., 945-948 = 10. SW-Kette MAB 905-909 (W10) Zweite Schlagwortkette 910-914 3. Schlagwortkette 945-949 10. Schlagwortkette Anm. Aufbau wie 900,902,903,904 allegro  #330 Erste Schlagwortkette Anm. Struktur: $TSchlagwort_IdNr$T...$PPermutationsmuster             T=SW-Typ (pgstkcfz) 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment RSWK-               Schlagwortketten    Format-Konkordanz Synopsis   Segment RSWK-Schlagwortketten   MAB 9--  Anm. kann auch in SWD verwendet werden 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Weitere               Verweisungsformen    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Weitere Verweisungsformen   MAB2 897 (W50) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusätzliche               Suchwörter    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Zusätzliche Suchwörter   Pica+ 047C Zusätzliche Suchwörter für                     Körperschaftsnamen Pica3 n255 Zusätzliche Suchwörter für                     Körperschaftsnamen MAB2 895 (W50) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Früheres               Schlagwort; Späteres Schlagwort    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Früheres Schlagwort; Späteres Schlagwort   Pica+ 039E Früheres Schlagwort  Subfields: $y einleitender Standardtext, z.B. "früher", "später" $a Schlagwort-Verweisungsform $S MAB-Indikator $z abschließender Standardtext Pica3 870 Früheres Schlagwort   Struktur: :_Einleitender Standardtext             Schlagwort             |MAB-Indikator|             !Lemmanummer!             abschließender Text Pica+ 039F Späteres Schlagwort Pica3 880 Späteres Schlagwort MAB 870 Schlagwort für eine frühere Benennung     Indik.: p Personen-SW bzw. Schlagwortansetzung mit Personen-SW als                     Hauptschlagwort k Körperschaftschlagwort c Körperschaftsschlagw. (geogr. Ansetzung) g Geogr.-Ethnogr. Schlagw. t Sachtitel eines Werkes s Sachschlagwort f Formschlagwort z Zeitschlagwort # nicht spezifiziert v Bemerkungen Anm. Indikatoren wie bei 830 (wenn v, dann zur vorangehenden 870 gehörig) MAB 880 Schlagwort für eine spätere Benennung Anm. Indikatoren wie bei 830 allegro  #3nr_$s Späteres Schlagwort  ... #3nr_$f Früheres Schlagwort BIS 6570-6571s  .... 6572-6573s  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verwandtes               Schlagwort    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Verwandtes Schlagwort   Pica+ 039D Subfields: $y einleitender Standardtext, z.B. "früher", "später" $a Schlagwort-Verweisungsform $S MAB-Indikator $z abschließender Standardtext Pica3 860 Struktur: :_Einleitender Standardtext             Schlagwort             |MAB-Indikator|             !Lemmanummer!             abschließender Text MAB 860  Anm. siehe 800             zusätzlich: v=Bemerkung zum vorangehenden 860 allegro  #3nr_$r  Anm. mehrere Typen, Trennung durch "$x"             x = a,b,f,n,s,r BIS 6560-6564s  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaft,               Verknüpfungen    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Körperschaft, Verknüpfungen  Definition: frühere, spätere und zeitweise Namen Pica+ 038C Chronologische Verknüpfungen  Subfields: $9 IdentNummer der verkn. Körp. $z Standardtext zur Verkn. Pica3 450 Chronologische Verknüpfungen   Struktur: Standardtext zur Art der Verknüpfung             :_!IdentNummer der verkn. Körp.! Pica+ 038C Körperschaft, Affiliation (Person) Pica3 450 Körperschaft, Affiliation (Person) MAB 850 (1.) Früherer, zeitweiser oder späterer                     Körperschaftsname     Indik.: a früherer Name b zeitweiser Name c späterer Name d früherer und späterer Name e früher auch f später auch m früherer Name (nicht reziprok) o späterer Name (nicht reziprok) s siehe auch MAB 851 Zusätzliche Angaben zum 1. früheren... Namen der                     Körperschaft 852 IdentNummer des 1. früheren... Namens 853855/892894 2.-15. früherer ... Name der Körperschaft etc.    Indik.: a Überregionale IdentNummer b Regionale Identnummer c Lokale IdentNummer allegro  #6ns späterer Körperschaftsname  ... #6nf früherer Körperschaftsname ZDB fla-flj Früherer Körperschaftsname Anm. wird mit GKD-Nummer der jeweils zugehörigen Körp. besetzt,             reziprok zu sla-slj im Bezugssatz 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Oberbegriff zu               Individualbezeichnungen    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Oberbegriff zu Individualbezeichnungen  Definition: für Schlagwortverknüpfungen Pica3 845  MAB 845 (W50) Anm. wie 800, und v=Bemerkung zur vorangehenden 845             enth. einen der Schlagwortansetzung hierarchisch übergeordneten Begriff,             bei dem es sich um eine Schlagwortverknüpfung handelt 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Äquivalente               Bezeichnung; Synonymes Schlagwort    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Äquivalente Bezeichnung; Synonymes Schlagwort  engl.: See From tracing - topical term  Pica+ 041F  Pica3 830  MAB 830 (W50) Anm. wie 800, ferner v=Bemerkung zur vorangehenden 830 MARC21 450 See From Tracing--Topical Term (R)  Subfields: $a Topical term or geographic name as entry element $b Topical term following geographic name as entry element $i Relationship information (R) $v Form subdivision (R) $w Control subfield   ** 0 Special relationship   .... a Earlier heading   .... b Later heading   .... d Acronym   .... f Musical composition   .... g Broader term   .... h Narrower term   .... i Reference instruction phrase in subfield$i   .... n Not applicable   ** 1 Tracing use restriction   .... a Name reference structure only   .... b Subject reference structure only   .... c Series reference structure only   .... d Name and subject reference structures   .... e Name and series reference structures   .... f Subject and series reference structures   .... g Name, subject, and series reference structures   .... n Not applicable   ** 2 Earlier form of heading   .... a Pre-AACR 2 form of heading (national name authority file)   .... e Earlier established form of heading (national authority file)   .... o Earlier established form of heading (other authority file)   .... n Not applicable   ** 3 Reference display   .... a Reference not displayed   .... b Reference not displayed, field 664 used   .... c Reference not displayed, field 663 used   .... d Reference not displayed, field 665 used   .... n Not applicable $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $4 Relationship code (R) $5 Institution to which field applies (R) $6 Linkage allegro  #3na  Anm. Mehrfachtrennung: "; " BIS 8040n  .... 6520-6549s  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Personenname               Verweisungsformen    Format-Konkordanz Synopsis   Personen-Normdaten  Personenname Verweisungsformen  engl.: See from tracing - personal name  Pica+ 028@  Anm. Subfields wie 028A Pica3 20x  Pica+ 028E Personenname, zusätzl. Verweisungsform (GBV) 028H hebräische Namensform (reine Transliteration) 028N Personenname, provisorische Verweisungsformen 038J Gegenseitige Siehe-auch-Verweisung Pica3 201 Personenname, zusätzl. Verweisungsform (GBV) 204 hebräische Namensform (reine Transliteration) 210 Personenname, provisorische Verweisungsformen 420 Gegenseitige Siehe-auch-Verweisung MAB2 830 Verweisungsform zum Namen der Person (W50)     Indik.: p Personen-SW bzw. Schlagwortansetzung mit Personen-SW als                     Hauptschlagwort k Körperschaftschlagwort c Körperschaftsschlagw. (geogr. Ansetzung) g Geogr.-Ethnogr. Schlagw. t Sachtitel eines Werkes s Sachschlagwort f Formschlagwort z Zeitschlagwort # nicht spezifiziert v Bemerkungen Anm. Jeder 830 kann eine 830v mit Bemerkungen folgen! MAB2 860 Siehe-auch-Verweisung zum Namen der Person (W50) 890 Neue Ansetzungsform bei Änderung des Personennamens 891 Alte Ansetzungsform bei Änderung des Personennamens Anm. Indik: a=Ansetzungsform             b=Bemerkungen (bei 891/891)             v=Bemerkungen (bei 860) MARC21 400 See From Tracing--Personal Name (R)  Subfields: $a Personal name $b Numeration $c Titles and other words associated with a name (R) $d Dates associated with a name $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $i Relationship information $j Attribution qualifier $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section of a work (R) $o Arranged statement for music $p Name of part/section of a work (R) $q Fuller form of name $r Key for music $s Version $t Title of a work $v Form subdivision (R) $w Control subfield   ** 0 Special relationship   .... a Earlier heading   .... b Later heading   .... d Acronym   .... f Musical composition   .... g Broader term   .... h Narrower term   .... i Reference instruction phrase in subfield$i   .... n Not applicable   ** 1 Tracing use restriction   .... a Name reference structure only   .... b Subject reference structure only   .... c Series reference structure only   .... d Name and subject reference structures   .... e Name and series reference structures   .... f Subject and series reference structures   .... g Name, subject, and series reference structures   .... n Not applicable   ** 2 Earlier form of heading   .... a Pre-AACR 2 form of heading (national name authority file)   .... e Earlier established form of heading (national authority file)   .... o Earlier established form of heading (other authority file)   .... n Not applicable   ** 3 Reference display   .... a Reference not displayed   .... b Reference not displayed, field 664 used   .... c Reference not displayed, field 663 used   .... d Reference not displayed, field 665 used   .... n Not applicable $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $4 Relationship code (R) $5 Institution to which field applies (R) $6 Linkage Indic/etc.: 1st: Type of personal name entry element             0 Forename             1 Multiple and single surnames             2 Multiple surname [obs.]             3 Family name             2nd: Undefined; contains a blank (#) allegro  #4na ... #4nr Personenname siehe-auch-Hinweis BIS 6021-6229a  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Basisklassifikation    Format-Konkordanz Synopsis   Normdaten-Kategorie  Basisklassifikation  Definition: Stammdatensatz für eine Systemstelle Pica+ 045A Subfields: $a Notation $b nähere Erläuterung Pica3 170  MAB 800 Notation, Systematikstelle usw. Anm. MAB-NOTAT (Satztyp q) MAB 830 Verweisungsformen zur Notation, Systematikstelle usw.(W50) MAB2 840 Klassenbezeichnung zur Notation, Systematikstelle usw. allegro  #3n_bH  Anm. H = Hierarchiestufe 0..3 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
IdentNummer der               Pauschalverweisung zur Alternativform    Format-Konkordanz Synopsis   Schlagwort-Normdaten  IdentNummer der Pauschalverweisung zur Alternativform   MAB 829  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Unterschlagwort zur               Alternativform    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Unterschlagwort zur Alternativform   Pica+ 041E01 Subfields: $a Schlagwort $b ergänzende Angaben Anm. 041E01 bis 041E05 entsprechen 041B01 bis 041B05 Pica3 821 - 825 MAB 821  Anm. 821 bis 825 entsprechen 801 bis 805 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Alternativform zum               Hauptschlagwort    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Alternativform zum Hauptschlagwort   Pica+ 041D  Pica3 820  MAB 820 Indik.: wie 800 MAB 821-825 Unterschlagworter zur Alternativform 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Werke der               Person    Format-Konkordanz Synopsis   Personen-Normdaten  Werke der Person  Definition: Titel mit Erscheinungsjahren, zur Identifikation der Person Pica+ 046G$a Titelangaben zur Person Pica3 899 Titelangaben zur Person MAB2 816 (W50) Anm. Die Titel sind in Ansetzungsform anzugeben, Jahr durch ". - " abgetrennt 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Daten zur               Person    Format-Konkordanz Synopsis   Normdaten-Kategorie  Daten zur Person  Definition: Persönliche Angaben Pica+ 032A  Pica3 300 Lebens- und/oder Wirkungsdaten einer Person   Struktur: |a| Lebensdaten, |b| Wirkungsdaten, _%Bemerkungen Pica+ 032E Lebens- und Wirkungsdaten in nichtnormierter Form 032B Beruf und/oder FUnktion, sonstige identifizierende Angaben Pica3 305 Lebens- und Wirkungsdaten in nichtnormierter Form 310 Beruf und/oder Funktion, sonstige identifizierende Angaben MAB2 814 (W30)     Indik.: # nicht spezifiziert a Lebensdaten b Wirkungsdaten c Geburtsort d Sterbeort e Wirkungsort/Adresse f Geschlecht g Nationalität h Sprache i Beruf und/oder Funktion j Akademische Titel k Dienstgrad l Titel von Universalgelehrten m Persönliche Beziehungen u Sonstige Daten zur Person v Bemerkungen zu den Daten zur Person Anm. Trennung mehrerer Angaben durch "; " MAB2 815 (W30) Daten zur Person in normierter Form Anm. Indikatoren wie bei 814, zusätzlich v für Benerkungen, der auf             jeden anderen Indikator direkt folgen kann MARC21 370 Associated place  Subfields: $a Place of birth $b Place of death $c Associated country $e Place of residence/headquarters $f Other associated place $g Place of origin of work $s Start period $t End period $u URI - Uniform Resource Identifier $v Source of information $0 Record control number $2 Source of term $6 Linkage $8 Field link ad sequence number MARC21 372 Field of activity  Subfields: $a Field of activity $s Start period $t End period $u URI - Uniform Resource Identifier $v Source of information $0 Record control number $2 Source of term $6 Linkage $8 Field link ad sequence number allegro  #4nd Lebensdaten der Person 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sprachencode               ISO    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Sprachencode ISO   Pica3 812  MAB 812*  Anm. Verwendung in der SWD zur Angabe der Sprache einer Person;             Mehrfachtrennung: X'80' 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Freie Umschreibung               zur Notation    Format-Konkordanz Synopsis   Normdaten-Kategorie  Freie Umschreibung zur Notation   Pica+ 037A Subfields: $a Notations-Umschreibung in Textform $f synonyme Umschreibung Pica3 530 Struktur: Text             _=_synon. Umschr. MAB 808 Erläuterungen, Bemerkungen zu einer Notation,                     Systematikstelle usw. 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Kommentar zum               Stammsatz    Format-Konkordanz Synopsis   Normdaten-Kategorie  Kommentar zum Stammsatz  engl.: Information note  Pica+ 047A Kommentare zum Namenssatz Pica3 900  Pica+ 046A Erläuterungen zum Schlagwort 039A IdentNummer der Sätze für Pauschalverw. 047A01 Mailbox-Nachrichten 047A09 Kommentare zur EDV-Bearbeitung 047A10 Bibliotheksspezifische Kommentare 047A50 Identifizierende Angaben (provisorisch) 047A80 Kommentar zur Individualisierung 047A/20 GBV-interne Kommentare Pica3 808 Erläuterungen zum SWD-Schlagwort 809 IdentNummer der Sätze für Pauschalverw. 901 Mailbox-Nachrichten 909 Kommentare zur EDV-Bearbeitung 910 Bibliotheksspezifische Kommentare 950 Identifizierende Angaben (provisorisch) 980 Kommentar zur Individualisierung 920 GBV-interne Kommentare MAB 808 Erläuterungen zum Schlagwort (W4, SWD)     Indik.: a Quelle b Definition c Benutzungshinweise d redaktionelle Bemerkungen zum Stammsatz MARC21 680 Scope note  Subfields: $a Classification number - single nr or beginning nr of span $b Classification numbr - ending nr of span $i Explanatory text $y Table identification - schedule $z Table identification - table number $5 Institution to which field applies $8 Link and sequence number Indic/etc.: Indic.1: Hierarchical force: 0=not applicable or no hierarchical force,             1=Hierarchical force, 2=Semihierarchical force UNIMARC 300 Indic/etc.: Indic.1 0=Note concerns name or title use of heading             1=Note concerns subject use of heading allegro  #3nz  ZDB si Sonstige Informationen zur                     Körperschaft BIS 6511s  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Daten der               Körperschaft    Format-Konkordanz Synopsis   Daten der Körperschaft  Definition: Eindeutiger Code für Zeitschriftenartikel Pica+ 032A  Pica3 n300  MAB 805 Daten der Körperschaft     Indik.: # nicht spezifiziert a Internationale Artikelnummer (EAN) b Universal Product Code (UPC) allegro  #6nd  ZDB dk Daten der Körperschaft Anm. bis 20 Zeichen lang 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaftsname - Verweisungsform    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Körperschaftsname - Verweisungsform  engl.: See from tracing - Corporate name  Pica+ 029@  Anm. Subfields wie in 029A Pica3 250  Pica+ 029C Körperschaftsmname - provisorische Verweisungsform Pica3 n251 Körperschaftsmname - provisorische Verweisungsform MAB 810 Verweisungsform 1 zum Namen der Körperschaft MAB 803 Übersetzung des Körperschaftsnamens 811 Zusätzliche Angaben zur 1. Verweisungsform 812 Verweisungsform 2 zum Namen der Körperschaft 813 Zusätzliche Angaben zur 2. Verweisungsform 814815/848849 Verweisungsformen 3-20 MARC21 410 See From Tracing--Corporate Name (R)  Subfields: $a Corporate name or jurisdiction name as entry element $b Subordinate unit (R) $c Location of meeting $d Date of meeting or treaty signing (R) $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $i Relationship information (R) $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section/meeting (R) $o Arranged statement for music $p Name of part/section of a work (R) $r Key for music $s Version $t Title of a work $v Form subdivision (R) $w Control subfield   ** 0 Special relationship   .... a Earlier heading   .... b Later heading   .... d Acronym   .... f Musical composition   .... g Broader term   .... h Narrower term   .... i Reference instruction phrase in subfield$i   .... n Not applicable   ** 1 Tracing use restriction   .... a Name reference structure only   .... b Subject reference structure only   .... c Series reference structure only   .... d Name and subject reference structures   .... e Name and series reference structures   .... f Subject and series reference structures   .... g Name, subject, and series reference structures   .... n Not applicable   ** 2 Earlier form of heading   .... a Pre-AACR 2 form of heading (national name authority file)   .... e Earlier established form of heading (national authority file)   .... o Earlier established form of heading (other authority file)   .... n Not applicable   ** 3 Reference display   .... a Reference not displayed   .... b Reference not displayed, field 664 used   .... c Reference not displayed, field 663 used   .... d Reference not displayed, field 665 used   .... n Not applicable $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $4 Relationship code (R) $5 Institution to which field applies (R) $6 Linkage Indic/etc.: 1st: Type of corporate name entry element             0 Inverted name             1 Jurisdiction name             2 Name in direct order             2nd: Undefined; contains a blank (#) allegro  #6na  Anm. Mehrfachtrennung: "; "  ... #6nr Körperschaftsname - s.a. Hinweis ZDB kva-kvt  BIS 6121-6129k  .... 6132k AACR-Form des Körperschaftsnamens 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Hauptbegriff zur               Notation    Format-Konkordanz Synopsis   Normdaten-Kategorie  Hauptbegriff zur Notation   Pica+ 044E Subfields: $a Umschreibung für Notation $b ergänzende Angaben zum Begriff Pica3 500 Struktur: Umschreibung für Notation             _(ergänzende Angaben zum Begriff) MAB 803 Beschreibung der Notation, Systematikstelle usw. (W5)     Indik.: # nicht spezifiziert a Umschreibung der Notation, Systematikstelle b Synonyme Umschreibung der Notation c Freie Umschreibung der Notation d Begriffe zu einer Notation 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
IdentNummer der               GKD    Format-Konkordanz Synopsis   Körperschafts-Normdaten  IdentNummer der GKD   Pica+ 007P Subfields: $0 GKD-Nummer $S MAB-Indikator Pica3 020 Struktur: GKD-Nummer             |MAB-Indikator| Pica+ 007S PND-Nummer Pica3 029  MAB 802* Überörtl. IdentNr d. Körp. MAB2 028 IdentNummer von Normdaten (W10)     Indik.: a PND b GKD c SWD MAB 806 Überörtliche IdentNummer der übergeordneten                     Körperschaft (W10)        Werte: Verwendung von 802 z.B. als Querverweis in SWD! Erste Position ist |, wenn keine Nummer sondern ein Name drinsteht allegro  #89G  ZDB kid Körperschafts-IdentNummer BIS 6110k  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Abkürzung des               Körperschaftsnamens    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Abkürzung des Körperschaftsnamens  Definition: offizielle Abkürzungen Pica+ 029B Abkürzung der Hauptansetzungsform Pica3 151  MAB 801b  ZDB kk Abkürzung der Ansetzungsform Anm. kk bezieht sich auf kn, kka auf kva ... 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Unterschlagwort               einer Ansetzungskette    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Unterschlagwort einer Ansetzungskette   Pica+ 041B01 Subfields: $a Schlagwort $b ergänzende Angaben Anm. 041B01 bis 041B05 bilden die weiteren Teile einer "Ansetzungskette" Pica3 801 - 805 Unterschlagwort zum Hauptschlagwort MAB 801 Unterschlagwort 1 einer Ansetzungskette Anm. 801 bis 805 bilden die weiteren Teile einer "Ansetzungskette" MAB 802805 Unterschlagwort 2 bis 5 einer Ansetzungskette Anm. wie 800 allegro  #3n_xxx_/_USW  Anm. Struktur: #3n xxx HSW / USW1 / ... / USW5 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bibliotheksadresse    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Bibliotheksadresse  Definition: Stammsatz für eine Bibliothek MAB 800 Name der Institution MAB 801 Adresse der Institution 802 Angaben über Zugang und Erreichbarkeit 803 Lieferkonditionen 805 Liefer- und Melderkennungen der ZDB 806 Zusätzliche Sigelangaben 808 Bemerkungen 809 Übernommene Bibliotheken 811 Sammelgebiete 812 Codes und Sigel für die Deutsche Bibliotheksstatistik 830 Weitere Namensformen der InstitutionUnterfelder: $a Ort $b Straße $c Hausnummer $d Postfach $e Postleitzahl $u nicht spezifizierte Angaben z Bemerkungen zur Adresse allegro  #9A_A Inhalt: A Sigel  $N Name für Registerzeile $n Name für Anschrift $a Anschrift $t Telefon $O Öffnungszeiten $B Benutzungsbedingungen $Z Ansprechperson Anm. Notwendig z.B. für Zeitschriften-Gesamtkataloge, aber auch für             Erwerbungsprogramm 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaftsname - Hauptansetzungsform    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Körperschaftsname - Hauptansetzungsform  engl.: Heading - Corporate name  Pica+ 029A Subfields: $a Hauptansetzungsform Körperschaftsname $b Abteilung der Körperschaft $c Ordnungshilfe Körperschaftsname $d Abkürzung des Körperschaftsnamens (in 029@) $x Ordnungshilfe zur Abteilung der Körperschaft Pica3 150 Struktur: [Artikel_@]Hauptansetzungsform Körperschaftsname             _ _/_Abteilung             (Abkürzung der Abteilung)             _  Pica+ 029N Offizieller Körperschaftsname nicht normiert  Subfields: $a Name $b Bemerkungen Pica3 n155 Offizieller Körperschaftsname nicht normiert   Struktur: Name_*Bemerkungen MAB 800 Name der Körperschaft in Ansetzungsform MAB 801 Zusätzliche Angaben zur Ansetzungsform (W20) 802 Offizieller Name der Körperschaft Anm. Indik. a=Bemerkungen zur Ansetzungsform             b=Abkürzungen der Ansetzungsform MARC21 110 Heading--Corporate Name  Subfields: $a Corporate name or jurisdiction name as entry element $b Subordinate unit (R) $c Location of meeting $d Date of meeting or treaty signing (R) $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section/meeting (R) $o Arranged statement for music $p Name of part/section of a work (R) $r Key for music $s Version $t Title of a work $v Form subdivision (R) $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $6 Linkage Indic/etc.: 1st: Type of corporate name entry element             0 Inverted name             1 Jurisdiction name             2 Name in direct order             2nd: Undefined; contains a blank (#) UNIMARC 210 Subfields: $a Entry element Corporate Name $b Subdivision $c Addition to name or qualifier $d Number of meeting and/or number of part of meeting $e Location of meeting $f Date of meeting $g Inverted element of Corp. Name $h Part of name other than entry elem. or inverted elem. $4 Relator Code for Corp. Body $x Topical Subdivision $y Geographical Subdivision $z Chronological Subdivision allegro  #6n ... #6nz Kommentar zur Körperschaft ZDB kn (P) BIS 6120k  .... 6300k Kommentar zur Körperschaft 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Geographischer               Name, Stammsatz    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Geographischer Name, Stammsatz  engl.: Heading - Territorial or Geographic name  Pica+ 009B  Pica3 009  MAB 800g  UNIMARC 215 Subfields: $a Entry element - Territorial name $x Topical subdivision $y Geographical subdivision $z Chronological subdivision allegro  #3n_sg  Anm. auf sg sollte ein (oder mehrere) Geocode folgen, dann der Begriff 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Hauptschlagwort    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Hauptschlagwort  engl.: Heading - Topical Term  Pica+ 041A Subfields: $a Schlagwort-Ansetzung $b ergänzende Angaben zum Schlagwort $S MAB-Indikator Anm. auch für: 1. Teil einer Pauschalverweisung Pica3 800 Struktur: Schlagwort-Ansetzung             _(ergänzende Angaben zum Schlagwort)             |MAB-Indik.| MAB 800 Werte: p Personenschlagwort-Ansetzung k Körperschaftsschlagwort-Namensansetzung c Körperschaftsschlagwort-Ortsansetzung g Geographisch/ethnographische Schlagwortansetzung t Sachtitel eines Werkes als Schlagwort-Ansetzung s Sachschlagwort-Ansetzung f Formschlagwort-Ansetzung z Zeitschlagwort-Ansetzung # nicht spezifizierte Schlagwortansetzung MARC21 150 Heading--Topical Term  Subfields: $a Topical term or geographic name as entry element $b Topical term following geographic name as entry element $v Form subdivision (R) $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $6 Linkage UNIMARC 250 Heading - Topical subject  Subfields: $a Topical Subject $x Topical subdivision $y Geographical subdivision $z Chronological subdivision allegro  #3n_ss Sachschlagwort - Hauptform BIS 6510s  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Personenname               Hauptansetzungsform    Format-Konkordanz Synopsis   Personen-Normdaten  Personenname Hauptansetzungsform  engl.: Heading - Personal name  Pica+ 028A Subfields: $a Familienname (Eintr.Element) $5 Persönlicher Name $c Präfix $d Vornamen $5 Vorname als Eintragselement (pers. Name)$e Namenszusätze vor                     dem Vornamen $l Ordnungshilfe $f Ergänzungen hinter dem Namen $p weitere identifizierende Angaben / Körperschaft, bei der die                     Person beschäftigt ist Pica3 100 Struktur: #Ergänzungen vor den Vornamen#             Vornamen             @Vorname als Eintragungselement (Pers.Name)"             /Präfix             @Familienname             _ _(Homonymenzusatz RSWK)             %weitere identifizierende Angaben / Körperschaft, bei der die Person beschäftigt ist Pica+ 028B Ansetzungsform nach RSWK (wenn von RAK abweichend) 028C Ansetzungsform aus Fremddaten (z.B. LoC) 028D Alternative Ansetzungsform 046B Bemerkung zur Ansetzungsform (RAK / GBV) 046C Bemerkungen zur Ansetzungsform nach RSWK Pica3 120 Ansetzungsform nach RSWK (wenn von RAK abweichend) 140 Ansetzungsform aus Fremddaten (z.B. LoC) 145 Alternative Ansetzungsform 101 Bemerkung zur Ansetzungsform (RAK / GBV) 121 Bemerkungen zur Ansetzungsform nach RSWK MAB2 800 Name der Person in Ansetzungsform (W4)     Indik.: # Einheitliche Ansetzungsform für die überregionale PND a Ansetzungsform nach RAK b Ansetzungsform nach RSWK c Ansetzungsform nach einem weiteren Regelwerk MAB2 801 Quelle für die Namensansetzung (W4) 802 Benutzungshinweise für die Namensansetzung 803 Redaktionelle Bemerkungen zur Namensansetzung 804 Ergebnislos eingesehene Quellen für die Namensansetzung    Indik.: # Quelle für die einheitliche Namensansetzung a Quelle für die RAK-Ansetzung b Quelle für die RSWK-Ansetzung c Quelle für die Namensansetzung nach einem weiteren Regelwerk MARC21 100 Heading--Personal Name  Subfields: $a Personal name $b Numeration $c Titles and other words associated with a name (R) $d Dates associated with a name $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section of a work (R) $o Arranged statement for music $p Name of part/section of a work (R) $q Fuller form of name $r Key for music $s Version $t Title of a work $v Form subdivision (R) $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $6 Linkage Indic/etc.: 1st: Type of personal name entry element             0 Forename             1 Multiple and single surnames             2 Multiple surname [obs.]             3 Family name             2nd: Undefined; contains a blank (#) UNIMARC 200 Subfields: $a Entry element Personal Name $b Part of name other than entry element $c Additions to names other than dates $d Roman numerals $f Dates, personal $g Expansion of initials of forename $4 Relator code $x Topical subdivision $y Geographical subdivision $z Chronological subdivision Indic/etc.: Indic.2 0=Name entered under forename or direct order             1=Name entered under surname allegro  #4n ... #4nz Kommentar zur Person Anm. Struktur auch anwendbar für #2n, #3n, #6n, #8n BIS 6020a  .... 6070-6078a Kommentar zur Person 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sprachen der 1.               inhaltlichen Zusammenfassung    Format-Konkordanz Synopsis   Sprachen der 1. inhaltlichen Zusammenfassung  engl.: language of abstract; abstract, language  MAB 752  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Inhaltliche               Zusammenfassung    Format-Konkordanz Synopsis   Inhaltliche Zusammenfassung  engl.: Summary, abstract, annotation, scope, etc. note  Pica+ 047I Subfields: $a Abstract $h Verfasserangabe des Abstr $d Sprache inhaltl. Zusammenfassung Pica3 4207 Struktur: Abstract             _/_Verfasserangabe des Abstr             _  Pica+ 147I Lokale inhaltl. Zusammenfassung 247A Inhaltliche Zusammenfassung zum Exemplar Pica3 9000  9400  MAB 750 1. Inhaltliche Zusammenfassung     Indik.: # nicht aufgegliedert a Auszug b Zusammenfassung c Annotation (Untertitel) d Kurzreferat e Sammelreferat f Rezension g Sammelrezension h Literaturbericht i Autorenkurzreferat j Fremdkurzreferat k maschinell erstelltes Kurzreferat l vorläufiges Kurzreferat m Regest Anm. weitere Abstracts unter 753-55 u. 756-58 MAB 750l ekz-aktuell vorläufiges Kurzreferat 751 Verfasser der 1. inhaltlichen Zusammenfassung 753-755 2. inhaltliche Zusammenfassung 756-758 3. inhaltliche Zusammenfassung MARC21 520 Summary, etc. Note (R)  Subfields: $a Summary, etc. note $b Expansion of summary note $c Assigning sourcy $z Source of note information [obs.] $2 Source $3 Materials specified $6 Linkage Indic/etc.: 1st: Display constant controller             # No information provided             0 Subject             1 Review             4 Content advice             8 No display constant generated             2nd: Undefined; contains a blank (#) UNIMARC 330 Summary or abstract allegro  #98  Anm. Auch für Annotationen zur E-Ressource BIS 5900t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Freies               Schlagwort    Format-Konkordanz Synopsis   Freies Schlagwort  engl.: Uncontrolled subject term  Pica3 5250 Vorläufige Schlagwörter MAB 740u Uncontrolled subject MARC21 653 Index Term--Uncontrolled (R)  Subfields: $a Uncontrolled term (R) $6 Linkage Indic/etc.: 1st: Level of index term [CHANGES]             # No information provided             0 No level specified             1 Primary             2 Secondary             2nd: Type of term or name             # No information provided             0 Topical term             1 Personal name             2 Corporate name             3 Meeting name             4 Chronological term             5 Geographic name             6 Genre/form term UNIMARC 610 (R)  Subfields: $a Subject term (R) Indic/etc.: Indic.1: Level: 0=no level specified, 1=primary term, 2=secondary term             Indic.2: blank allegro  #31  Anm. Mehrfachtrennung: "; " 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Titelschlagwort    Format-Konkordanz Synopsis   Titelschlagwort  engl.: Title subject heading  Pica+ 044?  Pica3 5500_|t|_  MAB 740t Title used as subject MAB 740n Name and title used as subject MAB2 902t Werktitel als Schlagwort UKMARC 645 Subfields: $a Title - as subject $x Subject or form subdivision $y Period subdivision $z Place subdivision Indic/etc.: Indic. as in 600 UNIMARC 604 Name and title used as subject 605 Title used as subject allegro  #31t  Anm. Form: Person:_Titel; Mehrfachtrennung: "; " 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Familie als               Schlagwort    Format-Konkordanz Synopsis   Familie als Schlagwort  engl.: Family name used as subject  MAB 740f Family name used as subject (W50) UNIMARC 602 Subfields: $a Family name used as subject - entry element $f Dates $x Topical subdivision $y Geographical subdivision $z Chronological subdivision $2 Authority system code $3 Authority record number Indic/etc.: Indic. blank 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB             Braunschweig
</fragment>
</item>
<item>
<fragment>
PRECIS    Format-Konkordanz Synopsis   PRECIS  Definition: British Library Pica+ 044E  Pica3 5520 Struktur: |Typ|             _Schlagwort             |Typ|             _Schlagwort MAB 730 (W50) PRECIS UNIMARC 670 PRECIS allegro  #33B  Anm. Mehrfachtrennung: "; " 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaftsschlagwort    Format-Konkordanz Synopsis   Körperschaftsschlagwort  engl.: Subject added entry - Corporate name  Pica+ 044A$d  Pica3 5500_|k|_  MAB 740c Corporate body name used as subject (W50) MAB 710d (W50) MAB2 902k Körperschaftsschlagwort als Kettenglied 902c Körperschaftsschlagwort unter Ortsname als Kettenglied MARC21 610 Subject Added Entry--Corporate Name (R)  Subfields: $a Corporate name or jurisdiction name as entry element $b Subordinate unit (R) $c Location of meeting $d Date of meeting or treaty signing (R) $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section/meeting (R) $o Arranged statement for music $p Name of part/section of a work (R) $r Key for music $s Version $t Title of a work $u Affiliation $v Form subdivision (R) [NEW] $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $0 Authority record control number $2 Source of heading or term $3 Materials specified $4 Relator code (R) $6 Linkage Indic/etc.: 1st: Type of corporate name entry element             0 Inverted name             1 Jurisdiction name             2 Name in direct order             2nd: Subject heading system/thesaurus             0 Library of Congress Subject Headings/LC authority files             1 LC subject headings for children's literature             2 Medical Subject Headings/NLM authority files             3 National Agricultural Library subject authority file             4 Source not specified             5 Canadian Subject Headings/NLC authority file             6 Repertoire des vedettes-matiere/NLC authority file             7 Source specified in subfield $2 UNIMARC 601 Corporate body name used as subject  Subfields: $a Corporate name used as subject - entry element $b Corporate name - Subdivision $c Addition to corporate name, or qualifier $d Number of meeting $e Location of meeting $f Date of meeting $g Inverted element of corp. name $h Part of corp. name other than entry elem. and inverted elem. $x Topical subdivision $y Geographical subdivision $z Chronological subdivision $2 Authority system code $3 Authority record number Indic/etc.: Indic. wie bei 710 allegro  #31k  Anm. Mehrfachtrennung: "; "  ... #31c Körperschaftsschlagwort unter Ortsname #69 Gefeierte Körperschaft 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Personenschlagwort    Format-Konkordanz Synopsis   Personenschlagwort  engl.: Subject added entry - Personal name  Pica+ 044A$c  Pica3 5500_|p|_  MAB 740p Personal name used as subject (W50) MAB 710c (W50) MAB2 902p Personenschlagwort als Kettenglied MARC21 600 Subject Added Entry--Personal Name (R)  Subfields: $a Personal name $b Numeration $c Titles and other words associated with a name (R) $d Dates associated with a name $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section of a work (R) $o Arranged statement for music $p Name of part/section of a work (R) $q Fuller form of name $r Key for music $s Version $t Title of a work $u Affiliation $v Form subdivision (R) [NEW] $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $2 Source of heading or term $3 Materials specified $0 Authority record control number $4 Relator code (R) $6 Linkage Indic/etc.: 1st: Type of personal name entry element             0 Forename             1 Multiple and single surnames             2 Multiple surname [obs.]             3 Family name             2nd: Subject heading system/thesaurus             0 Library of Congress Subject Headings/LC authority files             1 LC subject headings for children's literature             2 Medical Subject Headings/NLM authority files             3 National Agricultural Library subject authority file             4 Source not specified             5 Canadian Subject Headings/NLC authority file             6 Repertoire des vedettes-matiere/NLC authority file             7 Source specified in subfield $2 UKMARC 600 Personal name subject heading  Subfields: $t Title element in name-title added entry, access required (nonfiling                     characters omitted) $u title element in name-title added entry, access not required $x Subject or form subdivision $y Period subdivision $z Place subdivision Indic/etc.: andere subfields wie in 700             Indic.1: siehe 100             Indic.2: 0-9 DC class number UNIMARC 600 Personal name used as subject  Subfields: $a Personal name used as subject - entry element $b Part of name other than entry element $c Additions to names other than dates $f Dates $x Topical subdivision $y Geographical subdivision $z Chronological subdivision $2 Authority system code $3 Authority record number Indic/etc.: Indic.1=blank             Indic.2: Form of name, 0=forename, 1=surname allegro  #31p  Anm. Mehrfachtrennung: "; " 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Geographisches               Schlagwort    Format-Konkordanz Synopsis   Geographisches Schlagwort  engl.: Subject added entry - Geographic name  Pica+ 044A$b  Pica3 5500_|g|_  MAB 740g Geographical name used as subject (W50) MAB 710b (W50) 902g Geographisch-ethnographisches Schlagwort als Kettenglied MARC21 651 Subject Added Entry--Geographic Name (R)  Subfields: $a Geographic name $b Geographic name following place entry element (R) [obs.] $4 Relator term (R) $v Form subdivision (R) [NEW] $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $0 Authority record control number $2 Source of heading or term $3 Materials specified $4 Relator code (R) $6 Linkage Indic/etc.: 1st: Undefined; contains a blank (#)             2nd: Subject heading system/thesaurus             0 Library of Congress Subject Headings/LC authority files             1 LC subject headings for children's literature             2 Medical Subject Headings/NLM authority files             3 National Agricultural Library subject authority file             4 Source not specified             5 Canadian Subject Headings/NLC authority file             6 Repertoire des vedettes-matiere/NLC authority file             7 Source specified in subfield $2 UKMARC 651 Geographical Library of Congress subject heading  Subfields: $a Entry element $x Subject or form subdivision (R) $y Period (chronological) subdivision (R) $z Place subdivision (R) Indic/etc.: Governments and govt. bodies in 610             Indic. as in 600 UNIMARC 607 Geographical name used as subject allegro  #31g  Anm. Mehrfachtrennung: "; " 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sachschlagwort    Format-Konkordanz Synopsis   Sachschlagwort  engl.: LC Subject added entry - topical headings; MEDLARS terms; NLM Subject               headings; Library of Congress Subject headings; LCSH  Pica+ 044A$a  MAB 740s Topical name used as subject (W50) MAB 710a (W50) MARC21 650 Subject Added Entry--Topical Term (R)  Subfields: $a Topical term or geographic name as entry element $b Topical term following geographic name as entry element $c Location of event $d Active dates $e Relator term $v Form subdivision (R) [NEW] $x General subdivision (R) $y Chronological subdivision (R) $z Geographic subdivision (R) $0 Authority record control number $2 Source of heading or term $3 Materials specified $4 Relator code (R) $6 Linkage Indic/etc.: 1st: Level of subject [CHANGED]             # No information available             0 No level specified             1 Primary             2 Secondary             2nd: Subject heading system/thesaurus             0 Library of Congress Subject Headings             1 LC subject headings for children's literature             2 Medical Subject Headings             3 National Agricultural Library subject authority file             4 Source not specified             5 Canadian Subject Headings             6 Repertoire des vedettes-matiere             7 Source specified in subfield $2 UKMARC 650 Topical Library of Congress subject heading (R)  Subfields: $a Entry element $x Subject or form subdivision (R) $y Period (chronological) subdivision (R) $z Place subdivision (R) Indic/etc.: Indic.1=0             Indic.2=0-9 = DC class number UNIMARC 606 Topical name used as subject (R)  Subfields: $a Topical name entry element $x Topical subdivision $y Geographical subdivision $z Chronological subdivision $2 Subject analysis system code $3 Subject heading authority record number Indic/etc.: Indicators blank allegro  #31s  Anm. Mehrfachtrennung: "; "  ... #33L LC Subject Headings #33M Medlars-Schlagwörter 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
DB-               Schlagwörter bis 1985    Format-Konkordanz Synopsis   DB-Schlagwörter bis 1985   Pica+ 044F  Pica3 5530 Kontrolliertes Vokabular MAB 710 Schlagwörter der DB bis 1985     Indik.: a Sach-SW, b=Geogr.SW, c=Person allegro  #33D  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Einzelschlagwort    Format-Konkordanz Synopsis   Einzelschlagwort  engl.: Subject heading niederld.: trefwoord   Definition: Begriff eines kontrollierten Vokabulars, hier: SWD Pica+ 044K Subfields: $9 IdentNummer des Schlagwortsatzes Pica3 5550 Struktur: !IdentNummer! MAB 710 (W50) Schlagwörter und Schlagwortketten     Indik.: # nicht aufgegliedert a Sachschlagwort b geographisch-ethnographisches Schlagwort c Personenschlagwort d Körperschaftsschlagwort f Formschlagwort z Zeitschlagwort MAB2 711 Schlagwörter und Schlagwortketten nach anderen                     Regelwerken (W)    Indik.: # nicht aufgegliedert a Sachschlagwort b geographisch-ethnographisches Schlagwort c Personenschlagwort d Körperschaftsschlagwort f Formschlagwort z ZeitschlagwortUnterfelder: $a Schlagwort oder Schlagwortkette $v Verweisungsformen $x Regelwerk $y Herkunft des Schlagworts allegro  #31  Anm. Mehrfachtrennung: "; "             IdNr mit _ angehängt BIS 5650-5699t SCHLAGWORT 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
ZDB-               Notation    Format-Konkordanz Synopsis   ZDB-Notation   Pica+ 045U  Pica3 5080 Struktur: Notation             _;_Zweite Notation             _;_jede weitere Notation MAB2 700z  allegro  #32Z  Anm. Trennung: Leerzeichen ZDB nsa* (bis zu 3) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Library of Congress               Classification    Format-Konkordanz Synopsis   Library of Congress Classification  engl.: Library of Congress Call Number  Pica+ 045A  Pica3 5030 Struktur: Notation             _;_Zweite Notation             _;_jede weitere Notation MAB 700c LC MARC21 050 Library of Congress Call Number (R)  Subfields: $a Classification number (R) $b Item number $d Supplementary class number (MU) [obs.] $3 Materials specified Indic/etc.: 1st: Existence in LC collection             # No information provided             0 Item is in LC             1 Item is not in LC             2nd: Source of call number             # No information provided [obs.]             0 Assigned by LC             4 Assigned by agency other than LC             2nd: Series call number (SE) [obs.]             0 No series involved (SE) [obs.]             1 Main series (SE) [obs.]             2 Subseries (SE) [obs.]             3 Sub-subseries (SE) [obs.] UNIMARC 680 (R)  Subfields: $a class number $b Book number; Item number allegro  #32L  Anm. Trennung: Leerzeichen 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Dewey               Klassifikation    Format-Konkordanz Synopsis   Dewey Klassifikation  engl.: Dewey Decimal Classification  Pica+ 045H (W)  Subfields: $e Ausgabe der DDC $a Synthetische DDC-Notation $c Grundnotation $d Notationen anderer Haupttafeln $f Notation aus Hilfstafel 1 $g Notation aus Hilfstafel 2 $h Notation aus Hilfstafel 3A $i Notation aus Hilfstafel 3B $j Notation aus Hilfstafel 3C $k Notation aus Hilfstafel 4 $l Notation aus Hilfstafel 5 $m Notation aus Hilfstafel 6 $t Notation aus einer internal table $A Quelle, Institution Pica3 54xx Struktur: [...] Ausgabe der DDC              Synthetische DDC-Notation             -G-- Grundnotation             -H-- Notationen anderer Haupttafeln             -T1-- Notation aus Hilfstafel 1             -T2-- Notation aus Hilfstafel 2             -T3A-- Notation aus Hilfstafel 3A             -T3B-- Notation aus Hilfstafel 3B             -T3C-- Notation aus Hilfstafel 3C             -T4-- Notation aus Hilfstafel 4             -T5-- Notation aus Hilfstafel 5             -T6-- Notation aus Hilfstafel 6             -I-- Notation aus einer internal table             -Q-- Quelle, Institution Pica+ 045G Dewey-Sachgruppe DNB ab 2004 Pica3 5051 Dewey Klasse DDB ab 2004 MAB 700b DDC MARC21 082 Dewey Decimal Call Number (R)  Subfields: $a Classification number (R) $b Item number $b DDC number--abridged NST version (SE) [obs.] $2 Edition number Indic/etc.: 1st: Type of edition             # No edition information recorded (BK CF MU VM SE) [obs.]             0 Full edition             1 Abridged edition             2 Abridged NST version (BK MU VM SE) [obs.]             2nd: Source of call number             # No information provided (BK CF MU VM SE) [obs.]             0 Assigned by LC             4 Assigned by agency other than LC MARC21 083 Additional Dewey Decimal Classification Number  Subfields: $a Classification number (R) $c Classification number--Ending number of span (R) $m Standard or optional designation (NR) $q Assigning agency (NR) $y Table sequence number for internal subarrangement or add table (R) $z Table identification (R) $2 Edition number (NR) $6 Linkage (NR) $8 Field link and sequence number (R) Indic/etc.:  Indic. same as 082 UKMARC 082 Dewey Decimal call number  Subfields: $a DDC Base Number $b Segmentation point (im Druck: Apostroph) $c DDC edition $d Fiction code (F) UNIMARC 676 (R)  Subfields: $a DDC $v DDC edition Indic/etc.: '/' statt Apostroph allegro  #32B  Anm. Trennung: Leerzeichen 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Freie               Notation    Format-Konkordanz Synopsis   Freie Notation  engl.: Other class number  Pica+ 045E  Pica3 5050 Struktur: Notation             _;_Zweite Notation             _;_jede weitere Notation MAB 700 Sachgruppen der Deutschen Bibliothek MAB 700p SSD MARC21 072 Subject Category Code (R)  Subfields: $a Subject category code $x Subject category code subdivision (R) $2 Source $6 Linkage Indic/etc.: 1st: Undefined; contains a blank (#)             2nd: Code source             0 National Agricultural Library subject category code list             7 Source specified in subfield $2 UNIMARC 686 (R)  Subfields: $a Class number $b Book number, Cutter number $c Classification subdivision $d System code (App.G) Indic/etc.: Indic. blank UNIMARC 615 Subject category [provisional]  Subfields: $a Entry element $x Subdivision text $n Subject category code $m Subdivision code $2 System code $3 Authority record number allegro  #30 Lokale Systematiknotation Anm. Mehrfachtrennung: Blank  ... #30a Sachgruppe Anm. verwendbar für eine Grobsystematik 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sachgruppen-               Notationen    Format-Konkordanz Synopsis   Sachgruppen-Notationen  engl.: Classification Codes  Pica+ 045E Sachgruppen Der DB Pica3 5050 Sachgruppen Der DB   Struktur: Notation             _;_Zweite Notation             _;_jede weitere Notation Pica+ 045B00 ASB 045B01 SSD 045B02 SfB 045B03 KAB 045B04 ekz-Notation Pica3 5020 ASB 5021 SSD 5022 SfB 5023 KAB 5024 ekz-Notation MAB 700 Notationen eines Klassifikationssystems (W50)     Indik.: # Systematik der katalogisierenden Institution a UDC (Universal Decimal Classification) b DDC c LC Classification d DNB-Sachgruppennummer (Systematik der DeutschenNationalbibliographie) e Methode Eppelsheimer g Regensburger Verbundklassifikation h Gesamthochschulbibliothekssystematik l RPB (Rheinland-Pfälzische Bibliographie) m MSC (Mathematics Subject Classification) n NWBib (Nordrh.-Westf. Bibliogr.) o ASB (Allgemeine Systematik für Bibliotheken) p SSD (Systematik Stadtbibliothek Duisburg) q SfB (Systematik für Bibliotheken) r KAB (Klassifikation für Allgemeinbibliotheken) s ekz-Systematiken t Systematik der TUB München u DOPAED der UB Erlangen v IFZ-Systematik w Systematik der Bayerischen Bibliographie z ZDB-Systematik MAB2 705 DDC (Dewey Decimal Classification) (W) analytisch    Indik.: # nicht spezifiziert a Standardausgabe b KurzausgabeUnterfelder: $a Vollständige Notation $b Exemplarnummer (item number) $c Grundnotation $d Notationen anderer Haupttafeln $e Angabe der zugrundeliegenden DDC-Ausgabe $f Notation aus Hilfstafel 1 $g Notation aus Hilfstafel 2 $h Notation aus Hilfstafel 3A $i Notation aus Hilfstafel 3B $j Notation aus Hilfstafel 3C $k Notation aus Hilfstafel 4 $l Notation aus Hilfstafel 5 $m Notation aus Hilfstafel 6 $t Notation aus einer Anhängetafel MARC21 080 Universal Decimal Classification Number  Subfields: $a Universal Decimal Classification number (R) UNIMARC 675 Universal Decimal Classification allegro  #32D DB-Sachgruppen Anm. Trennung: Leerzeichen  ... #32U Universelle Dezimalklassifikation 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Sacherschließung    Format-Konkordanz Synopsis   Segment Sacherschließung   MAB 7--  Anm. MAB-Titel und -Lokal 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Angaben zur               Besetzung    Format-Konkordanz Synopsis   Angaben zur Besetzung   MAB 683 Indik.: # nicht definiertUnterfelder: $a Solostimmen $b Chorstimmen $c Soloinstrumente $d Orchesterinstrumente $e Kommentar zur Besetzung $f Gesamtzahl Besetzung 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Detaillierte               Angaben zum Werk bzw zu den Werkteilen    Format-Konkordanz Synopsis   Detaillierte Angaben zum Werk bzw zu den Werkteilen   MAB 681 (W)     Indik.: # nicht definiertUnterfelder: $a Incipitnummer (W) $b Besetzung des Incipit$c Rollenangabe zum Incipit (W) $d Satztitel und Tempoangabe im Incipit $e Besetzung Satz (W) $f Text im Incipit (W) $g Lateinische Texte (W) $h Taktangabe (W) $i Zähltakt (W) $j Schlüssel $k Tonart des Incipits $l Angabe des Musikincipits in codierter Form $m Kommentar zum Incipit 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Werkverzeichnis    Format-Konkordanz Synopsis   Werkverzeichnis   MAB 680 (W)     Indik.: # nicht definiertUnterfelder: $a Angabe des Werkverzeichnisses $b Fundstelle (Werkverz.Nummer) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment Angaben zu               Musikmaterialien    Format-Konkordanz Synopsis   Segment Angaben zu Musikmaterialien   MAB 68-  Anm. MAB-Titel 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Stichwort    Format-Konkordanz Synopsis   Stichwort  Definition: zusätzliche Wörter für Indexierung, die nicht in               derselben Form in einem Titel vorkommen Pica+ 025@$b Ansetzungssachtitel, Indexierfeld  Subfields: $a Sachtitel $b zusätzliche Indexeinträge Pica3 3220_(...) Struktur: _@Sachtitel_{zusätzliche Indexeinträge} Pica+ 047C Zusätzliche Indexeinträge Pica3 4200 Zusätzliche Indexeintr#ge   Struktur: Wörter, getrennt durch Spatien MAB 675 Stichwörter in abweichender Orthographie (W50)     Indik.: # nicht aufgegliedert a Sachbegriff b geographischer Begriff c Personenname d Körperschaftsname Anm. Jedes Wort bekommt eine eigene 675 MAB 720 (W50)        Werte: Indik. wie 675. Ist 720 besetzt, enthält Pos.i in 030 den Code 'c' MARC21 214 Augmented Title [obs.]  Subfields: $a Augmented title [obs.] $6 Linkage [obs.] Indic/etc.: Indic.1: 0=no title added entry, 1=Title added entry             Indic.2: Nonfiling characters allegro  #28 Stichwörter für Index BIS 4800-4804  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Erscheinungsjahr               des Originals    Format-Konkordanz Synopsis   Erscheinungsjahr des Originals   MAB 674 Veranstaltungsjahr / Erscheinungsjahr des Origials (W10)     Indik.: # Veranstaltungsjahr a Erscheinungsjahr des Originals 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ort in normierter               Form; [Ortsname normiert    Format-Konkordanz Synopsis   Ort in normierter Form; Ortsname normiert   Pica+ 030F$K  MAB 673 (W10)     Indik.: # Veranstaltungsort a Erscheinungsort in normierer Form b Verbreitungsort c Hochschulort UNIMARC 620 Place access allegro  #74  Anm. wenn Vorlageform abweicht, dann kommt sie in #73 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Autorenname in               normierter Form    Format-Konkordanz Synopsis   Autorenname in normierter Form   MAB 672 (W10) Anm. zu vereinbaren zwischen Austauschpartnern 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Andersschriftliche               Darstellung    Format-Konkordanz Synopsis   Andersschriftliche Darstellung  engl.: Alternate graphic representation Definition: Inhalt eines anderen Feldes in einem anderen Zeichencode MAB 671 (W) Anm. Fester Vorspann von 16 Zeichen: 0-2 = Feldnummer des verkn. Feldes MARC21 880 Alternate Graphic Representation (R)  Subfields: $6 Linkage $a-z Same as associated field $0-5 Same as associated field $7-9 Code for script Indic/etc.: 1st: Same as associated field             2nd: Same as associated field 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sachtitel in               abweichender Orthographie    Format-Konkordanz Synopsis   Sachtitel in abweichender Orthographie  engl.: Variant access title  MAB 670 (W10) MARC21 211 Acronym or Shortened Title [obs.]  Subfields: $a Acronym or shortened title [obs.] $6 Linkage [obs.] Indic/etc.: 1st: Title added entry [obs.]             0 No title added entry [obs.]             1 Title added entry [obs.]             2nd: Nonfiling characters [obs.]             0-9 Number of nonfiling characters present [obs.] 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Zusätzliche Suchkriterien    Format-Konkordanz Synopsis   Segment Zusätzliche Suchkriterien   MAB 670675  Anm. MAB-Titel und -Lokal 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Redaktionelle               Bemerkungen zur Unterlage    Format-Konkordanz Synopsis   Redaktionelle Bemerkungen zur Unterlage   MAB2 669 (W3)     Indik.: # nicht spezifiziert a Benutzungsbeschränkung b Sperrvermerk 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Entstehungsgeschichte; Herkunft    Format-Konkordanz Synopsis   Entstehungsgeschichte; Herkunft  engl.: Provenance note  MAB2 664 Provenienz     Indik.: # nicht spezifiziert a Herkunft b Erwerbung c Verlust MARC21 561 Provenance Note (R)  Subfields: $a Provenance $b Time of collation $u Uniform Resource Identifier $3 Materials specified $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Privacy             blank unknown             0 Private             1 Not private MARC21 541 Immediate Source of Acquisition Note (R)  Subfields: $a Source of acquisition $b Address $c Method of acquisition $d Date of acquisition $e Accession number $f Owner $h Purchase price $n Extent (R) $o Type of unit (R) $3 Materials specified $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Privacy             blank unknown             0 Private             1 Not private 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bezugswerke    Format-Konkordanz Synopsis   Bezugswerke   MAB2 663 Indik.: # nicht spezifiziert a Editionshinweise b Literaturhinweise c Sonstige Bezugswerke 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Angaben zum               Äußeren der Unterlage    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Angaben zum Äußeren der Unterlage   MAB2 662 Indik.: # nicht spezifiziert a Beschreibstoff b Einband c Wasserzeichen d Erhaltungszustand e Restaurierungsmaßnahmen MARC21 563 Binding information 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Angaben zum Text               der Unterlage    Format-Konkordanz Synopsis   Angaben zum Text der Unterlage   MAB2 661 Indik.: # nicht spezifiziert a Incipit der Unterlage b Einheitsincipit der Unterlage c Ausreifung / Entstehungsstufe d Literarische Gattung 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Ausgabevermerk Nachlässe und Autographen    Format-Konkordanz Synopsis   Segment Ausgabevermerk Nachlässe und Autographen   MAB 661669  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Elektronische               Adresse; [Externe Ressourcenadresse; Internet-Ressource; URL    Format-Konkordanz Synopsis   Elektronische Adresse; Externe Ressourcenadresse; Internet-Ressource; URL  engl.: Electronic location and access Definition: Angaben über die Verfügbarkeit in Netzen Pica+ 009P/03 Subfields: $S Lizenzindikator $y Text für die Web-Anzeige $0 Dateiformat (Dateityp) $a URL $g URN $x Interne Bemerkungen $z Bemerkungen zu lizenzfreien E-Journals (4085) Pica3 4083 Angaben zum Zugriff auf das elektronische Dokument   Struktur:              [...] Text für die Web-Anzeige             Dateiformat (Dateityp)             _=A_URL             _=G_URN             _=X_Interne Bemerkungen             _=Z=Bemerkungen zu lizenzfreien E-Journals (4085) Pica+ 209R Lokale Angaben zum Zugriff auf das elektronische Dokument 009P/09 Leseprobe: Angaben zum Zugriff 004U URN      Werte: Struktur wie 4083 Pica3 7133 Lokale Angaben zum Zugriff auf das elektronische Dokument 4089 Angaben zum Zugriff auf elektronische Informationen zur Vorlage 2050 URN MAB 655 Elektronische Adresse und Zugriffsart für eine                     Computerdatei im Fernzugriff (W) [auch in GKD]     Indik.: a E-Mail b FTP (File Transfer) c Remote Login (Telnet) d Dial-up (konventioneller Telefonanschluß) e HTTP h im Unterfeld 2 spezifizierte ZugriffsmethodeUnterfelder: $a Name des Host $b IP-Zugriffsnummer $c Art der Komprimierung $d Zugriffspfad für eine Datei $f Elektronischer Name der Datei im Verzeichnis des Host $g URN (Uniform Resource Name) $h Durchführende Stelle einer Anfrage $i Anweisung für die Ausführung einer Anfrage $j Datenübertragungsrate (Bits pro Sekunde) $k Password $l Logon/login-Angabe $m Kontaktperson $n Ort des Host $o Betriebssystem des Host $p Port $q Elektronischer Dateiformattyp $r Einstellungen für die Dateiübertragung $t Größe der Datei $u URL (Uniform Resource Locator) $v Öffnungszeiten des Host für die gewählte Zugangsart $w Identnummer des verknüpften Datensatzes $x Interne Bemerkungen $z Allgemeine Bemerkungen $2 Zugriffsmethode $3 Bezugswerk$A Beziehung (= Indik.2 von MARC 856) Anm. Indik. a=E-Mail             b=FTP (File Transfer)             c=Remote Login (Telnet)             d=Dial-up (konventioneller Telefonanschluß)             h=im Unterfeld $2 spezifizierte Zugriffsmethode MARC21 856 Electronic Location and Access  Subfields: $a Host name (R) $b Access number (R) [was: IP address] $c Compression information (R) $d Path (R) $f Electronic name (R) $g Electronic name--End of range (R) $h Processor of request $i Instruction (R) $j Bits per second $k Password $l Logon/login $m Contact for access assistance (R) $n Name of location of host in subfield$a $o Operating system $p Port $q File transfer mode $r Settings [NEW] $s File size (R) $t Terminal emulation (R) $u Uniform Resource Locator (R) $v Hours access method available (R) [NEW] $w Record control number (R) [NEW] $x Nonpublic note (R) $y Link text $z Public note (R) $2 Access method $3 Materials specified Indic/etc.: 1st: Access method             0 Email             1 FTP             2 Remote login (Telnet)             3 Dial-up [NEW]             7 Source specified in subfield $2             2nd: Relationship             0 Electronic resource             1 Electronic version             2 Related electronic resource allegro  #8e  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Systemvoraussetzungen für die Computerdatei    Format-Konkordanz Synopsis   Systemvoraussetzungen für die Computerdatei  engl.: System details access to computer files; Hardware requirements; Software               requirements Definition: Angaben zu der erforderlichen Hard- und Systemsoftware für die Benutzung               einer Datei Pica+ 048H  Pica3 4251  MAB 654 Unterfelder: $a Prozessor $b Hardware-Konfiguration $c Software-Anforderungen $z Sonstige Anforderungen für Computerdatei Anm. ZDB: nur $a Systemvoraussetzungen MARC21 753 System Details Access to Computer Files (R)  Subfields: $a Make and model of machine $b Programming language $c Operating system $u Uniform Resource Identifier $3 Materials specified $6 Linkage MARC21 538 System details note  Subfields: $aMake and model of machine $b Programming language $c Operating system $i Display text $5 Institution to which field applies UNIMARC 626 Technical details access - Computer files  Subfields: $a Hardware requirements (make and model of machine) $b Programming language $c Operating system Indic/etc.: see also 337 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB             Braunschweig
</fragment>
</item>
<item>
<fragment>
Physische               Beschreibung der Computerdatei auf Datenträger    Format-Konkordanz Synopsis   Physische Beschreibung der Computerdatei auf Datenträger   MAB2 653 Unterfelder: $a Anzahl und Materialbenennung physischer Einheiten $b Dateiumfang $c Sonstige physische und technische Angaben $d Physische Größe des Datenträgers $e Begleitmaterial 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Dateidokumentation;               [Dokumentation zu einer Datei; Computerdatei Fußnote    Format-Konkordanz Synopsis   Dateidokumentation; Dokumentation zu einer Datei; Computerdatei Fußnote  engl.: Computer file notes Definition: Angaben über Verfügbarkeit von Dokumentation zu maschinenlesbaren               Daten MAB2 651 Fußnote zur ComputerdateiUnterfelder: $a Einleitende Wendung $b Angaben zur Computerdatei MAB2 659 Ergänzende Bemerkungen zur ComputerdateiUnterfelder: $a Ergänzende Bemerkungen $b Bestandsschutzmaßnahmen MARC21 516 Type of Computer File or Data Note (R)  Subfields: $a Type of computer file or data note $6 Linkage Indic/etc.: 1st: Display constant controller             # No information provided             8 No display constant generated             2nd: Undefined; contains a blank (#) MARC21 556 Information About Documentation Note (R)  Subfields: $a Information about documentation note $z International Standard Book Number (R) $6 Linkage Indic/etc.: 1st: Display constant controller             # No information provided             8 No display constant generated             2nd: Undefined; contains a blank (#) 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Ausgabevermerk Computerdateien    Format-Konkordanz Synopsis   Segment Ausgabevermerk Computerdateien   MAB 651659  Anm. MAB-Titel und -Lokal 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Besitznachweis               für den Sekundärausgaben-Master    Format-Konkordanz Synopsis   Besitznachweis für den Sekundärausgaben-Master   Pica+ 009B  Pica3 4066 Struktur: Ländercode             #Bibliothek             _/_Abteilung der Bibliothek             _  MAB 647  Anm. Indik. b: Signatur des Masters 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Besitznachweis               für die Primärausgabe; [Standort des Originals oder Duplikates    Format-Konkordanz Synopsis   Besitznachweis für die Primärausgabe; Standort des Originals oder               Duplikates  engl.: Location of Originals/Duplicates note  Pica+ 009A Besitznachweis für die Verfilmungsvorlage Pica3 4065 Struktur: Ländercode             #Bibliothek             _/_Abteilung der Bibliothek             _  MAB 646 Besitznachweis für die Verfilmungsvorlage     Indik.: # Name der besitzenden Institution a Adresse der besitzenden Institution b Signatur der Verfilmungsvorlage MARC21 535 Location of Originals/Duplicates Note (R)  Subfields: $a Custodian $b Postal address (R) $c Country (R) $d Telecommunications address (R) $g Repository location code $3 Materials specified $6 Linkage Indic/etc.: 1st: Additional information about custodian             0 Repository (AM) [obs.]             1 Holder of originals             2 Holder of duplicates             3 Holder of oral tapes (AM) [obs.]             2nd: Undefined; contains a blank (#) MARC21 544 Location of Associated Archival Materials Note (R)  Subfields: $a Custodian (R) $b Address (R) $c Country (R) $d Title of associated materials (R) $e Provenance of associated materials (R) $3 Materials specified $6 Linkage 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ergänzende               Angaben zur Sekundärform    Format-Konkordanz Synopsis   Ergänzende Angaben zur Sekundärform   MAB2 645  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verfilmte               Bände    Format-Konkordanz Synopsis   Verfilmte Bände   MAB2 642  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Angabe von               Begleitmaterialien zur Sekundärform    Format-Konkordanz Synopsis   Angabe von Begleitmaterialien zur Sekundärform   MAB2 638  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
ISSN der               Sekundärausgabe    Format-Konkordanz Synopsis   ISSN der Sekundärausgabe   Pica+ 005C  Pica3 2017 Struktur: (Kommentar zur ISSN)             _:_Lieferbed. und/oder Preis             _(Kommentar) MAB 635 ISSN der Sekundärform (W10) Anm. Indik. s. 542 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
ISBN der               Sekundärausgabe    Format-Konkordanz Synopsis   ISBN der Sekundärausgabe   Pica+ 004J  Pica3 2007  MAB 634 Standardnummern des 1. Gesamttitels der Sekundärform Anm. Indik. wie 540 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Abweichender Titel               der Sekundärform    Format-Konkordanz Synopsis   Abweichender Titel der Sekundärform   MAB2 633  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Gesamtheit der               Sekundärausgabe    Format-Konkordanz Synopsis   Gesamtheit der Sekundärausgabe   Pica+ 036L Gesamtheit der Sekundärausgabe in Vorlageform Pica3 411Y Struktur: @Titel der Mikroform-Sammlung             _//_zu ergänzender Urheber, Verfasserangabe             _;_Zählung in der Hauptreihe Pica+ 036M Gesamtheit der Sekundärausgabe in Ansetzungsform Pica3 412Y Gesamtheit der Sekundärausgabe in Ansetzungsform MAB 621626 1. Gesamttitel der Sekundärform MAB 627632 2. Gesamttitel der Sekundärform 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Hinweise zur               Verfilmung    Format-Konkordanz Synopsis   Hinweise zur Verfilmung   MAB2 620 Indik.: # Verfilmungsdatum a Datum der geplanten Verfilmung b Kennzeichen der INstitution, die eine Verfilmumg plant 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ort und Verlag der               Sekundärausgabe    Format-Konkordanz Synopsis   Ort und Verlag der Sekundärausgabe   Pica+ 033N  Pica3 4048  MAB 611 Ort[e] des 1. Verlegers, Herstellers usw. Anm. Indikatoren wie 410 MAB 612 Adresse des 1. Verlegers, Herstellers usw. 613 Name des 1. Verlegers 614-616 Ort des 2. Verlegers etc. 617 Urheber 1 der Verfilmung 618 Urheber 2 der Verfilmung 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zu               verknüpfende Deskriptoren    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Zu verknüpfende Deskriptoren   MAB 606 (W)     Indik.: p Personenschlagwort k Körperschaftsschlagwort (Name) c Körperschaftsschlagwort (Ort) g geogr.-ethnogr. Schlagwort t Sachtitel eines Werkes s Sachschlagwort f Formschlagwort z Zeitschlagwort # nicht spezifiziert 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Nichtdeskriptor    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Nichtdeskriptor   MAB 605 (W)     Indik.: p Personenschlagwort k Körperschaftsschlagwort (Name) c Körperschaftsschlagwort (Ort) g geogr.-ethnogr. Schlagwort t Sachtitel eines Werkes s Sachschlagwort f Formschlagwort z Zeitschlagwort # nicht spezifiziert 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bemerkungen zur               Verweisung    Format-Konkordanz Synopsis   Bemerkungen zur Verweisung   MAB 601 Bemerkungen zum 1. Teil der Verweisung Anm. gehört zu 600 MAB 603 Bemerkungen zum 2. Teil der Verweisung Anm. gehört zu 602 allegro  #9sz  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Pauschalverweisung;               Siehe-auch-Hinweis    Format-Konkordanz Synopsis   Pauschalverweisung; Siehe-auch-Hinweis   MAB 600 1. Teil der Verweisung Anm. Ansetzungsform; Angabe dessen, wovon verwiesen wird MAB 602 2. Teil der Verweisung    Indik.: a Pauschalverweisung b Siehe-auch-Hinweis c reziproker Siehe-auch-Hinweis d Synonymie-Verweisung e hierarchische Verweisung f assoziatie (reziproke) Verweisung g chronologische Verweisung allegro  #9s Pauschalverweisung  ... #9sa Siehe-Auch-Hinweis 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Pauschalverweisungen und Siehe-auch-Hinweise    Format-Konkordanz Synopsis   Normdaten-Kategorie  Segment Pauschalverweisungen und Siehe-auch-Hinweise   MAB 600603  Anm. Wird verwendet für TITEL, GKD, PND und SWD in separaten             Datensätzen 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Standardnummern    Format-Konkordanz Synopsis   Quelle - Standardnummern   MAB 599 Standardnummern der Quelle (W20)     Indik.: # IdentNummer der selbst. Schrift a ISSN formal richtig b ISSN formal falsch c ISBN formal richtig d ISBN formal falsch e ISMN formal richtig f ISMN formal falsch g ISRN formal richtig h ISRN formal falsch s IdentNummer der ZDB allegro  #70i ... #70c CODEN #70Z ZDB-Nr der Quelle 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Fußnoten    Format-Konkordanz Synopsis   Quelle - Fußnoten   MAB 598 Fußnote der Quelle 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Gesamttitel    Format-Konkordanz Synopsis   Quelle - Gesamttitel   MAB 597 Gesamttitel der Quelle 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Bandzählung etc.; [Jahrgang, Heft usw. des Artikels    Format-Konkordanz Synopsis   Quelle - Bandzählung etc.; Jahrgang, Heft usw. des Artikels  Definition: Quelle - differenzierende Angaben Pica+ 031A Subfields: $d Bandzählung $j Jahr $e Heft $c Monat $b Tag $h Umfangsangabe Pica3 4070 Differenzierende Angaben zur Quelle   Struktur: /v_Bandzählung             /j_Jahr             /a_Heft             /d_Tag             /m_Monat             /n_Sonderheft             /p_Seitenangabe             /t_Gesamtzahl der Artikelseiten MAB 596 Bandzählung, Jahreszählung, Heftzählung,                     Umfangs- und Illustrationsangabe der Quelle (W20)     Indik.: # nicht aufgegliedert a zusätzl. mit Band- und/oder Heftbezeichnung b zusätzl. mit Tagesdatum bei Zeitungen c zusätzl. mit Legislaturperiode bei Parlamantsveröff. allegro  #704 Bandzählung der Quelle Anm. Jahreszählung in #76  ... #706 Heftzählung der Quelle #708 Umfangsangabe des Aufsatzes 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Erscheinungsjahr    Format-Konkordanz Synopsis   Quelle - Erscheinungsjahr   MAB 595 Erscheinungsjahr der Quelle 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Erscheinungsort    Format-Konkordanz Synopsis   Quelle - Erscheinungsort   MAB 594 Erscheinungsort der Quelle     Indik.: # Verlagsort(e) a Druckort(e) b Vertriebsort(e) c Auslieferungsort(e) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Ausgabebezeichnung    Format-Konkordanz Synopsis   Quelle - Ausgabebezeichnung   MAB 593 Ausgabebezeichnung der Quelle in Vorlageform 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Abteilung/Unterreihe    Format-Konkordanz Synopsis   Quelle - Abteilung/Unterreihe   MAB 592 Abteilung / Unterreihe der Quelle 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Verfasserangabe    Format-Konkordanz Synopsis   Quelle - Verfasserangabe   MAB 591 Verfasserangabe der Quelle Anm. in Vorlageform 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quelle -               Hauptsachtitel    Format-Konkordanz Synopsis   Quelle - Hauptsachtitel   MAB 590 Hauptsachtitel und ggf. zu ergänzende Urheber der                     Quelle Anm. Struktur siehe 331 allegro  #70 Inhalt: Hauptsachtitel  _/_Abteilung/Unterreihe  _$_körp.Ergänzung  _/_Verfasserangabe  ._-_Ausgabebezeichnung  ._--_Erscheinungsort  ._-_(Gesamttitel)  ._[Fußnote]  ._ISBN/ISSN/ZDB  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Quellenangaben    Format-Konkordanz Synopsis   Quellenangaben   MAB 590599 Segment Herkunft (Quelle) unselbständig erschienener                     Werke 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
LoC-               Nummer    Format-Konkordanz Synopsis   LoC-Nummer  engl.: Control number; Library of Congress Card Number  Pica+ 006A$0  Pica3 2040  MAB 580 Sonstige Standardnummern (W10) MAB2 636 Sonstige Standardnummer der Sekundärform MARC21 001 CONTROL NUMBER Indic/etc.: keine Indikatoren             in LC-Daten beginnt die Nummer auf Pos.3, 0-2 sind nicht relevant             bei BL, OCLC oder RLIN ist die LC-Nummer in 010 MARC21 010 Library of Congress Control Number  Subfields: $a LC Control Number $b NUCMC control number $z cancelled/invalid LC control number UKMARC 010 Subfields: $a LC control number $z cancelled/invalid LC control number Indic/etc.: z.B. bei OCLC oder RLIN gebräuchlich; Daten der LC selbst haben diese             Nummer in 001 allegro  #89L  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fingerprint    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Fingerprint  engl.: Fingerprint identifier  Pica+ 007P  Pica3 2275  Pica+ 109D  007T Alternativer Fingerprint Pica3 7211 Fingerprint 2276 Alternativer Fingerprint MAB2 578  MARC21 026  allegro  #89f  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Pflichtablieferungs-               Nummer    Format-Konkordanz Synopsis   Pflichtablieferungs-Nummer  engl.: Copyright or Legal Deposit Number  Pica+ 007K$0  Pica3 2250  MAB 576  MARC21 017 Copyright or legal deposit number (R)  Subfields: $a Copyright or legal deposit number (R) $b Assigning agency $d Date $i Display text $2 Source $6 Linkage $8 Field link and sequence number Indic/etc.: Indic 2: blank Copyright or legal deposit number             $8 No display constant generated UNIMARC 021 Subfields: $a Country code (ISO 3166) $b Legal deposit number $z Erroneous number 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
WV-Nummer der               DB    Format-Konkordanz Synopsis   WV-Nummer der DB   Pica+ 006U  Pica3 2100  MAB 574 Nationalbibliographienummer (NBN) allegro  #89D  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
ZDB-               Nummer    Format-Konkordanz Synopsis   ZDB-Nummer   Pica+ 006Z  Pica3 2110  MAB 572z  allegro  #89Z  NZN (obs.) 089  Anm. mehrere Nummern getrennt durch _;_ ZDB tid Titel-Identifikationsnummer (P) Anm. Form: nnnnnnn-p, p=0..9 oder x, bis 7 Ziffern BIS 4670t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Nationalbibliographienummer der falschen Aufnahme    Format-Konkordanz Synopsis   Nationalbibliographienummer der falschen Aufnahme   MAB 570  Anm. Nummer einer zuvor gelieferten falschen Aufnahme, Angabe im berichtigten             Satz 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
CIP-               Nummer    Format-Konkordanz Synopsis   CIP-Nummer   Pica+ 006T  Pica3 2105  MAB 568 Nationalbibliographienummer der CIP-Aufnahme (W10) allegro  #89C  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Firmenschriftennummer    Format-Konkordanz Synopsis   Firmenschriftennummer   Pica+ 007I$0  Pica3 2240  MAB 566  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Normnummer    Format-Konkordanz Synopsis   Normnummer   Pica+ 007H  Pica3 2210  MAB 564 (W10) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Patentnummer    Format-Konkordanz Synopsis   Patentnummer   Pica+ 007G$0 (W) Pica3 2235  MAB 562 (W10)     Indik.: # nicht aufgegliedert a Patentschrift b Offenlegungsschrift c Auslegeschrift 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Reportnummer    Format-Konkordanz Synopsis   Reportnummer  engl.: Report number  Pica+ 007F (W) Pica3 2205  MAB 556 (W10)     Indik.: a Reportnummer b Kontraktnummer c Task-Nr. Anm. MAB1: Pos. 114=r MARC21 088 Report Number (R)  Subfields: $a Report number $z Cancelled/invalid report number [NEW] $6 Linkage Indic/etc.: nicht = STRN (siehe 027) allegro  #86 (W) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Hochschulschriftennummer    Format-Konkordanz Synopsis   Hochschulschriftennummer   Pica+ 007E$0  Pica3 2215  MAB 554  allegro  #89U  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verlagsnummer;               Produktionsnummer; Bestellnummer; DOI    Format-Konkordanz Synopsis   Verlagsnummer; Produktionsnummer; Bestellnummer; DOI  engl.: Publisher number for music; Stock number; Videorecording number]  Pica+ 007D$0 (W) Pica3 2230 Verlagsnummer Pica+ 007N Lieferantennummer 004V DOI 004R Handle Pica3 2265 Lieferantennummer 2051 DOI 2052 Handle MAB 551 Verlags-, Produktions- und Bestellnummer (W10)     Indik.: # nicht spezifiziert a Verlags- u. Firmenbestellnr. b Druckplattennummer bei Musikalien c Plattennummer d Setnummer e Produktionsnummer f Kompaktkassettennummer MAB2 552 Persistent Identifiers (PI)        Werte: a Digital Object Identifier (DOI) b Uniform Resource Name (URN) c Handle MARC21 028 Publisher Number for Music (R)  Subfields: $a Publisher number $b Source $q Qualifying information $6 Linkage $8 Field link and sequence number Indic/etc.: 1st: Type of publisher number             0 Issue number             1 Matrix number             2 Plate number             3 Other publisher number             4 Videorecording number             2nd: Note/added entry controller             0 No note, no added entry             1 Note, added entry required             2 Note, no added entry             3 No note, added entry required MARC21 037 Source of Acquisition  Subfields: $a Stock number $b Agency assigning number $c Terms of availability $f Form of issue UNIMARC 071 Subfields: $a Label number $b Source of publisher number Indic/etc.: für Tonträger und Musikalien UNIMARC 014 Article identifier  Subfields: $a Article identifier $b Erroneous article identifierer $2 System code     Values: System code = biblid: ISO 9115 sici: ANSI/NISO Z39.56 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Amtliche               Druckschriftennummer    Format-Konkordanz Synopsis   Amtliche Druckschriftennummer  engl.: Government publication number  Pica+ 007B$0  Pica3 2225  MAB 550 (W50) MARC21 074 Gpo Item Number (R)  Subfields: $a GPO item number $z Cancelled/invalid GPO item number (R) UNIMARC 022 Subfields: $a Country code (ISO 3166) $b Government publication number $z Erroneous number 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Postvertriebskennzeichen    Format-Konkordanz Synopsis   Postvertriebskennzeichen  engl.: Postal registration number  Pica+ 007A$0  Pica3 2220  MAB 546  MARC21 032 Postal Registration Number (R)  Subfields: $a Postal registration number $b Source (agency assigning number) $6 Linkage 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Signatur    Format-Konkordanz Synopsis   Signatur  engl.: Call number Definition: falls im Titelsatz anzugeben MAB 544 Lokale Signatur (W10)     Indik.: # keine Benutzungsbeschränkung a nicht verleihbar MAB 644 Signatur der Sekundärform MARC21 09X Local call numbers allegro  #90 Standort'Signatur Anm. Für die Hauptsignatur, falls es Exemplarsätze gibt. Wenn             nicht, kann #90 auch Exemplarangaben aufnehmen.  ... #90z Frühere (nicht mehr gültige) Signatur NZN (obs.) 000  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Internationale               Standardnummer für Reports (ISRN)    Format-Konkordanz Synopsis   Internationale Standardnummer für Reports (ISRN)   MAB2 543  Anm. Indik. wie 540 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
ISSN    Format-Konkordanz Synopsis   ISSN  engl.: International Standard Serial Number  Pica+ 005A Subfields: $0 ISSN $c Kommentar zur ISSN $f Lieferbedingungen und/oder Preis $g Einbandart $m Kommentar zu Lieferbedingungen Pica3 2010 Struktur: ISSN             _(Kommentar)             *Einbandart             _:_Lieferbedingungen u/o Preis             _(Kommentar zu Lieferbedingungen u/o Preis) Pica+ 005P ISBN der Parallelausgabe 005B formal falsche ISSN Pica3 2013 ISSN der Parallelausgabe 2019 formal falsche ISSN MAB 542 (W10) Internationale Standardnummer für fortlaufende                     Sammelwerke     Indik.: # ISSN formal nicht geprüft a ISSN formal richtig b ISSN formal falsch z keine ISSN, aber Einbandart und/oder Preis MAB '_96-108*  Anm. ISBN oder ISSN! mit Bindestrichen MARC21 022 International Standard Serial Number (R)  Subfields: $a International Standard Serial Number $l ISSN-L $m Canceled ISSN-L $y Incorrect ISSN (R) $z Cancelled ISSN (R) $2 Source $6 Linkage Indic/etc.: 1st: Level of international interest             # Level of international interest not designated             0 Serial of international interest; full record registered with ISSN Network             1 Serial not of international interest; abbreviated record registered with ISSN             Network             2nd: Undefined; contains a blank (#) UNIMARC 011 Subfields: $a ISSN $b ISSN qualification $d Terms of availability, price $y Cancelled ISSN $z Erroneous ISSN Indic/etc.: Indic. blank allegro  #88  NZN (obs.) 008  ZDB isa-ise  BIS 4650-4659t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Internationale               Standardnummer für Musikalien; [ISMN]    Format-Konkordanz Synopsis   Internationale Standardnummer für Musikalien; ISMN]  engl.: International Standard Music Number  Pica+ 004F  Pica3 2020  Pica+ 004G 2. u. weitere ISMN 004I Formal falsche ISMN Pica3 2021 2. u. weitere ISMN 2029 formal falsche ISMN MAB2 541  Anm. Indik. wie 540 MARC21 024-2  allegro  #87m  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Standardnummern    Format-Konkordanz Synopsis   Standardnummern   MAB 540589 Segment Standardnummern Anm. 581-589 nicht benutzt 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Bestandsschutzmaßnahmen und Langzeitarchivierung    Format-Konkordanz Synopsis   Fußnote Bestandsschutzmaßnahmen und Langzeitarchivierung   Pica+ 046X Subfields: $a Indikator $C Codierung $a Text $f Datum einer geplanten Maßnahme $h sonstige Angaben Pica3 4233 Struktur: |...| Indikator             _"..." Codierung             ... Text             $...$ Datum einer geplanten Maßnahme             _% sonstige Angaben 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Redaktionelle               Bemerkungen    Format-Konkordanz Synopsis   Redaktionelle Bemerkungen   Pica+ 046W  Pica3 4232  MAB 537  allegro  #81w  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Voraussichtlicher               Erscheinungstermin    Format-Konkordanz Synopsis   Voraussichtlicher Erscheinungstermin  engl.: Projected publication date  Pica+ 037D$a  Pica3 4206  MAB 536  Anm. Inhalt: "Erscheint:_termin"             Voraussichtl. Ersch.jahr in 425 MARC21 263 Projected Publication Date  Subfields: $a Projected publication date Indic/etc.: Form: JJMM oder JJ-- UNIMARC 211 Indic/etc.: $aYYMMDD; temporary field, to be deleted when updated 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB             Braunschweig
</fragment>
</item>
<item>
<fragment>
Anzahl von               Exemplaren gleicher Signatur    Format-Konkordanz Synopsis   Anzahl von Exemplaren gleicher Signatur   Pica+ 046V  Pica3 4231  MAB 535 Anzahl von Exemplaren allegro  #81v  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Titelkonkordanzen    Format-Konkordanz Synopsis   Titelkonkordanzen  Definition: IdNr eines parallel laufenden Fortl.Slw., Angabe gemeinsamer Bände Pica+ 039S  Pica3 4245  MAB 534 (W50) Anm. Indik. wie 526 allegro  #81u  ZDB kia-kio Konkordanz-IdNr Anm. zu kia gehört kta usw. 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Späterer               Titel; [Fußnote spätere Titel]    Format-Konkordanz Synopsis   Späterer Titel; Fußnote spätere Titel]  engl.: Succeeding entry link Definition: bei Zeitschriften-Titeländerung Pica+ 039E Subfields: $a Standardtext, z.B. "später:" $b Code für Titelverknüpfung $c Sachtitel $d Zusatz zum Sachtitel $S MAB-Indikator $9 IdentNummer des späteren Titels Anm. gespeichert ist normalerweise nur die IdentNummer und $a Pica3 4244 Struktur: Standardtext_:             !PPN!             _@Hauptsachtitel             _:_Zusatz zum Sachtitel MAB 533 Hinweise auf spätere Ausgaben und Bände (W50)     Indik.: wie 526 MARC21 785 Succeeding Entry (R)  Subfields: $a Main entry heading $b Edition $c Qualifying information $d Place, publisher, and date of publication $g Relationship information (R) $h Physical description of source $i Display text [NEW] $k Series data for related item (R) $m Material-specific details [NEW] $n Note (R) [NEW] $o Other item identifier [NEW] $q Parallel title (BK SE) [obs.] $r Report number (R) $s Uniform title $t Title $u Standard Technical Report Number $w Record control number (R) $x International Standard Serial Number $y CODEN designation $z International Standard Book Number (R) $6 Linkage $7 Control subfield   ** 0 Type of main entry heading   .... p Personal name   .... c Corporate name   .... m Meeting name   .... u Uniform title   .... n Not applicable   ** 1 Form of name   ** If$7/0 = p (Personal name):   .... 0 Forename   .... 1 Single surname   .... 2 Multiple surname   .... 3 Family name   ** If$7/0 = c (Corporate name) or m (Meeting name):   .... 0 Inverted name   .... 1 Jurisdiction name   .... 2 Name in direct order   ** If$7/0 = u (Uniform title) or n (Not applicable):   .... n Not applicable   ** 2 Type of record   .... a Language material   .... b Archival and manuscripts control [obs.]   .... c Printed music   .... d Manuscript music   .... e Printed map   .... f Manuscript map   .... g Projected medium   .... i Nonmusical sound recording   .... j Musical sound recording   .... k Two-dimensional nonprojectable graphic   .... m Computer file   .... o Kit   .... p Mixed material   .... r Three-dimensional artifact or    .... naturally occurring object   .... t Manuscript language material   ** 3 Bibliographic level   .... a Monographic component part   .... b Serial component part   .... c Collection   .... d Subunit   .... m Monograph/item   .... s Serial Indic/etc.: 1st: Note controller             0 Display note             1 Do not display note             2nd: Type of relationship             0 Continued by             1 Continued in part by             2 Superseded by             3 Superseded in part by             4 Absorbed by             5 Absorbed in part by             6 Split into ... and ...             7 Merged with ... to form ...             8 Changed back to UNIMARC 440 Continued by 441 Continued in part by 447 Merged with ... and ... to form UNIMARC 444 Absorbed by 445 Absorbed in part by 442 Superseded by 443 Superseded in part by 446 Split into ... 448 Changed back to ... allegro  #23S  Anm. nur zu besetzen, wenn der Titel indexiert werden soll. Sonst kommt er in             #81S  ... #81S Fußnote Spätere Titel #81Z Fußnote Zeitweiser Titel #23Z Zeitweiser Titel (für Index) NZN (obs.) 041  ZDB spa-spj  Anm. zu besetzen mit ZDB-Nrn der Nachfolger             spa bezieht sich auf Kategorie fra der früheren Zs., spb auf frb... 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Früherer               Titel; [Fußnote frühere Titel]    Format-Konkordanz Synopsis   Früherer Titel; Fußnote frühere Titel]  engl.: Preceding entry Definition: bei Zeitschriften-Titeländerung Pica+ 039E Subfields: $a Standardtext, z.B. "früher:" $b Code für Titelverknüpfung $c Sachtitel $d Zusatz zum Sachtitel $S MAB-Indikator $9 IdentNummer des späteren Titels Anm. gespeichert ist normalerweise nur die IdentNummer und $a Pica3 4244 Struktur: Standardtext_:             !PPN!             _@Hauptsachtitel             _:_Zusatz zum Sachtitel MAB 531 Hinweise auf frühere Ausgaben und Bände (W50) Anm. Indik. wie 526 MAB 532 Hinweise auf frühere und spätere sowie zeitweise                     gültige Titel (W50) MARC21 247 Former Title or Title Variations (R)  Subfields: $a Title proper/short title $b Remainder of title $d Designation of section (SE) [obs.] $e Name of part/section (SE) [obs.] $f Designation of volume and issue number and/or date of a work $g Miscellaneous information $h Medium $n Number of part/section of a work (R) $p Name of part/section of a work (R) $x International Standard Serial Number $6 Linkage Indic/etc.: 1st: Title added entry             0 No title added entry             1 Title added entry             2nd: Note controller             0 Display note             1 Do not display note MARC21 780 Preceding Entry (R)  Subfields: $a Main entry heading $b Edition $c Qualifying information $d Place, publisher, and date of publication $g Relationship information (R) $h Physical description of source $i Display text [NEW] $k Series data for related item (R) $m Material-specific details [NEW] $n Note (R) [NEW] $o Other item identifier [NEW] $q Parallel title (BK SE) [obs.] $r Report number (R) $s Uniform title $t Title $u Standard Technical Report Number $w Record control number (R) $x International Standard Serial Number $y CODEN designation $z International Standard Book Number (R) $6 Linkage $7 Control subfield   ** 0 Type of main entry heading   .... p Personal name   .... c Corporate name   .... m Meeting name   .... u Uniform title   .... n Not applicable   ** 1 Form of name   ** If$7/0 = p (Personal name):   .... 0 Forename   .... 1 Single surname   .... 2 Multiple surname   .... 3 Family name   ** If$7/0 = c (Corporate name) or m (Meeting name):   .... 0 Inverted name   .... 1 Jurisdiction name   .... 2 Name in direct order   ** If$7/0 = u (Uniform title) or n (Not applicable):   .... n Not applicable   ** 2 Type of record   .... a Language material   .... b Archival and manuscripts control [obs.]   .... c Printed music   .... d Manuscript music   .... e Printed map   .... f Manuscript map   .... g Projected medium   .... i Nonmusical sound recording   .... j Musical sound recording   .... k Two-dimensional nonprojectable graphic   .... m Computer file   .... o Kit   .... p Mixed material   .... r Three-dimensional artifact or    .... naturally occurring object   .... t Manuscript language material   ** 3 Bibliographic level   .... a Monographic component part   .... b Serial component part   .... c Collection   .... d Subunit   .... m Monograph/item   .... s Serial Indic/etc.: 1st: Note controller             0 Display note             1 Do not display note             2nd: Type of relationship             0 Continues             1 Continues in part             2 Supersedes             3 Supersedes in part             4 Formed by the union of ... and ...             5 Absorbed             6 Absorbed in part             7 Separated from UNIMARC 430 Continues 431 Continues in part 432 Supersedes 433 Supersedes in part UNIMARC 434 Absorbed 435 Absorbed in part 436 Formed by merger of 437 Separated from allegro  #23F  Anm. nur zu besetzen, wenn der Titel indexiert werden soll. Sonst kommt er in             #81F  ... #81F Fußnote Frühere Titel NZN (obs.) 031  ZDB fra-fro  Anm. zu besetzen mit ZDB-Nrn der Vorgänger             fra bezieht sich auf Kategorie spa der früheren Zs., frb auf spb... 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Titel von               Rezensionen    Format-Konkordanz Synopsis   Titel von Rezensionen   Pica+ 046Z  Pica3 4235  MAB 528 (W20) Anm. Indik. wie 526 allegro  #81z  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bezugswerk    Format-Konkordanz Synopsis   Bezugswerk  engl.: "Issued with" added entry Definition: Hinweis auf ein Werk, das mit dem vorliegenden in einem bibliographischen               Zusammenhang steht Pica+ 039 Subfields: $a Vortext $9 PPN des Bezugswerks Pica3 424X Struktur: Vortext:_             !PPN des Bezugswerks! Pica+ 046T Parallele Ausgaben, Fußnote 039B Verknüpfung zur größeren Einheit 039C Verknüpfung zur kleineren Einheit 039D horizontale Verknüpfung      Werte: Bei E-Dokumenten: "In: Titel der Zeitschrift" Pica3 4229 Hinweise auf parallele Ausgaben 4241 Verknüpfung zur größeren Einheit 4242 Verknüpfung zur kleineren Einheit 4243 horizontale Verknüpfung MAB 530 Titel von Bezugswerken (W50) Anm. Indik. wie 526 MAB 527 Hinweise auf parallele Ausgaben (W50) 529 Titel von fortlaufenden Beilagen (W50) MARC21 777 Issued With Entry (R)  Subfields: $a Main entry heading $b Edition $c Qualifying information $d Place, publisher, and date of publication $g Relationship information (R) $h Physical description of source $i Display text [NEW] $k Series data for related item (R) $m Material-specific details [NEW] $n Note (R) [NEW] $o Other item identifier [NEW] $q Parallel title (BK SE) [obs.] $s Uniform title $t Title $w Record control number (R) $x International Standard Serial Number $y CODEN designation $6 Linkage $7 Control subfield   ** 0 Type of main entry heading   .... p Personal name   .... c Corporate name   .... m Meeting name   .... u Uniform title   .... n Not applicable   ** 1 Form of name   ** If$7/0 = p (Personal name):   .... 0 Forename   .... 1 Single surname   .... 2 Multiple surname   .... 3 Family name   ** If$7/0 = c (Corporate name) or m (Meeting name):   .... 0 Inverted name   .... 1 Jurisdiction name   .... 2 Name in direct order   ** If$7/0 = u (Uniform title) or n (Not applicable):   .... n Not applicable   ** 2 Type of record   .... a Language material   .... b Archival and manuscripts control [obs.]   .... c Printed music   .... d Manuscript music   .... e Printed map   .... f Manuscript map   .... g Projected medium   .... i Nonmusical sound recording   .... j Musical sound recording   .... k Two-dimensional nonprojectable graphic   .... m Computer file   .... o Kit   .... p Mixed material   .... r Three-dimensional artifact or    .... naturally occurring object   .... t Manuscript language material   ** 3 Bibliographic level   .... a Monographic component part   .... b Serial component part   .... c Collection   .... d Subunit   .... m Monograph/item   .... s Serial Indic/etc.: 1st: Note controller             0 Display note             1 Do not display note             2nd: Undefined; contains a blank (#) UNIMARC 423 Issued with allegro  #81t ... #81B Fußnote Titel von laufenden Beilagen NZN (obs.) 050 Laufende Beilagen ZDB lta-ltz  Anm. Diese Buchstaben sind als Indikator einzugeben, dahinter dann die ZDB-             Nummer des Bezugswerks             Wenn kein Indikator zutrifft, gibt man einen Vortext in der zugehörigen             Kategorie tv ein, also tvb für ltb ... Kommentar: frühere und spätere Titel haben eigene Kategorien:             Pica+ 039E             ZETA fra-fro und spa-spo 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Titel von               rezensierten Schriften    Format-Konkordanz Synopsis   Titel von rezensierten Schriften  Definition: Reviewed item Pica+ 046S  Pica3 4228  Pica+ 021G Angaben zum rezensierten Werk Pica3 4007 Angaben zum rezensierten Werk MAB 526 (W20)     Indik.: # verbale Beschreibung x reziproke Beziehung y nicht reziproke Beziehung z nicht differenzierte Beziehung Anm. Form: IdNr (20 Zeich.) Vortext -&gt;Trennzeich.Ansetz.Form d. Titels UNIMARC Link to item reviewed allegro  #81s  BIS 4440  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Herkunftsangaben    Format-Konkordanz Synopsis   Herkunftsangaben  Definition: für Sonderdrucke Pica+ 046R  Pica3 4227  MAB 525  allegro  #81r  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Hinweise auf               unselbständig enthaltene Werke; [Beigabenvermerk; Supplementvermerk    Format-Konkordanz Synopsis   Hinweise auf unselbständig enthaltene Werke; Beigabenvermerk;               Supplementvermerk  engl.: Supplement note  Pica+ 046Q  Pica3 4226  MAB 524  MARC21 525 Supplement Note (R)  Subfields: $a Supplement note $6 Linkage $z Source of note information (SE) [obs.] Indic/etc.: Wenn eigene Eintragung, dann 770 allegro  #81q  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Erscheinungsweise    Format-Konkordanz Synopsis   Fußnote Erscheinungsweise   Pica+ 046P  Pica3 4225  Pica+ 020F Angaben zur Erscheinungsfrequenz, E-Journals Pica3 4208 Angaben zur Erscheinungsfrequenz (E-Journals) MAB 523 Angaben über Erscheinungsweise und Erscheinungsdauer allegro  #81p  ZDB bnm Angaben zum Erscheinungsverlauf 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Teilungsvermerk bei               fortl. Sammelwerken    Format-Konkordanz Synopsis   Teilungsvermerk bei fortl. Sammelwerken   Pica+ 046O  Pica3 4224  MAB 522 (W10) allegro  #81o  ZDB bnr Angaben zu Teilungen 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Hochschulschriftenvermerk    Format-Konkordanz Synopsis   Hochschulschriftenvermerk  engl.: Dissertation note  Pica+ 037C Subfields: $a Diss.vermerk $b Ort der Hochschulschrift $c Jahr der Hochschulschrift Pica3 4204 Struktur: [Zugl.:_]@Ort             ,_Sonstige Angaben             ,_Jahr MAB 519  MARC21 502 Dissertation Note (R)  Subfields: $a Dissertation note $b Degree type $c Name of granting institution $d Year degree granted $g Miscellaneous information $o Dissertation identifier $6 Linkage $8 Field link and sequence number UNIMARC 328 Subfields: $a Text of note Indic/etc.: Indicators blank allegro  #818 ... #819 Ort:Jahr der Hochschulschrift 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Interpretation    Format-Konkordanz Synopsis   Fußnote Interpretation  engl.: Participant or performer note  Pica+ 046N  Pica3 4223  MAB 518 (W10) Angabe der Namen von Interpreten bzw. weitere Angaben                     zur Interpretation     Indik.: a Angabe der Namen von Interpreten b weitere Angaben zur Interpretation MARC21 511 Participant or Performer Note (R)  Subfields: $a Participant or performer note $6 Linkage Indic/etc.: 1st: Display constant controller             # No information provided (VM MU) [obs.]             0 No display constant generated             1 Cast             2 Presenter (VM MU) [obs.]             3 Narrator (VM MU) [obs.]             2nd: Undefined; contains a blank (#) allegro  #81n  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Angaben zum               Inhalt    Format-Konkordanz Synopsis   Angaben zum Inhalt  engl.: Contents note Definition: Aufführung von Bänden in Form einer Fußnote Pica+ 046M  Pica3 4222  Pica+ 021O$a Sachtitel des beigef. oder enth. Werks, nicht auf HTS                     genannt MAB 517 (W10)     Indik.: # Angaben zum Inhalt a beigefügte Werke b enthaltene Werke c Inhaltsverzeichnis Anm. wenn nicht auf Haupttitelseite genannt, sonst 361 MARC21 505 Formatted Contents Note  Subfields: $a Formatted contents note $g Miscellaneous information (R) $r Statement of responsibility (R) $t Title (R) $6 Linkage Indic/etc.: 1st: Display constant controller             0 Contents             1 Incomplete contents             2 Partial contents             8 No display constant generated             2nd: Level of content designation             # Basic             0 Enhanced MARC21 504 Bibliography note (49%)  Subfields: $a Bibliography note $b Number of references UNIMARC 327 Subfields: $a Text of note (R) Indic/etc.: Indic.1: 0=note is not complete, 1:note is complete             see also 464 = piece-analytic UNIMARC 200$c Title proper by another author Indic/etc.: keine Unterscheidung, ob auf HTS genannt oder nicht allegro  #93 Inhaltsangabe (Kapitel,                     Bestandteile)  ... #81m Satzbezeichnungen (Musikstücke) ZDB bno Angaben zum Inhalt 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Schrift, Sprache und Vollständigkeit    Format-Konkordanz Synopsis   Fußnote Schrift, Sprache und Vollständigkeit  engl.: Language note  Pica+ 046L  Pica3 4221  MAB 516 (W10) Angaben über Schrift, Sprache und                     Vollständigkeit der Vorlage und musikalische Notation     Indik.: # nicht spezifiziert a Angaben über die Sprache der Vorlage b Angaben über die Schrift der Vorlage c Angaben über die Vollständigkeit der Vorlage d Angaben über die musikalische Notation MARC21 546 Language Note (R)  Subfields: $a Language note $b Information code or alphabet (R) $z Source of note information (SE) [obs.] $3 Materials specified $6 Linkage Indic/etc.: Textual note for languages and scripts of the materials             Coded information see 008'35-37 and 041 allegro  #81l  ZDB bnn  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ergänzungen               zur Gesamttitelangabe    Format-Konkordanz Synopsis   Ergänzungen zur Gesamttitelangabe  engl.: Series note  Pica+ 046K  Pica3 4220  MAB 515  UKMARC 532 Indic/etc.: Subf. $a enthält den Text             Die Eintragungsform der Serie steht dann in 8xx allegro  #81k  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Impressum    Format-Konkordanz Synopsis   Fußnote Impressum   Pica+ 046J  Pica3 4219  MAB 513 Änderungen im Impressum allegro  #81j  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Kollationsvermerk    Format-Konkordanz Synopsis   Fußnote Kollationsvermerk  engl.: Physical description note; Technical details note  Pica+ 046I  Pica3 4218  Pica3 4218 Technische Beschreibung des digitalen Masters MAB 512 Angaben zum Kollationsvermerk bzw. zur physischen                     Beschreibung     Indik.: # Angaben zum Kollationsvermerk a Angaben zur physischen Beschreibung von prim. Mikroformen UKMARC 531  UNIMARC 307 Notes pertaining to physical description UNIMARC 303 General notes pertaining to descriptive information Indic/etc.: prefer 304,5,6,8,10 allegro  #81i Bibliographische Fußnote zum                     Kollationsvermerk  ... #78 Exemplarspezifische Angaben Anm. Falls keine Exemplarsätze angelegt werden! 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Erscheinungsvermerk    Format-Konkordanz Synopsis   Fußnote Erscheinungsvermerk  engl.: Publication, distribution, etc. note  Pica+ 046H  Pica3 4217  MAB 511 Angaben zum Erscheinungsvermerk UKMARC 528  UNIMARC 306 Notes pertaining to publication, distribution, etc. UNIMARC 310 Notes pertaining to binding and availability allegro  #81h  ZDB bnm  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Ausgabebezeichnung    Format-Konkordanz Synopsis   Fußnote Ausgabebezeichnung  engl.: Remainder of edition statement  Pica+ 046G  Pica3 4216  MAB 510 Angaben zur Ausgabebezeichnung MARC21 250$b  MARC21 503 Bibliographic history note [obs.] UNIMARC 305 Notes pertaining to edition and bibliographic history  Subfields: $a Text of note Indic/etc.: Indicators blank allegro  #81g  ZDB bnl  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Verfasserangabe    Format-Konkordanz Synopsis   Fußnote Verfasserangabe   Pica+ 046F  Pica3 4215  MAB 509 Vermerke zur Verfasserangabe MARC21 550 Issuing Body Note (R)  Subfields: $a Issuing body note $z Source of note information (SE) [obs.] $6 Linkage Indic/etc.: Note explains relationship of corporate body used for added entries in 7XX UNIMARC 304 Notes pertaining to title and statement of responsibility UNIMARC 314 Notes pertaining to intellectual responsibility allegro  #81f  ZDB bnd Angaben zu Urhebern 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Quelle der Aufnahme    Format-Konkordanz Synopsis   Fußnote Quelle der Aufnahme   Pica+ 046E  Pica3 4214  MAB 508 Angabe zur Quelle der Aufnahme allegro  #81e  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Sachtitel    Format-Konkordanz Synopsis   Fußnote Sachtitel   Pica+ 046D  Pica3 4213  MAB 507 Angaben zum HST und zu den Zusätzen UNIMARC 304 Notes pertaining to title and statement of responsibility allegro  #81d  ZDB bnk  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Nebentitel    Format-Konkordanz Synopsis   Fußnote Nebentitel  Definition: wenn der Sachverhalt aus der sonstigen bibliogr. Beschr. nicht               ersichtlich ist Pica+ 046C  Pica3 4212 Struktur: Nebent:_$3260 MAB 505 Angabe von Nebentiteln Anm. nur, wenn nicht in 370 angegeben UNIMARC 312 Notes pertaining to related titles allegro  #81c  NZN (obs.) 011-018  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               Paralleltitel    Format-Konkordanz Synopsis   Fußnote Paralleltitel   Pica+ 046B  Pica3 4211 Struktur: Parallelt.:_$326x MAB 504 Angabe von Paralleltiteln Anm. nur, wenn nicht in 340... angegeben allegro  #81b  NZN (obs.) 011-018  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Deutsche               Übersetzung des Hauptsachtitels    Format-Konkordanz Synopsis   Deutsche Übersetzung des Hauptsachtitels  engl.: Translation of title by cataloging agency Definition: bei entlegenen Sprachen Pica+ 037B  Pica3 4202  Pica+ 037B Musikalische Besetzung Pica3 4202 Hinweis auf die musikalische Besetzung MAB 503 Deutsche Übers. d. HST bzw. Hinweis auf musikalische                     Form     Indik.: # Deutsche Übersetzung a Hinweis auf die musikalische Form und/oder Besetzung MARC21 242 Translation of Title By Cataloging Agency (R)  Subfields: $a Title $b Remainder of title $c Remainder of title page transcription/statement of responsibility $d Designation of section (BK AM MP MU VM SE) [obs.] $e Name of part/section (BK AM MP MU VM SE) [obs.] $h Medium $n Number of part/section of a work (R) $p Name of part/section of a work (R) $y Language code of translated title $6 Linkage Indic/etc.: 1st: Title added entry             0 No title added entry             1 Title added entry             2nd: Nonfiling characters             0-9 Number of nonfiling characters present UNIMARC 541 Translated title supplied by cataloger allegro  #80  ZDB tue  BIS 4330t Übers. HST 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               beigefügte Werke    Format-Konkordanz Synopsis   Fußnote beigefügte Werke  engl.: With note  Pica+ 046A  Pica3 4210  MAB 502 Einheitssachtitel eines beigef. oder kommentierten Werkes MARC21 501 With Note (R)  Subfields: $a With note $5 Institution to which field applies $6 Linkage allegro  #81a Beigefügtes Werk, Fußnote 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Fußnote               unaufgegliedert    Format-Konkordanz Synopsis   Fußnote unaufgegliedert  engl.: General note  Pica+ 037A$a  Pica3 4201  MAB 501 Sammelfeld für unaufgegliederte Fußoten MAB 538 Angaben zur Vervielfältigungsart MARC21 500 General Note (R)  Subfields: $a General note $l Library of Congress call number (SE) [obs.] $x International Standard Serial Number (SE) [obs.] $z Source of note information (AM SE) [obs.] $3 Materials specified $5 Institution to which field applies $6 Linkage UNIMARC 300 General note (R)  Subfields: $a Text of note Indic/etc.: Indicators blank allegro  #81  NZN (obs.) 085  BIS 4400t FUSSN 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Fußnoten    Format-Konkordanz Synopsis   Segment Fußnoten   MAB 500538  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Übergeordnete               Gesamtheit    Format-Konkordanz Synopsis   Übergeordnete Gesamtheit  engl.: Series statement/added entry - title  Pica+ 036C Übergeordnete Gesamtheit in Vorlageform (mb Werk)  Subfields: $a Artikel_@Gesamttitel $b zu ergänzender Urheber $y Zusätze zum Sachtitel $f Parallelsachtitel $y Zusätze zum Parallelsachtitel $f Parallelsachtitel... $c Verfasserangabe $l Bandangabe, Abteilungsangabe Pica3 415Y Struktur: Artikel _@Gesamttitel             _//_ zu ergänzender Urheber             _:_Zusätze zum Sachtitel             _=_Parallelsachtitel             _:_Zusätze zum Parallelsachtitel             _/_Verfasserangabe             _;_Bandangabe, Abteilungsangabe Pica+ 036E Übergeordnete Gesamtheit in Vorlageform (Serie)  Subfields: $a Serientitel $c Verfasserangabe der Serie $d Unterreihen-/Abteilungsbezeichnung $e Titel der Unterreihe $l Zählung in der Hauptreihe $m Zählung in der Unterreihe $9 IdentNummer der Serie $x Zählung in Sortierform Pica3 417Y Struktur: Artikel _@Serientitel             _/_ Verfasserangabe der Serie             _;_ Zählung in der Hauptreihe             # Unterreihen-/Abteilungsbezeichnung             _$_ Sachtitel der Unterreihe             _/_ Verfasserangabe der Unterreihe             _;_ Zählung in der Unterreihe MAB 451 Gesamttitel in Vorlageform        Werte: 452 Standardnummern des Gesamttitels, aus dessen Stammsatz: 453 IdentNummer (IdentNummer) des Stammsatzes 454 Gesamttitel in Ansetzungsform 455 Bandangabe 456 Bandangabe in Sortierform Anm. Zählung mit " ; " angehängt, aber zusätzlich in 455             Wiederholung der Struktur in 461-466 für die 2. Gesamtheit usw. MAB 461 2. Gesamttitel in Vorlageform Anm. Indikatoren wie 451 MARC21 440 Series Statement/Added Entry--Title (R) [obs. 2008]  Subfields: $a Title $n Number of part/section of a work (R) $p Name of part/section of a work (R) $v Volume number/sequential designation $w Bibliographic record control number $x International Standard Serial Number $6 Linkage Indic/etc.: 1st: Undefined; contains a blank (#)             2nd: Nonfiling characters             0-9 Number of nonfiling characters present UKMARC 440 (R) Series area - title of series in added entry heading                     form  Subfields: $a Title proper of series $b Other title information of series or subseries (R) $e Statement of responsibility relating to series or subseries (R) $k Parallel title of series or subseries (R) $l Alphabetic or numeric designation and/or title of subseries (R) $v Numbering within series or subseries (R) $w ISSN of series or subseries $0 Authority record control number Indic/etc.: Indic.1: 0=series area relates to work, 1-9: Hierarchy level: Series area             relates to volume or part of work (248 must be present with same indicator)             Indic.2: non-filing characters UNIMARC 410 Series linking entry field Indic/etc.: enthält als "eingebettete Felder" die Angaben zur Serie allegro  #85 Inhalt: Titel_$_körp. Ergänzung  _:_Abteilung, Unterreihe_  _:_ungez. Unterreihe  $s Verfasserangabe/Körperschaft $A Sortierkopf (Ansetzungstitel) $N Sortierbare Bandnummer $i ISSN $u Unterreihen-/Abteilungsbezeichnung $U Unterreihentitel $v Zählung der Unterreihe $r Reihen-Identnr Anm. Die Teilfelder können wahlweise benutzt werden, wenn ein             höherer Grad an Präzision und MAB-Konformität gewünscht wird ZDB uga-ugd Gesamttitel BIS 4200-4202t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bandangabe in               Sortierform (Serie)    Format-Konkordanz Synopsis   Bandangabe in Sortierform (Serie)   MAB 456  MAB 466 Bandangabe zur 2. Serie in Sortierform allegro  #85_$N  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bandangabe in               Vorlageform (Serie)    Format-Konkordanz Synopsis   Bandangabe in Vorlageform (Serie)   MAB 455 Bandangabe MAB 465 Bandangabe zur 2. Gesamtheit allegro  #85_  Anm. Sortierform_=_Druckform 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Gesamtheit in               Ansetzungsform    Format-Konkordanz Synopsis   Gesamtheit in Ansetzungsform   Pica+ 036D Übergeordnete Gesamtheit in Ansetzungsform (mb)  Subfields: $X Sortierzählung $9 Lemmanummer $8 Expansion $l Vorlagezählung $x maschinelle Sortierzählung Pica3 416Y Struktur: #Sortierzählung#             !Lemmanummer!             Expansion             _;_Vorlagezählung             %maschinelle Sortierzählung% Pica+ 036F Serientitel Ansetzungsform 036M Gesamtheit der Sekundärausgabe in Ansetzungsform (Serie)  Subfields: $a Gesamttitel Ansetzungsform (Serie) $9 IdentNummer der Serie $x Zählung in Sortierform Pica3 418Y Serientitel Ansetzungsform   Struktur: #sortierfähige Zählung#             !Lemmanummer!             _;_Zählung der Reihe MAB 454 1. Gesamttitel in Ansetzungsform     Indik.: Typ des Gesamtwerks # nicht spezifiziert a Verfasserwerk b Urheberwerk c Sachtitelwerk MAB 464 2. Gesamttitel in Ansetzungsform Anm. Indikator wie 454, weitere Gesamttitel in 474, 484, 494 allegro  #85_$A  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
IdentNummer des               Gesamttitels    Format-Konkordanz Synopsis   IdentNummer des Gesamttitels   Pica+ 036E$9  MAB 453 Indik.: m mehrbändiges begrenztes Werk r Schriftenreihe oder anderes fortlaufendes Sammelwerk MAB 463 IdentNummer des 2. Gesamttitels allegro  #85_$r IdentNummer der Reihe  ... #84_$m IdentNummer des mehrbd. Werks 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Standardnummern des               Gesamttitels    Format-Konkordanz Synopsis   Standardnummern des Gesamttitels  engl.: ISSN of series  MAB 452 (W20)     Indik.: a ISSN formal richtig b ISSN formal falsch c ISBN formal richtig d ISBN formal falsch e ISMN formal richtig f ISMN formal falsch z Sonstige Standardnummern Anm. siehe MAB 451 MAB 462 Standardnummern des 2. Gesamttitels (W20) MARC21 440$x  allegro  #85_$i ISSN des Gesamttitels Anm. #85_$I falsche ISSN             $j ISBN des Gesamtwerks             $J falsche ISBN             $z andere IdNr des Gesamtwerks 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Serienangabe               Vorlageform    Format-Konkordanz Synopsis   Serienangabe Vorlageform  engl.: Series untraced or traced differently  MAB 451 1. Gesamttitel in Vorlageform Anm. Die weiteren Angaben stehen in eigenen Kategorien:             452 Standardnummern des Gesamttitels, aus dessen Stammsatz:             453 Id.Nummer (Lemmanummer) des Stammsatztes             454 Gesamttitel in Ansetzungsform             455 Bandangabe             456 Bandangabe in Sortierform             Wiederholung der Struktur in 461-466 für die 2. Gesamtheit usw.             Näheres zur Struktur ==&gt; Pica+ 036E MARC21 490 Series Statement (R)  Subfields: $a Series statement (R) $l Library of Congress call number $v Volume number/sequential designation (R) $x International Standard Serial Number $6 Linkage Indic/etc.: 1st: Specifies whether series is traced             0 Series not traced             1 Series traced differently             2nd: Undefined; contains a blank (#) UKMARC 490 (R) Series area - title of series not in added entry                     heading form Indic/etc.: Subfields wie in 440             Indic.1: 0=series added entry heading not present in fields 800-840, 1=series             added entry heading present in 800-840             Indic.2: 0=series area relates to work, 1-9=relates to volume or part of work allegro  #85_=_ ... #8nr Serienstammsatz Verweisungsform 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Übergeordnete               Gesamtheit    Format-Konkordanz Synopsis   Übergeordnete Gesamtheit  engl.: Host item entry; Analytic record Definition: Angabe des Gesamtwerks, in Textform und/oder per ID-Nummer Pica+ 036  Pica3 41YY  Pica3 411Y Gesamtheit der digitalen Sammlung in Vorlageform MAB 451496 Segment Gesamttitelangaben MAB 451456 1. Gesamtheit 461466 2. Gesamtheit 471476 3. Gesamtheit 481486 4. Gesamtheit 491496 5. Gesamtheit MARC21 773 Host Item Entry (R)  Subfields: $a Main entry heading $b Edition $d Place, publisher, and date of publication $g Relationship information (R) $h Physical description of source $i Display text [NEW] $k Series data for related item (R) $m Material-specific details [NEW] $n Note (R) [NEW] $o Other item identifier [NEW] $p Abbreviated title $q Enumeration and first page $r Report number (R) $s Uniform title $t Title $u Standard Technical Report Number $w Record control number (R) $x International Standard Serial Number $y CODEN designation $z International Standard Book Number (R) $3 Materials specified $4 Relationship code $6 Linkage $7 Control subfield   ** 0 Type of main entry heading   .... p Personal name   .... c Corporate name   .... m Meeting name   .... u Uniform title   .... n Not applicable   ** 1 Form of name   ** If$7/0 = p (Personal name):   .... 0 Forename   .... 1 Single surname   .... 2 Multiple surname   .... 3 Family name   ** If$7/0 = c (Corporate name) or m (Meeting name):   .... 0 Inverted name   .... 1 Jurisdiction name   .... 2 Name in direct order   ** If$7/0 = u (Uniform title) or n (Not applicable):   .... n Not applicable   ** 2 Type of record   .... a Language material   .... b Archival and manuscripts control [obs.]   .... c Printed music   .... d Manuscript music   .... e Printed map   .... f Manuscript map   .... g Projected medium   .... i Nonmusical sound recording   .... j Musical sound recording   .... k Two-dimensional nonprojectable graphic   .... m Computer file   .... o Kit   .... p Mixed material   .... r Three-dimensional artifact or    .... naturally occurring object   .... t Manuscript language material   ** 3 Bibliographic level   .... a Monographic component part   .... b Serial component part   .... c Collection   .... d Subunit   .... m Monograph/item   .... s Serial Indic/etc.: 1st: Note controller             0 Display note             1 Do not display note             2nd: Undefined; contains a blank (#) UNIMARC 461 Link from piece or subset to set level 462 Link from piece to subset level 463 Link from a part to the piece level Indic/etc.: contains embedded fields linking the record to the upper level             Ex: 461_1$1001IdNr$1200_1$aSeries title$vVolume allegro  #84  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Begleitmaterial;               [Beigabenvermerk    Format-Konkordanz Synopsis   Begleitmaterial; Beigabenvermerk  engl.: Accompanying material  Pica+ 034K Angabe von Begleitmaterial Pica3 4063  MAB 437 Angabe von Begleitmaterialien MARC21 300$e  allegro  #77_+_  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Formatangabe    Format-Konkordanz Synopsis   Formatangabe  engl.: Dimensions  Pica+ 034I Format, Maßangaben Pica3 4062  MAB 435 Indik.: # Format (phys. Abmessung) a Durchmesser von Tonträgern MARC21 300$c  allegro  #77 Inhalt: Umfang  _:_Ill.Vermerk, Format  BIS 3750t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Illustrationsangabe; [Tonträger, technische Angaben    Format-Konkordanz Synopsis   Illustrationsangabe; Tonträger, technische Angaben  engl.: Illustrations  Pica+ 034M Illustrationsangabe, sonstige physische und technische                     Angaben Pica3 4061  MAB 434 Illustrationsangabe / Technische Angaben zu Tonträgern                     (W10)     Indik.: # Illustrationsangabe a Technisches System b Laufgeschwindigkeit bei Tonträgern c Umdrehungszahl bei Schallplatten d Aufnahme- und Wiedergabeverfahren MARC21 300$b  allegro  #77_:_ Inhalt: Umfang  _:_Ill.Vermerk  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Umfangsangabe    Format-Konkordanz Synopsis   Umfangsangabe  engl.: extent  Pica+ 034D Umfangsangabe, spezifische Materialbenennung, Technisches                     System Pica3 4060  MAB 433 Indik.: # Umfang a Zs.fass. d. Bde. nach abgeschl. Erscheinen eines mehrb. begr. Werkes b Zählungsangabe bei unselbst. erschienenen Werken c Anz. u. Materialbenennung physischer Einheiten MARC21 300$a  allegro  #77  BIS 4102t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusammenfassende               und offene Bandaufführung    Format-Konkordanz Synopsis   Zusammenfassende und offene Bandaufführung  Definition: für mehrbändige Werke und fortl. Sammelwerke MAB 432  Anm. siehe auch 405: Erscheinungsverlauf MAB 433a Zusammenfassung der Bände Anm. nach Abschluß eines begrenzten Werkes allegro  #77  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusammenfassende               Register    Format-Konkordanz Synopsis   Zusammenfassende Register  Definition: Register für mehrere Teile eines Werks Pica+ 047P  Pica3 4203  MAB 431  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bestandslücken    Format-Konkordanz Synopsis   Bestandslücken   MAB 429  allegro  #9DG_$N  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusammenfassende               Bestandsangabe    Format-Konkordanz Synopsis   Zusammenfassende Bestandsangabe   MAB 427  MARC21 866 Textual holdings allegro  #92 Bestandsangabe im Titelsatz Anm. wenn keine Bestandssätze angelegt werden sollen!  ... #92i Institutsbestand 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Erscheinungsjahr in               Vorlageform; [Entstehungsjahr; Tagesdatum    Format-Konkordanz Synopsis   Erscheinungsjahr in Vorlageform; Entstehungsjahr; Tagesdatum  engl.: date of publication  Pica+ 011@$n  Anm. gemäß RAK-WB Pica3 1100"_$_"  MAB 425 (W2)     Indik.: # Vorlageform a Ansetzungsform b Erscheinungsjahr des 1. Bandes in Ansetzungsform c Erscheinungsjahr des letzten Bandes in Ansetzungsform p Publikationsdatum bei Tonträgern (P-Datum) MAB2 426 Datumsangaben    Indik.: # Vorlageform a Normierte Form MARC21 260$c  allegro  #76  Anm. Sortierform_=_Druckform 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zählungsangabe               unselbständig erschienener Werke    Format-Konkordanz Synopsis   Zählungsangabe unselbständig erschienener Werke   MAB 420 Zusammenfassende und offene Aufführung von Teilen Anm. für mehrteilige, unselbständig erschienene Werke 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Weitere und/oder               frühere Verleger, Drucker etc.    Format-Konkordanz Synopsis   Weitere und/oder frühere Verleger, Drucker etc.   MAB2 418 Angaben zu weiteren und/oder früheren Verlegern,                     Druckern etc.Unterfelder: $a Ort(e) $b Straße der postalischen Adresse $c Hausnummer der postalischen Adresse $d Postfach der postalischen Adresse $e Postleitzahl der postalischen Adresse $f Ort der postalischen Adresse $g Name des Verlegers, Druckers etc. $h Datierung $u nicht spezifiziert Anm. Indikatoren wie 412 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Orte des 2.               Verlegers, Druckers usw.    Format-Konkordanz Synopsis   Orte des 2. Verlegers, Druckers usw.  engl.: Place of 2nd publisher  Pica+ 033A$p  Anm. 033A wird bei Bedarf als Ganzes wiederholt Pica3 4030  MAB 415  Anm. Indik. wie 410 MARC21 260$a Indic/etc.: innerhalb 260 ist jede beliebige Reihenfolge und Wiederholung erlaubt, um die             Verhältnisse der Vorlage exakt abbilden zu können UNIMARC 210$a Indic/etc.: siehe USMARC allegro  #74 Kommentar: Nur in MAB eigene Kategorie 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Drucker    Format-Konkordanz Synopsis   Drucker  engl.: Printer  Pica+ 033C Drucker  Subfields: $a Adresse des Druckers $b Adresse des Druckers - nicht vom Titelblatt $n Name des Druckers $p Druckort (W) Pica3 4045 Drucker   Struktur: (Adresse)             [Adresse nicht vom Titelblatt]             :_Name             Ort_;_Ort Pica+ 033J Drucker, Verleger oder Buchhändler bei alten Drucken Pica3 4043 Drucker, Verleger oder Buchhändler bei alten Drucken MAB 412a  MAB 417a Zweiter Drucker        Werte: hinter dem Ersch.jahr in runden Klammern MARC21 260$f  UKMARC 260$j  UNIMARC 210$g  allegro  #75d  Anm. zu belegen bei alten Drucken 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verleger    Format-Konkordanz Synopsis   Verleger  engl.: Publisher  Pica+ 033A$n  Pica3 4030"_:_"  Pica+ 033B/05 Weitere und/oder frühere Verleger Pica3 4035 Weitere und/oder frühere Verleger MAB 412 Name des 1. Verlegers, Druckers usw.     Indik.: # Verleger a Drucker b Vertrieb c Auslieferer u nicht spezifiziert MAB 417 Name des 2. Verlegers, Druckers usw. MARC21 260$b Indic/etc.: Indic.1: 1=Publ. is main entry, 0=Publ. not main entry allegro  #75  ZDB vla-vlp  Anm. voa bezieht sich auf vla, vob auf vlb usw. BIS 4002t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verleger-               Adresse    Format-Konkordanz Synopsis   Verleger-Adresse  engl.: Source for acquisition/subscription address  Pica+ 033A Subfields: $a Adresse $b Adresse nicht vom Titelblatt Pica3 4030 Struktur: (Verlegeradresse)             [Adresse nicht vom Titelblatt] MAB 411 Adresse des 1. Verlegers, Druckers usw. MAB 416 Adresse des 2. Verlegers, Druckers usw. MARC21 265 Source for Acquisition/Subscription Address [obs.]  Subfields: $a Source for acquisition/subscription address (R) [obs.] $6 Linkage [obs.] 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Druckort    Format-Konkordanz Synopsis   Druckort  engl.: Place of printing  Pica+ 033C$p  Pica3 4045  MAB 410a  allegro  #74d  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Erscheinungsort    Format-Konkordanz Synopsis   Erscheinungsort  engl.: Place of publication  Pica+ 033A$p (WP) Pica3 4030 Struktur: Ort1             _;_Ort2             _:_Verlag1             _;_Verlag2 MAB 410 Orte des 1. Verlegers, Druckers usw.     Indik.: # Verlagsort a Druckort b Vertriebsort c Auslieferungsort u nicht spezifiziert Anm. Mehrfachtrennung: " ; " MARC21 260$a  allegro  #74  Anm. Mehrfachtrennung: "; "             Normierte Eingabe; wenn abweichende Vorlageform: Eintragung des Impressums in             #73             Ortsname$gLand NZN (obs.) 007  ZDB voa-vod* Verlagsort(e) (voa Pflicht) Anm. voa bezieht sich auf vla, vob auf vlb usw. 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Mathematische               Angaben; [Maßstab; Koordinaten; Projektion    Format-Konkordanz Synopsis   Mathematische Angaben; Maßstab; Koordinaten; Projektion  engl.: Cartographic mathematical data Definition: für Karten Pica+ 035E Maßstab Anm. siehe auch 016G Pica3 4026 Maßstab Pica+ 035F Projektion 035G Koordinaten Pica3 4027 Projektion 4028 Koordinaten MAB 407 Kartographische Materialien: Mathematische Angaben Anm. Format: Maßstab ; Projektion (Koordinaten ; Äquinoktium) MARC21 255 Cartographic Mathematical Data (R)  Subfields: $a Statement of scale $b Statement of projection $c Statement of coordinates $d Statement of zone $e Statement of equinox $f Outer G-ring coordinate pairs [NEW] $g Exclusion G-ring coordinate pairs [NEW] $6 Linkage Indic/etc.: Hier als Textdaten, codierte Daten in 034 MARC21 507 Scale Note for Graphic Material  Subfields: $a Representative fraction of scale note $b Remainder of scale note $6 Linkage Indic/etc.: For Visual Materials like architectural drawings; obsolete for maps, see 255 UNIMARC 206 Indic/etc.: Scale, projection, coordinates, equinoxes 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB             Braunschweig
</fragment>
</item>
<item>
<fragment>
Erscheinungsverlauf; [Erscheinungsverlauf, normiert    Format-Konkordanz Synopsis   Erscheinungsverlauf; Erscheinungsverlauf, normiert  engl.: Dates of publication and/or volume designation Definition: Zählungen und Berichtsjahre des ersten und letzten Bandes einer               Veröffentlichung Pica+ 031@ Subfields: $a Nr. oder Datum erstes Heft $b Nummer oder Datum letztes Heft $c Nr. oder Datum erstes Heft (parallele Zählung) $d Nr. oder Datum letztes Heft (parallele Zählung) $e Nr. oder Datum erstes Heft (neue Zählung) $f Nummer oder Datum letztes Heft (neue Zählung) Pica3 4025 Struktur: Nr. oder Datum erstes Heft - Nummer oder Datum letztes Heft             _=_Nr. oder Datum erstes Heft (parallele Zählung) - Nr. oder Datum letztes Heft (parallele             Zählung)             _;_Nr. oder Datum erstes Heft (neue Zählung) - Nummer oder Datum letztes Heft (neue             Zählung) Pica+ 031N Normierter Erscheinungsverlauf Pica3 4024 Normierter Erscheinungsverlauf MAB 405  Anm. siehe auch 432 MAB2 406 Normierter ErscheinungsverlaufUnterfelder: Beginngruppe:             $5 Parallele Zählung $5 Parallele Zählung $f Sachliche Benennung $d Bandzählung $e Heft $b Tag $c Monat $j Berichtszeit bzw. Erscheinungszeit $h Abweichende Erscheinungszeit $g Kommentar zur Beginngruppe $Endegruppe             $n Bandzählung $n Bandzählung $o Heft $l Tag $m Monat $k Berichtszeit bzw. Erscheinungszeit $i Abweichende Erscheinungszeit $q Kommentar zur Endegruppe MARC21 362 Dates of Publication and/or Volume Designation (R)  Subfields: $a Dates of publication and/or sequential designation $z Source of information $6 Linkage Indic/etc.: 1st: Format of date             0 Formatted style             1 Unformatted note             2nd: Undefined; contains a blank (#) MARC21  363 Normalized Date and sequential designation (R) UKMARC 255 Subfields: $a Numeric and/or alphabetic / chronological or other designation UNIMARC 207 Material specific area: Serials - numbering  Subfields: $a Numbering: dates and volume designations $z Source of numbering information Indic/etc.: Indic.1 blank, Indic.2: 0=formatted (ISBD(S)), 1=not formatted allegro  #76p  ZDB ev (P) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ausgabevermerk    Format-Konkordanz Synopsis   Ausgabevermerk  engl.: Edition statement niederld.: Uitgave Pica+ 032@ Subfields: $a Ausgabebezeichnung $c Verfasserangabe zur Ausgabe Pica3 4020 Struktur: Ausgabebezeichnung             _/_Verfasserangabe zur Ausgabe MAB 403 Ausgabebezeichnung in Vorlageform Anm. evtl. mit Verf.Angabe zur Ausgabe MAB 400 Ausgabebezeichnung in normierter Form Anm. Form ist zwischen Austauschpartnern zu vereinbaren MARC21 250 Edition Statement (R)  Subfields: $a Edition statement $b Remainder of edition statement $3 Materials specified $6 Linkage $8 Field link and sequence number Indic/etc.: Indic.1+2 blank UKMARC 250 Subfields: $a Edition statement $c Statement of responsibility relating to the edition or subsequent                     edition statements $d supplementary statement of resp. relating to the edition $e subsequent edition statement $k Parallel edition statement / serials UNIMARC 205 Subfields: $a Edition statement $b Issue statement (ISBD Additional edition statement) $d Parallel edition statement (other lang. or script than $a) $f Statement of responsibility relating to the edition $g Subsequent statement of resp. allegro  #71  Anm. Syntax: Ausgabebezeichnung_/_Verf.Ang. d. Ausg._=_Normierte Form  ... #9DG_$E Ausgabebezeichnung des Exemplars BIS 3700t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Erscheinungsvermerk    Format-Konkordanz Synopsis   Erscheinungsvermerk  engl.: Publication, distribution etc.; Imprint  Pica+ 033 Ort, Verlag/Drucker Anm. Die Struktur ist jeweils             $a Adresse             $b Adresse - nicht vom Titelblatt             $n Name             $p Ort; Ort Pica3 4030 Struktur: Ort             _;_Ort2             _:_Verlag             _;_Verlag2 Pica+ 033B/01 Ort, Datenbankanbieter (Host) Pica3 4031 Ort : Host der digitalen Ausgabe MAB 400437 Segment Veröffentlichungsvermerk, Umfang, Beigaben MAB 410b Vertriebsort 410c Auslieferungsort MARC21 260 Publication, Distribution, etc. (imprint)  Subfields: $a Place of publication, distribution, etc. (R) $b Name of publisher, distributor, etc. (R) $c Date of publication, distribution, etc. (R) $d Plates of publisher's number for music (Pre-AACR 2) (R) $e Place of manufacture $f Manufacturer $g Date of manufacture $6 Linkage     Values: Indic.1: blank=not applicable 2 Intervening publisher 3 Current/latest publisher Indic/etc.: in $a kann "n.p." oder "s.l." stehen             Für serials: R             es kann "übergreifende" Klammern geben             Indicators obsolete UKMARC 260 Subfields: $a Place of publication (R) $b Name of publisher (R) $c Date of publication $d Full address of publisher $e statement of function of publ./distrib., etc. $f place of distribution (R) $g name of distributor (R) $h date of distribution $i place of manufacture (R) $j name of manufacturer (R) (z.B. Drucker) $c date of manufacture $l Full address of distributor Indic/etc.: Die wiederholbaren subfields können in der Reihenfolge erfaßt             werden, die für den Druck gewünscht wird. UNIMARC 210 Subfields: $a Place of publication, distrib. (R) $b Address of publisher, distributor, etc. $c Name of publisher, distrib. (R) $d Date of publication, distrib. (R) $e Place of manufacture $f Address of manufacturer (z.B. Drucker) $g Name of manufacturer $h Date of manufacture Indic/etc.: siehe Anm. zu UKMARC allegro  #74-#76  NZN (obs.) 007 (nur Ort) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Keytitle    Format-Konkordanz Synopsis   Keytitle  engl.: Key title (ISDS) Definition: der vom ISDS vergebene Kurztitel einer Zeitschrift Pica+ 026@ Subfields: $a Keytitle $b Qualifikation $c Jahresangabe Pica3 3230  MAB 376c Normierter Zeitschriftentitel, Key title MARC21 222 Key Title (R)  Subfields: $a Key title $b Qualifying information $6 Linkage Indic/etc.: 1st: Undefined; contains a blank (#) UNIMARC 530 Subfields: $a Key title $b Qualifier (Ordnungshilfe) $j Volume or dates associated with key title Indic/etc.: Indic.1: 0=Key title is same as title proper, 1=Key title differs from title             proper allegro  #23k  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
CODEN    Format-Konkordanz Synopsis   CODEN  engl.: CODEN Designation Definition: Identifikator des Chemical Abstracts Service Pica+ 007C$0 (W) Pica3 2200  MAB 376b  MARC21 030 Coden Designation (R)  Subfields: $a CODEN $z Cancelled/invalid CODEN (R) $6 Linkage UNIMARC 040 Subfields: $a CODEN $z Erroneous number Indic/etc.: Indic. blank allegro  #88c  ZDB cod*  Anm. bis zu 3 Einträge, 5stellig 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Abkürzungstitel    Format-Konkordanz Synopsis   Abkürzungstitel  engl.: Abbreviated title  Pica+ 026C  Anm. Gliederung wie 026@ Pica3 3232  MAB 376 Normierte Zeitschriftentitel (W10)     Indik.: a Kurztitel nach DIN 1502 b CODEN c Key Title nach DIN 1430 d Kurztitel nach INIS MARC21 210 Abbreviated Key Title  Subfields: $a Abbreviated title $b Qualifying information $6 Linkage Indic/etc.: 1st: Title added entry             0 No title added entry             1 Title added entry             2nd: Undefined; contains a blank (#) MARC21 211 Acronym or shortened title [obs.] Indic/etc.: Indic.1: wie 210             Indic.2: nonfiling characters UNIMARC 531  allegro  #23v  NZN (obs.) 019  ZDB sat* Standard-Abkürzungen für Titel Anm. bis zu 3 normierte Titelabkürzungen 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Weitere               Sachtitel    Format-Konkordanz Synopsis   Weitere Sachtitel  engl.: Added entry - Uncontrolled related/analytical title  Pica+ 027A Subfields: $a Sachtitel $b Zusätze zum Nebensachtitel $S MAB-Indikatoren Pica3 326Y Struktur: [Artikel_@]Sachtitel             _:_Zusätze MAB 370 Weitere Sachtitel (W50)     Indik.: a zusätzliche NE UNTER dem ST b zusätzliche NE MIT dem ST c NE unter UND mit dem ST Anm. wenn keine Eintragung gewünscht, nur als Fußnote in 505 MARC21 740 Subfields: $a Uncontrolled related/analytical title $h Medium $n Number of part/section (R) $p Name of part/section (R) $5 Institution to which field applies $6 Linkage Indic/etc.: Indic.1=nonfiling characters,             Indic.2:see 700 MARC21 246 Varying Form of Title (R)  Subfields: $a Title proper/short title $b Remainder of title $d Designation of section (SE) [obs.] $e Name of part/section (SE) [obs.] $f Designation of volume and issue number and/or date of a work $g Miscellaneous information $h Medium $i Display text $n Number of part/section of a work (R) $p Name of part/section of a work (R) $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Note controller/title added entry             0 Note, no title added entry             1 Note, title added entry             2 No note, no title added entry             3 No note, title added entry             2nd: Type of title             # No information provided             0 Portion of title             1 Parallel title             2 Distinctive title             3 Other title             4 Cover title             5 Added title page title             6 Caption title             7 Running title             8 Spine title UKMARC 745 Title added entry heading - excluding uniform titles  Subfields: $a Title added entry heading $v Adaptations (obsolete) $w ISSN Indic/etc.: Indic.1: 0=title added entry heading - excl. variant title, 1=Variant title             added title heading             Indic.2: number of non-filing characters UNIMARC 512 Cover title 513 Added title-page title   514 Caption title 515 Running title 516 Spine title 540 Additional title supplied by cataloguer 545 Section title 517 Other variant titles Indic/etc.: Subfields and indicators siehe 510 UNIMARC 520 Former title Indic/etc.: Wenn kein Split gewünscht, sondern nur Verweisung allegro  #23  Anm. Struktur wie #20  ... #20_$s Sortiertitel #20_$p PI-Ordnungswort #20p PI-Ordnungswort #20s Sortiertitel Anm. $s: Anfang des Titels in moderner Orthographie, wenn zum Ordnen             erforderlich             $p: #20p PI.Ordnungswort ebenfalls möglich, wenn in #20 nicht             erwünscht NZN (obs.) 011  ZDB sta-stz  Anm. Indikatoren:             * HST Haupteintr.(nur bei sta)             blank HST             v HST von Urh.Werk, einteilige Verw.             n PST ohne Verw.             w Nebentitel mit Verw.             k nur Verw., keine Anzeige             x wie k, wenn HST mehrteilig             y wie w, wenn HST mehrteilig 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verfasserangabe zur               gesamten Vorlage    Format-Konkordanz Synopsis   Verfasserangabe zur gesamten Vorlage   Pica+ 021N Zusätze und Verfasserangabe zur gesamten Vorlage Pica3 4011 Zusätze und Verfasserangabe zur gesamten Vorlage MAB 369  allegro  #39g  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Beigefügte               Werke    Format-Konkordanz Synopsis   Beigefügte Werke  Definition: Ein in der Vorlage enthaltenes, weiteres Werk, das auf der               Haupttitelseite genannt wird Pica+ 021M Titel des ersten auf der Haupttitelseite genannten                     beigefügten werks  Subfields: $a Sachtitel des beigef. Werks $d Zusätze zum beigef. Werk $e Körperschaftliche Ergänzung zum beigef. Werk $h Verfasserangabe zum beigef. Werk Pica3 4010 Titel des ersten auf der Haupttitelseite genannten                     beigefügten werks MAB 361  Anm. für Nebeneintr. wurden Nachsätze gebildet, die die             Ansetzungsformen enthalten; abgeschafft mit MAB2 UNIMARC 200$c Title proper by another author Indic/etc.: keine Unterscheidung, ob auf HTS genannt oder nicht allegro  #26 Beigefügtes Werk vom selben                     Verfasser Anm. Struktur wie #20  ... #20 Beigefügtes Werk von anderem Verfasser Anm. auf Stufe #01, wobei in #01 eine fingierte Zählung steht (z.B. #01             2 =) 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Unterreihen    Format-Konkordanz Synopsis   Unterreihen  engl.: Subseries  Pica+ 021C (W)  Subfields: $a Sachtitel in Vorlageform $l Zählung $x Zählung in Sortierform Pica3 4005 Struktur: *Zählung der UR*             [Artikel_]@Sachl.Benennung             _//_zu erg. Urh.             _:_Zusaetze             _=_Parallele Angaben             _//_zu erg. Urh.             _:_Zusätze zu parall. Angaben             _/_Verf.Angabe MAB 360 (W10) Anm. Je Unterreihe eine eigene 360, keine Reihung mit ". " UNIMARC 225$i Name of a part allegro  #20_/_  Anm. Wenn eine UR vorliegt, dann             #20 Ansetzungstitel_/_Unterreihe und             #19 Vorlagetitel._Unterreihe NZN (obs.) 005_Serientitel.__Unterreihe  ZDB ura-urf Unterreihenangabe in Vorlageform Anm. ura = 2.OG, urb = 3.OG usw. 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verfasserangabe    Format-Konkordanz Synopsis   Verfasserangabe  engl.: Statement of responsibility  Pica+ 021A$h  Pica3 4000_/_  MAB 359  MARC21 245$c  UKMARC 245$d Single, simple statement of responsibility UKMARC 245$e Statement of responsibility differing from, or adding to,                     information in the main entry heading 245$f Supplementary statement of responsibility UNIMARC 200$f First statement of responsibility UNIMARC 200$g (R) Subsequent statement of responsibility allegro  #39  Anm. Alle beteiligten Personen und Körperschaften in #39 anzugeben; oder             keine, dann wird die Verf.Angabe aus #40...#69 zusammengesetzt ZDB bpa  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Parallelsachtitel,               zweiter; [2. Parallelsachtitel    Format-Konkordanz Synopsis   Parallelsachtitel, zweiter; 2. Parallelsachtitel   Pica+ 027A  Anm. Vorlageform in 021A$f Pica3 326X  MAB 344-355 Parallelsachtitel 2-4 Anm. Körperschaftliche Ergänzung dazu in 346, Zusätze in 347             3. PST in 348... MAB 345 Zweiter PST in Vorlageform UNIMARC 200$d  allegro  #242  NZN (obs.) 012  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusätze zum               ersten PST    Format-Konkordanz Synopsis   Zusätze zum ersten PST   Pica+ 021A$?  Pica3 4000  MAB 343 Indik.: # keine NE a zusätzliche NE UNTER dem Zusatz b zusätzliche NE MIT dem Zusatz allegro  #24_:_  Anm. Struktur von #24 wie #20 ZDB uzb  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaftliche Ergänzung zum PST    Format-Konkordanz Synopsis   Körperschaftliche Ergänzung zum PST   Pica+ 021A$x  Pica3 4000  MAB 342 Zu ergänzende Urheber zum 1. Parallelsachtitel allegro  #24_$_  ZDB bkb  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Parallelsachtitel    Format-Konkordanz Synopsis   Parallelsachtitel  engl.: Title traced differently; Parallel title  Pica+ 027A Weitere Sachtitel Anm. Vorlageform in 021A$f Pica3 326Y Weitere Sachtitel MAB 340 Erster PST in Ansetzungsform     Indik.: # keine NE a zusätzliche NE UNTER dem Sachtitel b zusätzliche NE MIT dem Sachtitel Anm. Körperschaftliche Ergänzung dazu in 342, Zusätze in 343             Falls PST keine Eintragung bekommt, Angabe in Fußnote 504 MAB 341 Erster PST in Vorlageform oder Mischform    Indik.: # keine NE a zusätzliche NE UNTER dem Sachtitel b zusätzliche NE MIT dem Sachtitel MARC21 740 Added Entry--Uncontrolled Related/Analytical Title (R)  Subfields: $a Uncontrolled related/analytical title $h Medium $n Number of part/section of a work (R) $p Name of part/section of a work (R) $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Nonfiling characters             0-9 Number of nonfiling characters present             # Nonfiling characters not specified [obs.]             2nd: Type of added entry             # No information provided             0 Alternative entry (BK AM CF MP MU) [obs.]             1 Secondary entry (BK AM CF MP MU) [obs.]             1 Printed on card (VM) [obs.]             2 Analytical entry             3 Not printed on card (VM) [obs.] UKMARC 245$k  UNIMARC 200$d  allegro  #24  Anm. Struktur wie #20 NZN (obs.) 011  ZDB stb  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusätze zum               Hauptsachtitel    Format-Konkordanz Synopsis   Zusätze zum Hauptsachtitel  engl.: Other title information  Pica+ 021A$d  Pica3 4000_:_  Pica+ 021N Zusätze u. Verfasserangabe zur gesamten Vorlage Anm. evtl. nötig, wenn 021M vorkommt MAB 335 Indik.: # keine NE a zusätzliche NE UNTER dem Zusatz b zusätzliche NE MIT dem Zusatz MAB 365 Zusätze zur gesamten Vorlage MARC21 245$b Remainder of title UKMARC 245$b  UNIMARC 200$e  allegro  #20g Zusätze zur gesamten Vorlage NZN (obs.) 005 Titelzusatz (mit .__ an Titel angeschlossen) ZDB uza-uzz Zusätze zum Sachtitel Anm. uza gehört zu sta usw.             uzb-uzz nur in Ausnahmen BIS 3040t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Allgemeine               Materialbenennung    Format-Konkordanz Synopsis   Allgemeine Materialbenennung  engl.: General material designation  Pica+ 016H Subfields: $0 GD-Bezeichnung Pica3 1108  MAB 334  Anm. Bildliche Darstellung, Tonträger, Bildtonträger,             Medienkombination, Mikroform, Spiel, Elektronische Ressource UNIMARC 200$b  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaftliche Ergänzung zum HST    Format-Konkordanz Synopsis   Körperschaftliche Ergänzung zum HST  Definition: für Sachtitel, die ohne Körperschaftsnamen nicht               identifizierbar sind; in Vorlageform Pica+ 021A$e  Pica3 4000_//_  MAB 333 Zu ergänzende Urheber zum HST Anm. Mehrfachtrennung " ; " allegro  #20_$_  Anm. Form: Sachtitel_$_Körp.Ergänzung (wg. korrekter Sortierung) NZN (obs.) 005  Anm. Form: Sachtitel._Körp.Ergänzung ZDB bka Beteiligte Körperschaft in Vorlageform Anm. GKD-Nr. der Ans.form kommt in kla 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sachtitel in               Vorlageform    Format-Konkordanz Synopsis   Sachtitel in Vorlageform  Definition: z.B auch bei typographischen Besonderheiten zu besetzen Pica+ 127B Druckfassung Sachtitel Pica3 3480 Druckfassung Sachtitel MAB 331 Hauptsachtitel in Vorlageform oder Mischform     Indik.: # keine Nebeneintragung a zusätzliche NE unter dem ST b zusätzliche NE mit dem ST Anm. Ansetzung in 310, wenn nötig allegro  #19  Anm. In Untersätzen kommt der Bandtitel in #19, wenn er nicht für             den Index geeignet ist; die Unteraufnahme bekommt dann keine #20, während             eine Hauptaufnahme eine #20 haben muß. 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ansetzungssachtitel    Format-Konkordanz Synopsis   Ansetzungssachtitel  Definition: Nach RAK nur zu bilden, wenn HE darunter zu machen ist Pica+ 025@ Subfields: $A Verbindungscode (021M/O) $a Ansetzungssachtitel $b Indexierfeld $y Körperschaftliche Ergänzung $S MAB-Indikatoren Pica3 3220 Struktur: [Artikel_@]Ansetzungssachtitel             _:_Zusätze zum AST             _ _{Indexierfeld} MAB 310 Hauptsachtitel in Ansetzungsform     Indik.: # Keine NE a NE unter dem Sachtitel b NE mit dem Sachtitel UNIMARC 532 Expanded title  Subfields: $a Expanded title $z Language of title Indic/etc.: Indic.1: Significance             0=Exp. tit. is not signif., 1=Exp. tit. is signif., access point should be             made             Indic.2: Type of expansion, 0=Initialism, 1=Numeral, 2=Abbreviation, 4=non-             alphabetic symbols allegro  #20 Sachtitel mit Zusatz Anm. Form: Sachtitel_$_Körp.Ergänzung_/_Unterreihe_:_Zusatz             #19 enthält den Sachtitel in Vorlageform (genauer: in Kartendruckform) ZDB ata  Anm. nur bei mehr als 1 OG; keine Mischform BIS 2900t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Einheitssachtitel -               Nebeneintragung    Format-Konkordanz Synopsis   Einheitssachtitel - Nebeneintragung  engl.: Added entry - Uniform title  Pica+ 022A/01  Pica3 3211 Struktur: _@ Einheitssachtitel             _ Ordnungshilfe             ,_ Fassung(Musik)             _/_ Auswahl, Arrangement (Musik) MAB 304  Anm. MAB1: Pos.191=4, wenn HE unter/mit EST             MAB2: 030'12=4 MARC21 730 Added Entry--Uniform Title (R)  Subfields: $a Uniform title $d Date of treaty signing (R) $f Date of a work $g Miscellaneous information $h Medium $i Relationship information (R) $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section of a work (R) $o Arranged statement for music $p Name of part/section of a work (R) $r Key for music $s Version $t Title of a work $x International Standard Serial Number $0 Authority record control number $3 Materials specified $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Nonfiling characters             0-9 Number of nonfiling characters present             # Nonfiling characters not specified [obs.]             2nd: Type of added entry             # No information provided             0 Alternative entry (BK CF MP MU SE MX) [obs.]             1 Secondary entry (BK CF MP MU SE MX) [obs.]             1 Printed on card (VM) [obs.]             2 Analytical entry             3 Not printed on card (VM) [obs.] UKMARC 740 Uniform title added entry heading Indic/etc.: subfields wie in 240, zusätzlich $w ISSN 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sammlungsvermerk    Format-Konkordanz Synopsis   Sammlungsvermerk  engl.: Collective Uniform title Definition: gem. RAK Pica+ 022S Subfields: $A Verbindungscode (021M/O) $a Sammlungsvermerk (p) $c Normierter Sprachencode (z.B. ISO) $r Sprachbezeichnung nach RAK Pica3 3200 Struktur: Sammlungsvermerk             _  MAB 300  MARC21 243 Collective Uniform Title  Subfields: $a Uniform title $d Date of treaty signing (R) $f Date of a work $g Miscellaneous information $h Medium $k Form subheading (R) $l Language of a work $m Medium of performance for music $n Number of part/section of a work (R) $o Arranged statement for music $p Name of part/section of a work (R) $r Key for music $s Version $6 Linkage Indic/etc.: 1st: Uniform title printed or displayed             0 Not printed or displayed             1 Printed or displayed             2 Not printed on card, title added entry (MU) [obs.]             3 Printed on card, title added entry (MU) [obs.]             2nd: Nonfiling characters             0-9 Number of nonfiling characters present UKMARC 243 Subfields: $a Collective title $o Year of imprint $q Qualification $r Language $s Subtitle $z Material designation Indic/etc.: Indic.1: 0=Works, 2=Selections, 3=Other collective titles             Indic.2 = 0 UNIMARC 501 Subfields: $a Collective uniform title $b General material designation $c Collective uniform subtitle $k Date of publication, etc. $m Language (when part of heading) $r Medium of performance (music) $s Numeric designation (music) $u Key (music) $w Arranged statement (music) $x Topical subdivision $y Geographical subdivision $z Chronological subdivision $2 Authority system code (see 604, used only when embedded in 604) $3 Authority record number (see 604) Indic/etc.: Indic.1: 0=Complete Works, 2=Selected works, 3=Selected parts of works             Indic.2=blank allegro  #21  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Sachtitel    Format-Konkordanz Synopsis   Segment Sachtitel   MAB 3--  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bestandsangaben im               Exemplarsatz    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Bestandsangaben im Exemplarsatz  engl.: holdings statement  Pica+ 231@ Bestandsangaben in maschinell interpretierbarer Form  Subfields: $j Beginnjahr $b Tag $c Monat $d Band $e Heft $f Serienangabe $g Kommentar $k Endjahr $l Tag $m Monat $n Band $o Heft $p Serienangabe $q Kommentar $1 Aufbewahrungszeitraum $2 Beginnjahr Aufbewahrung $3 Anzahl aufbewahrter Ausgaben $4 Kommentar zu den Bestandsangaben $0 Separator zwischen Beginngruppen $5 Angabe paralleler Zählungen $6 Angabe laufender Bestände $7 Angabe von Bestandslücken $x Folgenummer Pica3 7120 Struktur: /s_sachliche Benennung             /v_Bandzählung             /a_Heft             /d_Tag             /m_Monat             /b_Berichtszeit bzw. Erscheinungszeit Beginn             /k_Kommentar             _- Laufender Bestand             /E_Berichtszeit bzw. Erscheinungszeit Ende             /A_Heft             /D_Tag             /M_Monat             /V_Bandzählung Ende             /J_Erscheinungszeit (falls abweich. von /E             /K_Kommentar             _/_Aufbewahrungszeitraum             _*_Beginnjahr Aufbewahrung             _!_Anzahl aufbewahrter Ausgaben             _@_Kommentar zu den Bestandsangaben             _;_Separator zwischen Beginngruppen             _=_Angabe paralleler Zählungen             _-_Angabe laufender Bestände             _(Angabe von Bestandslücken) Pica+ 231A Bestand nicht direkt katalogisierender Bibliotheken in                     maschinell interpretierbarer Form 231B Bestandsangaben im Anzeigeformat 231C Lücken zur Bestandsangabe (offline-Einspeisung) Pica3 43XX Bestand nicht direkt katalogisierender Bibliotheken in                     maschinell interpretierbarer Form 7121 Bestandsangaben im Anzeigeformat 7122 Lücken zur Bestandsangabe (offline-Einspeisung) 8032 Bestandsangabe ZDB 8034 Kommentar zur Bestandsangabe, Zugangsbedingungen MAB 200* Einleitender Text zur Bestandsangabe des 1. Bestandsblocks Anm. Streichung 200-205 und Neudefinition 200 im Nov.1997 MAB 201* Zusammenfassende Bestandsangabe des 1. Bestandsblocks 205* Zusammenfassende Bestandsangabe des 2. Bestandsblocks allegro  #9DG_$H  NZN (obs.) 081  ZDB bsa-bsz  BIS 7621m  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Lücken zur               Bestandsangabe    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Lücken zur Bestandsangabe   Pica+ 231@$7  Pica3 7120_()  MAB 202* Lückenangabe zum 1. Bestandsblock Anm. Streichung Nov.1997 allegro  #92_$l  ZDB lua-luz*  Anm. gehört jeweils zu bsa-bsz 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
GKD-Nummer des               Körperschaftsnamens    Format-Konkordanz Synopsis   GKD-Nummer des Körperschaftsnamens   MAB 202 IdentNummer des Namenssatzes der 1. Körperschaft     Indik.: a Überregionale Identnumer (GKD) b Regionale Identnummer c Lokale Identnummer MAB 206 IdentNummer des Namenssatzes der 2. Körperschaft allegro  #00_g  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verweisungsform               Körperschaftsname    Format-Konkordanz Synopsis   Verweisungsform Körperschaftsname   Pica+ 029K Sonstige Körperschaften (zusätzl. SUcheinstieg) Pica3 315X Sonstige Körperschaften (zusätzl. SUcheinstieg) MAB 201 Verweisungsformen zum Namen der 1. Körperschaft (W20)     Indik.: z weitere, zusätzliche Verw.form allegro  #60_=_  Anm. mehrere Verw. können mit " = " angehängt werden 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaft               als Interpret; Orchester; Musikgruppe    Format-Konkordanz Synopsis   Körperschaft als Interpret; Orchester; Musikgruppe   Pica+ 029E  Anm. Gliederung wie 029A Pica3 314Y  MAB 200e  allegro  #61i  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Sekundärkörperschaft    Format-Konkordanz Synopsis   Sekundärkörperschaft  engl.: Corporate body name - added entry  Pica+ 029F  Anm. Gliederung wie 029A Pica3 312Y  Pica+ 029G Weitere Sekundärkörperschaften Pica3 313Y Weitere Sekundärkörperschaften MAB 200b/c  MARC21 710 Added Entry--Corporate Name (R)  Subfields: $a Corporate name or jurisdiction name as entry element $b Subordinate unit (R) $c Location of meeting $d Date of meeting or treaty signing (R) $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $i Relationship information (R) $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section/meeting (R) $o Arranged statement for music $p Name of part/section of a work (R) $r Key for music $s Version $t Title of a work $u Affiliation $x International Standard Serial Number $0 Authority record control number $3 Materials specified $4 Relator code (R) $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Type of corporate name entry element             0 Inverted name             1 Jurisdiction name             2 Name in direct order             2nd: Type of added entry             # No information provided             0 Alternative entry (BK CF MP MU SE MX) [obs.]             1 Secondary entry (BK CF MP MU SE MX) [obs.]             1 Printed on card (VM) [obs.]             2 Analytical entry             3 Not printed on card (VM) [obs.] UKMARC 710 Corporate name added entry heading  Subfields: $a Entry element $c Subordinate body, or related body, government agency (R) $e additions to names (R) $i Number of conference $k date of conference $j Location of conference $p Location added to name (non-printing) $q Inverted term denoting incorporation $t Title element in name-title added entry, access required $u Title element in name-title added entry, access not required $w ISSN Indic/etc.: Indic.1: 1=name of government, 2=other             Indic.2: 0=Collaborating corp. name heading, 1=other AACR2-required added entry             heading, 2=supplementary added entry heading UNIMARC 711 Corporate body name - alternative intellectual                     responsibility (R) Indic/etc.: Subfields and indicators as in 700             Gedacht für 2. u. weitere Urheber im RAK-Sinne UNIMARC 712 Corporate body name - secondary                     intellectual responsibility (R) Indic/etc.: Subfields and indicators as in 700             Beteiligte Körp. im RAK-Sinne wären hier einzutragen allegro  #61  NZN (obs.) 021  ZDB kla-klt  Anm. nur GKD-Nr.             Indikatoren:             blank zweiteilige Verw.             s einteilige Verw.             z einteilige Verw. bei da=e             v keine Verw. BIS 2403-2409t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zusammenfassende               Bestandsangaben; [Bestandsangaben    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Zusammenfassende Bestandsangaben; Bestandsangaben   Pica+ 231D Kommentar zur Bestandsangabe Pica3 7123 Kommentar zur Bestandsangabe (Offline-Einspeisung) MAB2 200 (W)     Indik.: # HauptbestandUnterfelder: $a Einleitender Text $b Zusammenfassende Bestandsangabe $c Lückenangabe (allgemein) $d Lückenangabe für Desideratenverzeichnisse $e Kommentar zur Bestandsangabe $f Magazin- / Grundsignatur $g Standort $h Standortsignatur $k Kommentar zur Grundsignatur $n SUBITO-Lieferbedingungen $0 Sortierhilfe Anm. Neu eingeführt als Ersatz der Felder 200-329 im Nov. 1997 MAB2 210 Normierte BestandsangabenUnterfelder: 210 Beginngruppe: $5 Parallele Zählung $f Sachliche Benennung $d Bandzählung $e Heft $b Tag $c Monat $j Berichtszeit bzw. Erscheinungszeit $h Abweichende Erscheinungszeit $g Kommentar zur Beginngruppe $210 Endegruppe $n Bandzählung $o Heft $l Tag $m Monat $k Berichtszeit bzw. Erscheinungszeit $i Abweichende Erscheinungszeit $q Kommentar zur Endegruppe 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Primärkörperschaft    Format-Konkordanz Synopsis   Primärkörperschaft  engl.: Main entry - Corporate name  Pica+ 029A Subfields: $A Verbindungscode (021 M/O) $a Körperschaft $b Abteilung $c Ordnungshilfe $d Abkürzung $x Ordnungshilfe (Abteilung) $9 IdentNummer der ersten Körp. $S MAB-Indikator Anm. gespeichert wird nur die IdentNummer! Pica3 310Y Struktur: !IdentNummer!             [Artikel_@]Körperschaftsname             _ _/_Abteilung             _ |MAB-Indikator| MAB 200 Name der 1. Körperschaft in Ansetzungsform     Indik.: # Körperschaft erhält HE b Körperschaft erhält einteilige NE c ein- u. zweiteil. NE e Interpret (einteilige NE) Anm. Form: Name / Abteilung  MAB 204 Name der 2. Körperschaft in Ansetzungsform 205 Verweisungsformen zum Namen der 2. Körperschaft Anm. 24 Weitere Namen in 4er-Schritten numeriert bis 296 MARC21 110 Main Entry--Corporate Name  Subfields: $a Corporate name or jurisdiction name as entry element $b Subordinate unit (R) $c Location of meeting $d Date of meeting or treaty signing (R) $e Relator term (R) $f Date of a work $g Miscellaneous information $k Form subheading (R) $l Language of a work $n Number of part/section/meeting (R) $p Name of part/section of a work (R) $t Title of a work $u Affiliation $0 Authority record control number $4 Relator code (R) $6 Linkage Indic/etc.: 1st: Type of corporate name entry element             0 Inverted name             1 Jurisdiction name             2 Name in direct order             2nd: Undefined; contains a blank (#)             2nd: Main entry/subject relationship (BK MU SE) [obs.]             0 Main entry/subject relationship irrelevant [obs.]             1 Main entry is subject [obs.] UKMARC 110 Corporate name main entry heading  Subfields: $a Entry element $c Subordinate body, or related body, government agency (R) $e Additions to names (R) $i Number of conference $k Date of conference $j Location of conference $p Location added to name (non-printing) $q Inverted term denoting incorporation $y Designation of function Indic/etc.: Indic.1: 1=name of government, 2=other             Indic.2 =0 UNIMARC 710 Corporate body name - primary intellectual responsibility  Subfields: $a Corporate name - entry element $b Corporate name - Subdivision $c Addition to corporate name, or qualifier $g Inverted element of corp. name $h Part of corp. name other than entry elem. and inverted elem. $3 Authority record number $4 Relator code (App. C) Indic/etc.: Indic.1: 0=Corp. body, 1=meeting, Indic.2: Form of name: 0=Name in inverted             form, 1=Name entered under place or jurisdiction, 2=Name in direct order             No standards for punctuation!! allegro  #60  Anm. Name / Abteilung _GKD-Nummer ZDB kla Primärer Urheber Anm. einzutragen ist nur die GKD-Nr.             Indikator * BIS 2400-2402t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Text zur               Bestandsangabe    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Text zur Bestandsangabe  Definition: eine die Bestandsangabe einleitende Bezeichnung MAB 200204* 1. Bestandsblock 200* Einleitender Text zur Bestandsangabe des 1. Bestandsblocks 201* Zusammenfassende Bestandsangabe des 1. Bestandsblocks 202* Lückenangabe zum 1. Bestandsblock 203* Kommentar zum 1. Bestandsblock 204* Lokaldaten zum 1. Bestandsblock Anm. Die 5 Kategorien 200-204 werden bis zu 25mal wiederholt, indem jeweils 5             aufaddiert wird             Streichung und Ersatz durch 200 mit Subfields Nov.1997 MAB 205209* 2. Bestandsblock 210214* 3. Bestandsblock 325329* 26. Bestandsblock Anm. Je 5 Kategorien für einen Bestandsblock, analog 200-204 ZDB tba-tbz  Anm. enthält Angaben wie N.S., N.F., Ser.A, - Beil. zu, - Index, -             Sonderh. usw. 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Zusammenfassende Bestandsangaben    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Segment Zusammenfassende Bestandsangaben   MAB 200329*  Anm. MAB-Lokal; Streichung Nov. 1997, dann nur noch 200 mit Subfields 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Körperschaftsnamen    Format-Konkordanz Synopsis   Segment Körperschaftsnamen   MAB 2--  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Alte               Drucke    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Alte Drucke   MAB 132 (W7)     Indik.: # nicht definiert a Alte Signaturen b Exemplarspezifische bibliographische Zitate e Exemplarhinweise k Kaufvermerke m Marginalien p Provenienz Anm. auch in Satztypen z und e 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Exemplarbezogener               Kommentar    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Exemplarbezogener Kommentar  engl.: Local notes  Pica+ 237A  Pica3 4801 Struktur: Kommentar1             _-_Kommentar2 Pica+ 220B Zustand des Buches, bibliotheksinterne Hinweise 220C Bestandsschutzmaßnahmen 220D Exempl.bezogener Komm. zu Umlenkungen Pica3 4802 Exempl.bezogener Komm.. bibliotheksinterne Hinweise 4803 Bestandsschutzmaßnahmen 4804 Exempl.bezogener Komm. zu Umlenkungen MAB 130 Bibliographische Angaben zum vorliegenden Exemplar (W50) MARC21 562 Copy and Version Identification Note (R)  Subfields: $a Identifying markings (R) $b Copy identification (R) $c Version identification (R) $d Presentation format (R) $e Number of copies (R) $3 Materials specified $5 Institution to which field applies $6 Linkage Indic/etc.: Lokal zu spezifizieren MARC21 59X Local notes Indic/etc.: Lokal zu spezifizieren allegro  #9DG_$n ... #90_$n  BIS 7620m Lokale Fußnote 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Kommentar zur               Bestandsaufnahme    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Kommentar zur Bestandsaufnahme  Definition: bezieht sich auf Bestand oder Signatur Pica+ 231@$4  Pica3 7120_@_  MAB 203* Kommentar zum 1. Bestandsblock MAB 125 Bemerkungen zu den titel- und exemplarbezogenen Lokaldaten                     (W10)    Indik.: # nicht spezifiziert a benutzerrelevante Bemerkungen b verwaltungsinterne Bemerkungen allegro  #9DG_$n  NZN (obs.) 085  ZDB koa-koz  Anm. gehört jeweils zu bsa-bsz 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Eigentümer    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Eigentümer   MAB 123  Anm. auch in Satztypen z und e 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Personenname -               andere Ansetzungsformen    Format-Konkordanz Synopsis   Personen-Normdaten  Personenname - andere Ansetzungsformen   MAB 120  MAB2 820 Personennamens-Ansetzungsform nach einem weiterenRegelwerk        Werte:              (Indikatoren:) d RAK-Ansetzung Der DB e RAK-ÖB-Ansetzung f RAK-WB-Ansetzung g Sonstige RAK-Ansetzung h PI-Ansetzung i VD 16-Ansetzung j AACR-Ansetzung k LC Name Authority Ansetzung l Ansetzungsform nach den Translit.regeln der SSG 7.6 und 7.7 m Namensform mit aufgelöst. Vornamen n Ansetzungsform nach der Polnischen Nationalbibliographie z Sonstige Ansetzungsform v Bemerkungen Anm. Eine v-Kategorie kann jeder der anderen unmittelbar folgen! 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zugangsnummer;               Inventarnummer    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Zugangsnummer; Inventarnummer  engl.: Accession number  Pica+ 209C  Pica3 8100  MAB 115 Akzessionsnummer allegro  #91  Anm. Wenn nicht mit Exemplarsätzen gearbeitet wird  ... #9DG_$z Exemplarzugangsnummer BIS 7560m  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Körperschaft,               bei der die Person beschäftigt ist    Format-Konkordanz Synopsis   Normdaten-Kategorie  Körperschaft, bei der die Person beschäftigt ist  engl.: Affiliation  Pica+ 028A$p  Pica3 3000%  MAB 103 Körperschaft, bei der die 1. Person beschäftigt                     ist MAB2 817 Körperschaft, zu der eine Person in Beziehung steht                     (W10, SWD, PND) MARC21 373 Affiliation     Values:    $a Affiliation $s Start period $t End period $u URI - Uniform Resource Identifier $v Source of information $0 Record control number $2 Source of term $6 Linkage $8 Field link ad sequence number UNIMARC 700$p  allegro  #68  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
PND-Nummer des               Personennamens    Format-Konkordanz Synopsis   PND-Nummer des Personennamens   MAB 102 IdentNummer des Personennamensatzes der 1. Person     Indik.: # nicht spezifiziert a Überregionale IdentNummer der Person b Regionale IdentNummer der Person c Lokale IdentNummer der Person MAB 106 IdentNummer des Personennamensatzes der 2. Person Anm. Es geht in 4er-Schritten weiter: 110 = 3. Person usw. BIS 6010a  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Pseudonym    Format-Konkordanz Synopsis   Normdaten-Kategorie  Pseudonym  Definition: für Verw. zum wirklichen Namen, wenn dieser die Hauptansetzung ist Pica+ 028@ Subfields: $B Standardtext zum Pseudonym Pica3 200 Personenname -Verweisungsform- MAB 101a  Anm. wirklicher Name dann in 100 allegro  #4np  Anm. Mehrfachtrennung: "; " 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verweisungsformen               Personnenamen    Format-Konkordanz Synopsis   Verweisungsformen Personnenamen   Pica+ 028Z  Anm. für die aus Altdaten stammenden Verweisungsformen Pica3 309Y  MAB 101 (W50) Verweisungsformen zum Namen der 1. Person     Indik.: a Pseudonym b wirklicher Name c früherer Name d späterer Name z zusätzliche, weitere Verweisungsform allegro  #40_=_  Anm. mehrere Verw. können mit " = " angehängt werden; Doppelnamen             brauchen aber nicht so erfaßt zu werden! 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Gefeierte               Person    Format-Konkordanz Synopsis   Gefeierte Person  engl.: Honoree; Festschrift recipient Definition: Name einer Person, der eine Festschrift gewidmet ist Pica+ 028F (W) Anm. Struktur wie 028A Pica3 304Y  MAB 100f  Anm. Es kann auch statt dessen einen "Nachsatz" mit einer 100 für die             gefeierte Person geben! UNIMARC 700$4420 Indic/etc.: Relator code 420 bei einer Person bedeutet "Honoree" allegro  #59 (R) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Interpret,               Person    Format-Konkordanz Synopsis   Interpret, Person  Definition: vor allem bei Musikwerken anzuwenden Pica+ 028E (W) Anm. RAK-Ansetzungsform Pica3 303Y  MAB 100e  allegro  #57i  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verfasser, 2. u.               weitere    Format-Konkordanz Synopsis   Verfasser, 2. u. weitere  engl.: Added entry - Personal name  Pica+ 028B  Anm. Teilfelder wie 028A Pica3 300X 2. u. weitere Verfasser Pica+ 028C Sonstige beteiligte Person 028D Weitere beteiligte Personen 028L/02 Literarische, künstlerische, musikalische Beiträger Pica3 301Y Sonstige beteiligte Person 302Y Weitere beteiligte Personen 3062 Literarische, künstlerische, musikalische Beiträger MAB 100b Erste sonstige beteiligte Person Anm. Indikatoren wie bei 100 MAB 100c sonstige beteiligte Person 104,108,112... Zweiter Verfasser, 3.Verf., 4. beteil.Person... 104b Zweite beteiligte Person 105,109,113... Verweisungsformen zum Namen der 2. Person MARC21 700 Added Entry--Personal Name (R)  Subfields: $a Personal name $b Numeration $c Titles and other words associated with a name (R) $d Dates associated with a name $e Relator term (R) $f Date of a work $g Miscellaneous information $h Medium $i Relationship information (R) $j Attribution qualifier (R) $k Form subheading (R) $l Language of a work $m Medium of performance for music (R) $n Number of part/section of a work (R) $o Arranged statement for music $p Name of part/section of a work (R) $q Fuller form of name $r Key for music $s Version $t Title of a work $u Affiliation $x International Standard Serial Number $0 Authority record control number $3 Materials specified $4 Relator code (R) $5 Institution to which field applies $6 Linkage Indic/etc.: 1st: Type of personal name entry element             0 Forename             1 Multiple and single surnames             2 Multiple surname [obs.]             3 Family name             2nd: Type of added entry             # No information provided             0 Alternative entry (BK CF MP MU SE MX) [obs.]             1 Secondary entry (BK CF MP MU SE MX) [obs.]             1 Printed on card (VM) [obs.]             2 Analytical entry             3 Not printed on card (VM) [obs.] UKMARC 700 Personal name added entry heading (R)  Subfields: $a Personal name - entry element $c Dates - printing $d Second or subsequent additions to names $e Roman numerals (first Indic. 0) $e Additions to names appearing between entry element and other parts of                     the name (first indic. 1,2) $f Additions to names other than dates $h Inverted element of name (Vorname(n)!) $k Spelled out form of name - printing $l Parenthetical general designation $m Works $n Selections $o collective titles (other) $q Spelled out form of name - non-printing $r Dates - non-printing $t Title element in name-title added entry, access required (nonfiling                     characters omitted) $u title element in name-title added entry, access not required $v Adaptations (obsolete) $w ISSN $y Designation of function (not used) $z General material designation (not used) Indic/etc.: Indicators as in 100 UNIMARC 701 Personal name - alternative intellectual responsibility(R) Indic/etc.: Subfields and indicators as for 700             Gedacht für 2. und weitere Verfasser; wenn das Regelwerk keine             Haupteintragung vorschreibt, wird nur 701, nicht 700 benutzt UNIMARC 702 Personal name - secondary intellectual                     responsibility (R) Indic/etc.: Subfields and indicators as for 700             hierher kommen die beteiligten Personen im RAK-Sinne allegro  #402 2. Verfasser  ... #403 Dritter Verfasser #41 Hrsg. #42 Mitarbeiter #43 Bearbeiter #44 Begründer #45 Sammler #46 Texter #47 Übersetzer #48 Mutmaßlicher Verfasser #49 Beiträger #50 Illustrator #51 Kommentator #52 Komponist #53 Präses (bei alten Diss.) #54 Respondent (bei alten Diss.) #55 Vorredner #56 Nachredner #57 sonstige beteiligte Person [Funktionsbez.] #57a Redakteur #57b Korrespondent #57d Dirigent #57f Fortsetzer ZDB pna/pnb Person als Zeitschr.Hrsg. Anm. höchstens 2 Begründer, Hrsg. etc., in Ans.Form BIS 2001t  .... 2003-2022t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Nicht-               standardmäßige Nebeneintragung Verfasser (Nachsatz)    Format-Konkordanz Synopsis   Nicht-standardmäßige Nebeneintragung Verfasser (Nachsatz)   Pica+ 060B  Pica3 4501  MAB 100*  Anm. MAB1-Nachsatz! MAB2 statt dessen: 800-815 MAB2 800829 Segment Nichtstandardmäßige Nebeneintragungen 800 Person der 1. NE 801 Verweisungsform zur Person der 1. NE (W50) 802 Körperschaft der 1. NE 803 Verweisungsform zur Körperschaft der 1. NE (W50) 804 Einheitssachtitel der 1. NE 805 Sachtitel der 1. NE (Indik. a:Ansetzungsform, b:Mischform) 806811 Nichtstandardmäßige NE 2 806 Person der 2. NE 811 Sachtitel der 2. NE 824829 Nichtstandardmäßige NE 3 Anm. Erste Position ist |, wenn diese Felder keine Satznummer, sondern einen             Klartext enthalten! allegro  #40_=_  Anm. wie Verweisung vom Personennamen 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Signatur    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Signatur  engl.: Call number  Pica+ 209A Subfields: $a Signatur $e Exemplarnummer $f Standortcode $g Sonderstandort $d Ausleihcode, Benutzungsbeschränkung $x Ausprägung Pica3 710X Struktur: !Abteilung, Sonderstandort (6 Stellen)!             Signatur (45 Stellen)             $Exemplarnummer$             _@_Ausleihcode (1 Stelle)             _;_Sonderstandort Pica+ 231A Signatur nicht direkt katalogisierender Bibliotheken Pica3 7109 Magazinsignatur 73XX Signatur nicht direkt katalogisierender Bibliotheken MAB 100 Signatur (W2)     Indik.: a Grundsignatur b Sonderstandort c Signatur des Sonderstandortes k Kommentar zur Grundsignatur s Sortierform MAB 105 Standort 107 Zusätzliche Signatur 110 Exemplarzahl 120 Buchungsnummer 135 Buchbinderische Zählung zur bibliographischenBandzählung allegro  #9DG_$l Standort'Aufstellungssignatur  ... #9DG_$s Magazinsignatur #9DG_$e Exemplarnummer #9DG_$v Ausleihcode, Benutzungsbeschränkung ZDB sia-siz*  Anm. gehört jeweils zu bsa-bsz BIS 7510m  .... 7520m  .... 7600m  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verfasser; Erster               Verfasser    Format-Konkordanz Synopsis   Verfasser; Erster Verfasser  engl.: Author; Main entry - personal name  Pica+ 028A Subfields: $A Verbindungscode (021 M/O beigef.od.enth.W.) $C Verbindungscode (028, bei Ind. Z) $a Eintragselement (Nachname) $5 Persönlicher Name $c Präfix $d Vornamen $e Namenszusätze vor den Vornamen $l Ordnungshilfe $h Lebensdaten $f Ergänzungen hinter dem Namen $p weitere identifizierende Angaben / Körperschaft, bei der die                     Person beschäftigt ist $B Funktionsbezeichnung $9 IdentNummer des Verf. $S MAB-Indikator (bei Ind.Z: Regelwerk) Anm. RAK-Ansetzungsform [Funktionsbezeichnung]             Verweisungsformen kommen in die wiederholbare 101 Pica3 3000 Struktur: #Namenszusätze vor den Vornamen#             Vornamen@Eintragselement (Nachname)             @Persönlicher Name"             /Präfix             _ *Lebensdaten*             _(Ergänzungen hinter dem Namen)             _%weitere identifizierende Angaben / Körperschaft, bei der die Person beschäftigt ist             _[Funktionsbezeichnung]             !IdentNummer!             |MAB-Indikator (bei Ind.Z: Regelwerk)| MAB 100 Name der 1. Person in Ansetzungsform     Indik.: # Name des 1. Verfassers b Name der 1. sonstigen beteiligten Person, 1teilige NE c Name der 1. sonstigen beteiligten Person, 2teilige NE f Name der 1. gefeierten Person "Festschrift" e Name des 1. Interpreten 1teilige NE MARC21 100 Main Entry--Personal Name  Subfields: $a Personal name $b Numeration $c Titles and other words associated with a name (R) $d Dates associated with a name $e Relator term (R) $f Date of a work $g Miscellaneous information $j Attribution qualifier $k Form subheading (R) $l Language of a work $n Number of part/section of a work (R) $p Name of part/section of a work (R) $q Fuller form of name $t Title of a work $u Affiliation $0 Authority record control number $4 Relator code (R) $6 Linkage Indic/etc.: 1st: Type of personal name entry element             0 Forename             1 Multiple and single surnames             2 Multiple surname [obs.]             3 Family name             2nd: Undefined; contains a blank (#)             2nd: Main entry/subject relationship (BK MU SE) [obs.]             0 Main entry/subject relationship irrelevant [obs.]             1 Main entry is subject [obs.] UKMARC 100 Subfields: $a Personal name - entry element (Familienname) $c Dates - printing $d Second or subsequent additions to names $e Roman numerals (first Indic. 0) $e Additions to names appearing between entry element and other parts of                     the name (first indic. 1,2) $f Additions to names other than dates $h Inverted element of name (Vornamen!) $k Spelled out form of name - printing $l Parenthetical general designation $q Spelled out form of name - non-printing $r Dates - non-printing $y Designation of function Indic/etc.: $h enthält den/die Vornamen! Bei USMARC anders!             Indic.1 blank=normal             0=Given name, byname, etc.             1=entered under Single surname, single title of nobility, or last element of             name             2=compound surname             3=name of family UNIMARC 700 Personal name - primary intellectual responsibility  Subfields: $a Personal name - entry element $b Part of name other than entry element $c Additions to names other than dates $d Roman numerals $f Dates $g Expansion of initials of forename $p Affiliation/address $3 Authority record number $4 Relator code (App.C) Indic/etc.: Indic.1: blank, Indic.2: Form of name, 0=entered under forename, 1=entered             under surname             In einem Datensatz kann nur entweder 700 oder 710 oder 720 besetzt sein, nicht             zwei davon gleichzeitig! allegro  #40  BIS 2000t  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Personennamen    Format-Konkordanz Synopsis   Segment Personennamen   MAB 1--  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Einzelbandaufführung    Format-Konkordanz Synopsis   Einzelbandaufführung   MAB2 091 (W25)     Indik.: # nicht spezifiziert a Heftangabe b Bandangabe c Lückenangabe d Beilagen e Register MAB2 090 Sortierhilfe Anm. Zur Herstellung einer korrekten Abfolge der Einzelbände 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bandzählung    Format-Konkordanz Synopsis   Bandzählung  engl.: Number of volume  Pica+ 021A$x Bandzählung in Sortierform Pica+ 021A$l Bandzählung in Vorlageform MAB 090 Bandangaben in Sortierform Anm. s.a. 089 Bandaufführung in Vorlageform UKMARC 248$g  allegro  #01_Sortierform_=_Vorlageform  Anm. auf den untergeordneten Stufen #02, #03.. entsprechend             Die Nummer eines Teiles ergibt sich dann aus der Zusammensetzung aller direkt             übergeordneten Stufensätze  ... #9DG_$B Bandzählung in sortierbarer Form #9DG_$b Bandzählung in Vorlageform Anm. nur anzuwenden, wenn Exemplarsatz nicht an einen Untersatz             angehängt wird, sondern an den Hauptsatz eines mehrbd. Werkes 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Bandaufführung    Format-Konkordanz Synopsis   Bandaufführung  engl.: Second level and subsequent level title and statement of responsibility               information relating to a multipart item  MAB 089 Bandangaben in Vorlageform UKMARC 248 Subfields: $b Other title information $e Statement of responsibility of volume $f Supplementary statement of responsibility $g Number or designation of volume or part $h Title of volume or part $i Second or subsequent title by the same author in an item lacking a                     collective title $j Second or subsequent title by a different author in an item lacking a                     collective title $k Parallel title Indic/etc.: Indic.1 1-9=level of information             Indic.2 non-filing characters (for subf. $h)             Jeder Band erhält eine Aufnahme, die aus einer Hauptaufnahme des             übergeordneten Gesamtwerks besteht, plus je eine 248 mit den             bandspezifischen Angaben zu jeder Stufe, d.h. 248.10, 248.20,... allegro  #01 Sortierbare-Bandnummer = Drucknummer 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Bandangaben    Format-Konkordanz Synopsis   Segment Bandangaben   MAB 089090  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Anwenderspezifische               Angaben    Format-Konkordanz Synopsis   Anwenderspezifische Angaben   MAB2 076-088 Frei definierbare anwenderspezifische Angaben, Kennzeichen                     und Codes MAB2 080 Zugriffs- und Updateanweisungen allegro  #17  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Verknüpfung               zur Bibliotheksdatei    Format-Konkordanz Synopsis   Verknüpfung zur Bibliotheksdatei  Definition: Verbindung vom Bestandssatz zum Bibliothekssatz MAB2 072 Codierte Angaben zur besitzenden Institution        Werte:              ( 3 positionsgebundene Angaben:)             (Pos.0-2) Leihverkehrsregion BAW Baden-Württemberg, Saarland und Teile von Rheinland-Pfalz BAY Bayern BER Berlin und Brandenburg HAM Hamburg, Bremen und Schleswig-Holstein HES Hessen und Teile von Rheinland-Pfalz MEC Mecklenburg-Vorpommern NIE Niedersachsen NRW Nordrhein-Westfalen und Teile von Rheinland-Pfalz SAA Sachsen-Anhalt SAX Sachsen THU Thüringen WEU Europäisches Ausland WWW Regional und National übergreifende Bestände             (Pos.3) Leihverkehrsrelevanz der besizenden Bibliothek l leihverkehrsrelevante Bibliothek n nicht leihverkehrsrelevante Bibliothek u unbekannte bzw. nicht definierte Relevanz             (Pos.4) Benutzungsbeschränkungen l nur für den Lesesaal m nur für Mitglieder p Präsenzbestand s für die Benutzung gesperrt u sonstige Ausleihbeschränkungen             (Pos.5) Geschäftsgangsstatus ZDB bib  Anm. Format: RkInP             Rk=Regionalkennung, 2 Ziffern der Postleitzahl             In=Individualnummer, P=Prüfziffer 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Codierte Angaben               physikalische Form    Format-Konkordanz Synopsis   Codierte Angaben physikalische Form  engl.: Physical description fixed field  Pica+ 016E  Pica3 1105  MAB2 070075 Anwenderspezifische Daten und Codes MARC21 007 PHYSICAL DESCRIPTION FIXED FIELD (R)     Values: Position 0 indicates category of material: a Map c Computer file d Globe f Tactile material g Projected graphic h Microform k Nonprojected graphic m Motion picture o Kit q Notated music r Remote-sensing image s Sound recording t Text v Videorecording z Unspecified material Indic/etc.: Inhalt abhängig von Category of material in 007'0, s. dort             Dient der codierten Beschreibung der verschiedenen Teile des Katalogisats, als             Ergänzung zu 300 UKMARC 037 (R)  Subfields: $a Physical description code (R) Indic/etc.: nur für non-books; 6 Großbuchstaben, Bedeutung abhängig vom 1.             Buchstaben (s. 037P0); linksbündig, rechts mit A aufgefüllt! allegro  #77X  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Normdatenspezifische Codierungen    Format-Konkordanz Synopsis   Normdaten-Kategorie  Normdatenspezifische Codierungen   Pica+ 008A$a Teilbestands- und Verwendungskennzeichen Pica3 011 Struktur: a Namen 1500-1850             d DMB             e Namen aus dem osteuropäischen und islamischen Kulturkreis, zu transliterierende Namen             f Namen der Formalerschließung (für Titelverknüpfung)             i Namen der Formalerschließung, Informationsdatensatz             m Namen für Musikschaffende (auch Interpreten usw.)             n PMA (Personennamen des Mittelalters)             o PMA, Druckausgabe             p PAN (Personennamen der Antike)             s Namen aus der Sacherschließung (SWD)             z ZKA-Namen Pica+ 008B$a Autorisierungskennzeichen 008C$a Herkunftskennzeichen, Bibliothekssigel Pica3 012 Autorisierungskennzeichen 013 Herkunftskennzeichen, Bibliothekssigel   Struktur: (Pos.1) Autorisierende Stelle             b BSB             d DDB (einschl. DMA)             h HBZ             k "kontrolliert" (d.h. bibliographisch überprüft)             r redigiert in der DBI-PND             s SWD             z ZKA             (Pos.2)v mit DDB-Titeldaten verknüpft MAB2 068 Indik.: # nicht spezifiziert a Teilbestandskennzeichen b Autorisierungskennzeichen c Verwendungskennzeichen d Herkunftskennzeichen e Nutzungskennzeichen z sonstige Codierung Anm. Wenn 068 besetzt, muß Pos.23 =p,k,s sein             Struktur ist Vereinbarungssache 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Normdatenspezifische Angaben zur SWD    Format-Konkordanz Synopsis   Schlagwort-Normdaten  Normdatenspezifische Angaben zur SWD   MAB2 067 Werte:              (Pos.0) Schlagwortkategorie p Personenschlagwort k Körperschaftsschlagwort (für Körperschaftsnamen, die                     unter ihrem Individualnamen angesetzt werden) c Körperschaftsschlagwort (für Körperschaften, die unter                     einem Geographikum angesetzt werden) g geographisch/ethnographisches Schlagwort t Sachtitel eines Werkes s Sachschlagwort f Formschlagwort z Zeitschlagwort             (Pos.1-6) Permutationskennzeichen für 801-805 0 Feld wird nicht permutiert 1 Feld 801 wird permutiert             (Pos.7) Hinweissatz a Hinweissatz zur Benutzung in der SWD 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Normdatenspezifische Angaben zur GKD    Format-Konkordanz Synopsis   Körperschafts-Normdaten  Normdatenspezifische Angaben zur GKD   MAB2 066 Werte:              (Pos.0) Typ der Körperschaft # nicht spezifizierte Körperschaft c Kongreß (pauschal) d Kongreß (einzeln) f Firma g Gebietskörperschaft k kirchliche Körperschaft m musikalische Körperschaft u Un-Körperschaft             (Pos.1) Stufe der Körperschaft # oberste Stufe a nachgeordnete Stufe Anm. Wenn 066 besetzt, muß Pos.23 mit 'k' besetzt sein 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Normdatenspezifische Angaben zur PND    Format-Konkordanz Synopsis   Personen-Normdaten  Normdatenspezifische Angaben zur PND  engl.: Gender  MAB2 065 Werte:              (Pos.0) Individualisierungskennzeichen a Individualisierter Personennamensatz b Nicht-individualisierter Personennamensatz             (Pos.1) Geschlecht m männlich w weiblich             (Pos.2) Namenstyp a Pseudonym b Verlagspseudonym c Sammelpseudonym d fiktive Person (z.B. literarische Gestalt) e Familien- oder Geschlechtername f Person, stellvertretend für ihre Familie g Person, stellvertretend für eine ihr zugeordnete Einrichtung                     (keine Körperschaft)             (Pos.3) Personentyp a Person mit modernem Namen in einer europäischen Sprache b Person mit modernem Namen in einer nichteuropäischen Sprache c Person mit biblischem Namen d Person mit altgriechischem Namen e Person mit altrömischem Namen f Person mit sonstigem Namen des Altertums g Person mit mittelalterlichem Namen in einer europäischenSprache h Person mit mittelalterlichem Namen in einer nicht-europäischen                     Sprache i Person mit byzantinischem Namen j Person mit Fürstennamen k Person mit Namen eines geistlichen Würdenträgers MARC21 375 Gender  Subfields: $a Gender $s Start period $t End period $u URI - Uniform Resource Identifier $v Source of information $0 Record control number $2 Source of term $6 Linkage $8 Field link ad sequence number Indic/etc.:  male/female MARC21  Family information  Subfields: $a Type of family $b Name of prominent member $c Hereditary title $s Start period $t End period $u Uniform Resource Identifier URI $v Source of information $0 Record control number $2 Source of term $6 Linkage $8 Field link and sequence number 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Normdatenspezifische Angaben    Format-Konkordanz Synopsis   Segment Normdatenspezifische Angaben   MAB 065069  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Filmmaterial               Mikroform    Format-Konkordanz Synopsis   Filmmaterial Mikroform  engl.: Base of film  MAB 057'10 Trägermaterial Mikroform        Werte: a Sicherheitsmaterial: Polyester, Polyethylenerephthalat b Sicherheitsmaterial: Acetat c Kein Sicherheitsmaterial (z.B: Cellulosenitrat) u Unbekanntes Trägermaterial v Verschiedene Trägermaterialien x (Nicht anwendbar) MARC21 007h'12 Base of film     Values: # Not a safety base [obs.]   Safety base a Safety base, undetermined c Safety base, acetate undetermined d Safety base, diacetate p Safety base, polyester r Safety base, mixed t Safety base, triacetate Nitrate i Nitrate base m Mixed base (nitrate and safety) n Not applicable u Unknown z Other Indic/etc.: Werte wie bei UNIMARC UNIMARC 130$a'10 Values: a Safety base b Not a safety base (e.g., nitrate) u Unknown film base x (not applicable) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Filmgeneration    Format-Konkordanz Synopsis   Filmgeneration  engl.: Generation of microfilm  MAB 057'_9  Anm. Werte wie bei UNIMARC MARC21 007h'11 Generation     Values: a First generation (master) b Printing master c Service copy m Mixed generation u Unknown Indic/etc.: Werte wie bei UNIMARC UNIMARC 130$a'_9 Values: a First generation microform b Printing master of microform c Service copy u Unknown microform generation v Mixed microform generations 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Emulsion               Mikrofilm    Format-Konkordanz Synopsis   Emulsion Mikrofilm  engl.: Emulsion on film  MAB 057'_8  Anm. Werte wie bei UNIMARC MARC21 007h'10 Emulsion on film     Values: a Silver halide b Diazo c Vesicular m Mixed emulsion n Not applicable u Unknown z Other UNIMARC 130$a'_8 Values: a Silver halide b Diazo c Vesicular u Unknown emulsion v Mixed emulsion x (not applicable) z Other emulsion 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Farbe               Mikroform    Format-Konkordanz Synopsis   Farbe Mikroform  engl.: Colour of microform  MAB 057'_7  Anm. Werte wie bei UNIMARC MARC21 007h'09 Indic/etc.: Werte anders als bei UNIMARC (?) UNIMARC 130$a'_7 Values: a Monochrom b Colour u Unknown color v Varying color 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Mikroform               Verkleinerungsrate    Format-Konkordanz Synopsis   Mikroform Verkleinerungsrate  engl.: Specific Reduction Ratio Definition: die zur Lesbarkeit nötige Vergrößerung MAB 057'_4-6 Spezifische Verkleinerungsrate MARC21 007h'06-8 Indic/etc.: Werte wie bei UNIMARC UNIMARC 130$a'_4-6 Indic/etc.: Angabe rechtsbündig mit führenden Nullen, z.B. 048             unbekannte Ziffern durch u ersetzen             unbekannten Faktor durch Blanks ersetzen 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB             Braunschweig
</fragment>
</item>
<item>
<fragment>
Verkleinerungsfaktor Mikrofilm    Format-Konkordanz Synopsis   Verkleinerungsfaktor Mikrofilm  engl.: Reduction ratio; Microform reduction ratio  MAB 057'_3  Anm. Werte wie bei UNIMARC MARC21 007h'05 Indic/etc.: Werte wie bei Unimarc UNIMARC 130$a'_3 Values: a Low reduction b Normal reduction, 16x - 30x c High reduction, 31x - 60x d Very high reduction, 61x - 90x e Ultra-high reduction, 91x - u Unknown reduction v Varying reduction 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Mikrofilmformat    Format-Konkordanz Synopsis   Mikrofilmformat  engl.: Dimensions - microform  MAB 057'_2 Format der Mikroform Anm. Werte wie bei UNIMARC MARC21 007h'04  UNIMARC 130$a'_2 Values: a __8 mm microfilm d _16 mm microfilm f _35 mm microfilm g _70 mm microfilm h 105 mm microfilm l 3x5 in. = 8x13 cm microfiche m 4x6 in. = 11x15 cm microfiche o 6x9 in. = 16x23 cm microfiche p 3.25x7.375 = 9x19 cm aperture card u Unknown dimensions z Other microform dimensions 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Polarität    Format-Konkordanz Synopsis   Polarität  engl.: Polarity  MAB 057'_1  Anm. Werte wie bei UNIMARC MARC21 007h'03 Indic/etc.: Werte wie bei UNIMARC UNIMARC 130$a'_1 Values: a Positive b Negative d Mixed polarity u unknown polarity 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Codierte Angaben zu               Mikroformen    Format-Konkordanz Synopsis   Codierte Angaben zu Mikroformen  engl.: Coded data field: Microforms; Physical attributes: Microforms  MAB 057 Materialspezifische Codes für Mikroformen (W10) Anm. besteht aus 9 Elementen (11 Zeichen) mit fester Bedeutung, siehe UNIMARC MARC21 007h Physical description fixed field--MICROFORM Indic/etc.: besteht aus 9 Elementen mit fester Länge             siehe unter 007h'1...              Wenn Pos.0 in 007 = h ist, liegt ein Microform vor, die Bedeutung der             restlichen Positionen in 007 beruht darauf UNIMARC 130 Subfields: $a Microform Coded Data - Physical Attributes Indic/etc.: besteht aus 9 Elementen mit fester Länge             siehe unter 130$aP0... allegro  #77m  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Nachlässe und               Autographen, Codes    Format-Konkordanz Synopsis   Nachlässe und Autographen, Codes   MAB2 053  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Frühere               Erscheinungsform    Format-Konkordanz Synopsis   Frühere Erscheinungsform   MAB2 052'13-14  Anm. Gleiche Codes wie Position 0 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zeitschriften,               codierte Angaben    Format-Konkordanz Synopsis   Zeitschriften, codierte Angaben  engl.: Coded data field: Serials  Pica+ 018@ Erscheinungsfrequenz Pica3 1800  MAB 052 Veröffentlichungsspezifische Angaben zu fortlaufenden                     Sammelwerken UNIMARC 110 Coded data field: Serials     Values: a monographic series b multipart item c series-like phrase (not to be considered a series) z (other) allegro  #77p  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Computerdatei;               [Dateityp    Format-Konkordanz Synopsis   Computerdatei; Dateityp   MAB2 050'_8 Werte: a nicht spezifizierter Datenträger b Diskette(n) c Magnetbandkassette(n) d Optische Speicherplatte(n) (z.B. CD-ROM, CD-I, DVD, Photo-CD, WORM) e Einsteckmodul(e) f Magnetband g Computerdatei(en) im Fernzugriff z Sonstige Computerdateien MAB2 652 Spezifische Materialbenennung und Dateityp    Indik.: a RAK-NBM b ISBD-CFUnterfelder: $a Spezifische Materialbenennung $b Dateityp 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Materialtyp               Visuelle Materialien    Format-Konkordanz Synopsis   Materialtyp Visuelle Materialien  engl.: Type of visual material  MAB 050'_5-6 Werte: _ Tonträger: aa CD-DA ab CD-Bildplatte ac Tonband ad Compakt-Kassette ae Micro-Cassette af DAT-Cassette ag DCC-Cassette ah Cartridge (8-track) ai Drahtton aj Schallplatte ak Walze (Zylinder) al Klavierrolle am Filmtonspur an Tonbildreihe   Film, visuelle Projektion: ba Filmspulen bb Film-Cartridge vc Film-Cassette bd Anderes Filmmedium be Filmstreifen bf Filmstreifen-Cartridge bg Filmstreifen-Rolle bh Anderer Filmstreifentyp bi Diapositiv, Diaset, Stereograph bj Arbeitstransparent bk Arbeitstransparentstreifen   Videoaufnahme: ca Videobandkassette cb Videobandcartridge cc Videobandspulen cd Bildplatte (Videodisk) ce Anderer Videotyp da Foto db Kunstblatt (Originalgraphik, Nachdruck) dc Plakat   Sonstige Angaben uu unbekanntes Medium yy nicht spezifiziertes Medium zz sonstige audiovisuelle Medien MARC21 008'33VM Values: a Art original b Kit c Art reproduction d Diorama f Filmstrip g Game i Picture k Graphic l Technical drawing m Motion picture n Chart o Flash card p Microscope slide q Model r Realia s Slide t Transparency v Videorecording w Toy z Other visual material UNIMARC 117$a'0-1 Values: aa Study kit ab Laboratory and construction kits ac Specimens (biol. etc.) ad Fauna ae Flora af Minerals ag Microscope slides ah Jigsaws ai Tools and equipment aj Arms ak Containers al Furniture am Transport an Textiles ao Clothes ap Games and recreation aq Toys ar Dolls as Models at Models for making ba Dioramas bb Replicas bc Sculptures bd Design objects be Industrial productions bf Machines bg Coins bh Medals bi Jewellery bj Artefacts uu Unknown material zz Other material 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Materialart -               Mikroform    Format-Konkordanz Synopsis   Materialart - Mikroform  engl.: Specific material designation - microform  MAB 057'_0  Anm. Werte wie bei UNIMARC MAB2 050'_3 Mikroform        Werte: a nicht spezifizierte Mikroform b Mikroform-Master c Sekundärform MARC21 007h'01 Values: a Aperture card b Microform cartridge c Microfilm cassette d Microfilm reel e Microfiche f Microfiche cassette g Micro opaque h Microfilm slip j Microfilm jacket u unknown microform type z Other microform Indic/etc.: Werte wie bei UNIMARC UNIMARC 130$a'_0 Indic/etc.: Werte wie bei MARC21 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB             Braunschweig
</fragment>
</item>
<item>
<fragment>
Papierzustand    Format-Konkordanz Synopsis   Papierzustand   MAB2 050'_2 Werte: a nicht spezifizierter Papierzustand b säurefreies, alterungsbeständiges Papier c kein säurefreies, kein alterungsbeständiges Papier d entsäuertes Papier e Pergament z sonstiges Papier 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment               Veröffentlichungs- und materialspezifische Angaben    Format-Konkordanz Synopsis   Segment Veröffentlichungs- und materialspezifische Angaben   MAB2 050064  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Datum und               Selektionsschlüssel (Exemplar)    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  Datum und Selektionsschlüssel (Exemplar)  Definition: Kennungen für Selektionszwecke, z.B. um Kartendruck zu veranlassen Pica+ 208@ (P)  Subfields: $a Exemplar-Bearbeitungsdatum $b Selektionsschlüssel Pica3 70YX Struktur: TT-MM-JJ             _:_Selektionsschlüssel (z=Neu, a=Bestell, n=alt) MAB 042* Prioritätszahl ZDB MAB2 075 ZDB-Prioritätszahl (W3) allegro  #97a Selektionsschlüssel für Zeitschriften Anm. 1 = lfd.Zs. d. Hauptbibl.             2 = lfd.Zs.             3 = nicht mehr lfd. Zs.  ... #90_$d Exemplar-Änderungsdatum ZDB prz* ZDB Prioritätszahl 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Notationsspezifische Codierungen    Format-Konkordanz Synopsis   Normdaten-Kategorie  Notationsspezifische Codierungen   MAB2 041  Anm. 2 Byte: Art der Systematik; Art der Eppelsheimer-Notation 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
SSG-               Angaben    Format-Konkordanz Synopsis   Lokaldaten-Kategorie  SSG-Angaben  Definition: Nummer = SSG-Nummer der DFG               Notation = Bibliothekseigene Notation zur Klassifizierung des SSG-Bestands Pica+ 045V SSG-Angaben 045W SSG-Selektionskennzeichen (OLC-Ausschnitte) 045Y SSG-Selektionskennzeichen (OLC-OPACs)  Subfields: $a SSG-Notation $b SSG-Nummer $c ZDB-Priorität Pica3 5056 SSG-Angaben 5057 SSG-Selektionskennzeichen (OLC-Ausschnitte) 5058 SSG-Selektionskennzeichen (OLC-OPACs)   Struktur: SSG-Notation             #SSG-Nummer             %ZDB-Priorität MAB 040* SSG-Nummer MAB2 073 SSG-Nummer Anm. verwendbar auch in Titelsätzen MAB 041* SSG-Notation MAB2 074 SSG-Notation ZDB ssn* SSG-Notation 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Notation für               Normdaten; [Systematiknummer für Normdaten    Format-Konkordanz Synopsis   Normdaten-Kategorie  Notation für Normdaten; Systematiknummer für Normdaten   Pica3 810  MAB 810*  MAB2 040 SWD-Notation Anm. Mehrfachtrennung: 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Zeitcode    Format-Konkordanz Synopsis   Zeitcode  engl.: Time period code; Chronological coverage code Definition: Zeitraum oder Zeitpunkt in codierter Form Pica+ 031@01  Anm. 2stellige Codes, z.B. gk = Kirchengeschichte Pica3 1111  Pica+ 045R Zeitschlagwort (Jahreszahlen) 042H Zeitcode DDK Pica3 531X Zeitschlagwort (Jahreszahlen) 814 Zeitcode DDK MAB2 039 Zeitcode (W5)     Indik.: # (nicht spezifiziert a Zeitcode der UDK b Time Period Code der LC c Zeitcode nach Jahreszahlen z Sonstiger Zeitcode MAB 902z Zeitschlagwort als Kettenglied MARC21 045 Time Period of Content  Subfields: $a Time period code (R) $b Formatted 9999 B.C. through A.D. time period (R) $c Formatted pre-9999 B.C. time period (R) Indic/etc.: 1st: Type of time period in subfield $b or $c             # Subfield $b or $c not present             0 Single date/time             1 Multiple single dates/times             2 Range of dates/times             2nd: Undefined; contains a blank (#) MARC21 648 Subject added entry--Chronological term (R)  Subfields: $a Chronological term $v Form subdivision $x General subdivision$y Chronological subdivision $z Geographic subdivision (R) $0 Authority record control number $2 Source of heading or term (NR) (Code from: MARC Code Lists for                     Relators) $3 Materials specified (NR) $6 Linkage (NR) See Control Subfields $8 Field link and sequence number (R) (See Control Subfiels)     Values: #4021st: Type of date or time period # No information provided 0 Date or time period covered or depicted 1 Date or time period of creation or origin 2nd: Thesaurus: 0 - LCSH 1 - LC Children's Lit. 2 - MeSH 3 - NAL 4 - Not specif. 5 - Canadian SH 6 - Rép. de vedettes- matières 7 - Source specified in $2 UNIMARC 122 Coded data field: Time period of item content UNIMARC 661 Values: Appendix E allegro  #30h  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Segment Allgemeine               codierte Angaben    Format-Konkordanz Synopsis   Segment Allgemeine codierte Angaben   MAB2 036049  2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Angaben zum               Redaktionssatz    Format-Konkordanz Synopsis   Angaben zum Redaktionssatz  Definition: In Redaktionssätzen MAB2 031 Unterfelder: $a Art des Redaktionssatzes (abcde) $b Stand der redaktionellen Bearbeitung (abcd) $c Weitere Angaben zum Redaktionssatz $d Inhalt des neuen (korrigierten) Feldes $e Grund des Redaktionssatzes 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Regeln für               Normdatenansetzung    Format-Konkordanz Synopsis   Regeln für Normdatenansetzung   MAB2 030'_6 Werte: g RNA (Nachlässe und Autographen) h VD 16 i VD 17 k LoC Name Authority l PND m GKD n SWD r RSWK s RSWK Alternativ z Sonstige Regeln 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Ansetzungsstatus    Format-Konkordanz Synopsis   Ansetzungsstatus  Definition: bibliothekarischer Bearbeitungszustand MAB2 030'_1 Werte: a überregional autorisierte Ansetzungsform b regional autorisierte Ansetzungsform c lokal autorisierte Ansetzungsform d nicht autorisierte Ansetzungsform e maschinell ermittelte Ansetzungsform f vorläufige Ansetzung z (keine Angabe) 2013-05-02 Auszug aus der allegro -Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
<item>
<fragment>
Codierte Angaben               zum Datensatz    Format-Konkordanz Synopsis   Codierte Angaben zum Datensatz   Pica3 8600 Exemplarbezogene Abrufzeichen MAB2 030  Anm. Pos.0=Bearbeitungsstatus             1=Ansetzungsstatus (Normdateien)             2=Zeichenvorrat             3=Zeichencode             4=Regeln für die Formalerschließung             5=Regeln für die Sacherschließung             6=Regeln für die Normdatenansetzung (PND, GKD, SWD)             7=Transliteration/Transkription             8=Stichwortkennung             9-10=Fächerstatistik DBS             11=Haupteintragungstyp             12=Ordnungssachtitel 2013-05          -02 Auszug aus der allegro -             Formatedatenbank (c)2005 UB Braunschweig
</fragment>
</item>
</root>